(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun w1 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun w2 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  w2 (_ bv3 32) ) (concat  (select  w2 (_ bv2 32) ) (concat  (select  w2 (_ bv1 32) ) (select  w2 (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  w1 (_ bv3 32) ) (concat  (select  w1 (_ bv2 32) ) (concat  (select  w1 (_ bv1 32) ) (select  w1 (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) (?B4 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (let ( (?B5 (bvadd  (bvmul  ?B4 ?B2 ) (bvmul  ?B3 ?B1 ) ) ) ) (and  (and  (and  (and  (and  (bvsle  (_ bv0 32) ?B2 ) (bvsle  ?B2 (_ bv10 32) ) ) (bvsle  (_ bv0 32) ?B1 ) ) (bvsle  ?B1 (_ bv10 32) ) ) (=  false (bvslt  ?B5 ?B4 ) ) ) (bvslt  ?B5 ?B3 ) ) ) ) )
(check-sat)
(exit)
