--- Program 81 ---
[run.istats content]
version: 1
creator: klee
pid: 9041
cmd: 63.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: Mem : MemoryUsage
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime Mem I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=63.c
fn=gcd
13 5 1 0 0 0 1 11 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 10 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 9 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 8 0 0 0 1 0 0 0 
17 5 1 0 0 0 1 7 0 0 0 0 0 0 0 
18 6 1 0 0 0 1 5 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 4 0 0 0 1 0 0 0 
20 7 1 0 0 0 1 3 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 2 0 0 0 1 1 1 24930 
24 7 1 0 0 0 1 2 0 0 0 0 0 0 0 
25 7 1 0 0 0 1 1 0 0 0 1 0 0 0 
28 8 0 0 0 0 0 0 0 0 0 0 0 0 0 
29 8 0 0 0 0 0 0 0 0 0 0 0 0 0 
32 9 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 63:
[62] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var a int 0
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
(query [] false)
Test case: test000002
[Parsed from .ktest]
var a int 1
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000003
[Parsed from .ktest]
var a int 2
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000004
[Parsed from .ktest]
var a int 3
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000005
[Parsed from .ktest]
var a int 4
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000006
[Parsed from .ktest]
var a int 5
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000007
[Parsed from .ktest]
var a int 6
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000008
[Parsed from .ktest]
var a int 7
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000009
[Parsed from .ktest]
var a int 8
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000010
[Parsed from .ktest]
var a int 9
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000011
[Parsed from .ktest]
var a int 10
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000012
[Parsed from .ktest]
var a int 11
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000013
[Parsed from .ktest]
var a int 12
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000014
[Parsed from .ktest]
var a int 13
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000015
[Parsed from .ktest]
var a int 14
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000016
[Parsed from .ktest]
var a int 15
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000017
[Parsed from .ktest]
var a int 16
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000018
[Parsed from .ktest]
var a int 17
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000019
[Parsed from .ktest]
var a int 18
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000020
[Parsed from .ktest]
var a int 19
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000021
[Parsed from .ktest]
var a int 20
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000022
[Parsed from .ktest]
var a int 21
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000023
[Parsed from .ktest]
var a int 22
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000024
[Parsed from .ktest]
var a int 23
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(assert (= 0 b ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0) (Eq 0 BvVar b)] false)
Test case: test000025
[Parsed from .ktest]
var a int 25
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(assert (= 0 b ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0) (Eq 0 BvVar b)] false)
Test case: test000026
[Parsed from .ktest]
var a int 26
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000027
[Parsed from .ktest]
var a int 27
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000028
[Parsed from .ktest]
var a int 28
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000029
[Parsed from .ktest]
var a int 29
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000030
[Parsed from .ktest]
var a int 30
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000031
[Parsed from .ktest]
var a int 31
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000032
[Parsed from .ktest]
var a int 32
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000033
[Parsed from .ktest]
var a int 33
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000034
[Parsed from .ktest]
var a int 34
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000035
[Parsed from .ktest]
var a int 35
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000036
[Parsed from .ktest]
var a int 36
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000037
[Parsed from .ktest]
var a int 37
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000038
[Parsed from .ktest]
var a int 38
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000039
[Parsed from .ktest]
var a int 39
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000040
[Parsed from .ktest]
var a int 40
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000041
[Parsed from .ktest]
var a int 41
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000042
[Parsed from .ktest]
var a int 42
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000043
[Parsed from .ktest]
var a int 43
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000044
[Parsed from .ktest]
var a int 44
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000045
[Parsed from .ktest]
var a int 45
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000046
[Parsed from .ktest]
var a int 46
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000047
[Parsed from .ktest]
var a int 47
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000048
[Parsed from .ktest]
var a int 48
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000049
[Parsed from .ktest]
var a int 49
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000050
[Parsed from .ktest]
var a int 50
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000051
[Parsed from .ktest]
var a int 51
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000052
[Parsed from .ktest]
var a int 52
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000053
[Parsed from .ktest]
var a int 53
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000054
[Parsed from .ktest]
var a int 54
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000055
[Parsed from .ktest]
var a int 55
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000056
[Parsed from .ktest]
var a int 56
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000057
[Parsed from .ktest]
var a int 57
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000058
[Parsed from .ktest]
var a int 58
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000059
[Parsed from .ktest]
var a int 59
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000060
[Parsed from .ktest]
var a int 60
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000061
[Parsed from .ktest]
var a int 61
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000062
[Parsed from .ktest]
var a int 62
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000063
[Parsed from .ktest]
var a int 63
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000064
[Parsed from .ktest]
var a int 64
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000065
[Parsed from .ktest]
var a int 65
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000066
[Parsed from .ktest]
var a int 66
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000067
[Parsed from .ktest]
var a int 67
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000068
[Parsed from .ktest]
var a int 68
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000069
[Parsed from .ktest]
var a int 69
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000070
[Parsed from .ktest]
var a int 70
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000071
[Parsed from .ktest]
var a int 71
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000072
[Parsed from .ktest]
var a int 72
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000073
[Parsed from .ktest]
var a int 73
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000074
[Parsed from .ktest]
var a int 74
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000075
[Parsed from .ktest]
var a int 75
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000076
[Parsed from .ktest]
var a int 76
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000077
[Parsed from .ktest]
var a int 77
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000078
[Parsed from .ktest]
var a int 78
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000079
[Parsed from .ktest]
var a int 79
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000080
[Parsed from .ktest]
var a int 80
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000081
[Parsed from .ktest]
var a int 81
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000082
[Parsed from .ktest]
var a int 82
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000083
[Parsed from .ktest]
var a int 83
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000084
[Parsed from .ktest]
var a int 84
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000085
[Parsed from .ktest]
var a int 85
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000086
[Parsed from .ktest]
var a int 86
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000087
[Parsed from .ktest]
var a int 87
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000088
[Parsed from .ktest]
var a int 88
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000089
[Parsed from .ktest]
var a int 89
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000090
[Parsed from .ktest]
var a int 90
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000091
[Parsed from .ktest]
var a int 91
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000092
[Parsed from .ktest]
var a int 92
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000093
[Parsed from .ktest]
var a int 93
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000094
[Parsed from .ktest]
var a int 94
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000095
[Parsed from .ktest]
var a int 95
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000096
[Parsed from .ktest]
var a int 96
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000097
[Parsed from .ktest]
var a int 97
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000098
[Parsed from .ktest]
var a int 98
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000099
[Parsed from .ktest]
var a int 99
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)

[.kquery content]
(query [(BvLe 0)] false)
Test case: test000100
[Parsed from .ktest]
var a int 100
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvule 0 ) )
(check-sat)
(exit)



--- Program 82 ---
[run.istats content]
version: 1
creator: klee
pid: 7619
cmd: 43.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Istates : MinDistToState
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Istates Q Qiv Qv Qtime 
ob=assembly.ll
fl=43.c
fn=main
13 5 1 0 0 0 1 44 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 43 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 42 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 41 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 40 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 39 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 37 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 35 0 0 0 1 0 0 0 
21 7 1 0 0 0 1 34 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 33 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 31 0 0 0 1 0 0 0 
24 8 1 0 0 0 1 30 0 0 0 0 0 0 0 
25 8 1 1 0 0 1 29 0 0 0 1 2 0 30412 
28 8 1 0 0 0 1 31 0 0 0 1 0 0 0 
29 8 1 0 0 0 1 30 0 0 0 0 0 0 0 
30 5 1 0 0 0 1 29 0 0 0 0 0 0 0 
33 0 1 0 0 0 2 28 0 0 0 0 0 0 0 
34 8 1 0 0 0 2 27 0 0 0 0 0 0 0 
35 8 1 0 0 0 2 26 0 0 0 0 0 0 0 
36 8 1 0 0 0 2 25 0 0 0 3 0 0 0 
37 9 1 0 0 0 1 23 0 0 0 0 0 0 0 
38 9 1 0 0 0 1 21 0 0 0 1 0 0 0 
39 9 1 0 0 0 1 20 0 0 0 0 0 0 0 
42 9 1 0 0 0 11 19 0 0 0 11 0 0 0 
43 9 1 0 0 0 11 18 0 0 0 11 0 0 0 
44 9 1 0 0 0 11 17 0 0 0 0 0 0 0 
45 9 1 10 0 0 11 16 0 0 0 11 10 1 104106 
48 10 1 0 0 0 10 21 0 0 0 10 0 0 0 
49 10 1 0 0 0 10 20 0 0 0 0 0 0 0 
50 10 1 0 0 0 10 19 0 0 0 10 0 0 0 
51 10 1 0 0 0 10 18 0 0 0 0 0 0 0 
52 10 1 0 0 0 10 17 0 0 0 0 0 0 0 
53 10 1 0 0 0 10 16 0 0 0 10 0 0 0 
54 10 1 0 0 0 10 15 0 0 0 0 0 0 0 
57 9 1 0 0 0 10 14 0 0 0 10 0 0 0 
58 9 1 0 0 0 10 13 0 0 0 0 0 0 0 
59 9 1 0 0 0 10 12 0 0 0 10 0 0 0 
60 9 1 0 0 0 10 11 0 0 0 0 0 0 0 
63 11 1 0 0 0 11 5 0 0 0 11 0 0 0 
64 11 1 0 0 0 11 4 0 0 0 11 0 0 0 
65 11 1 0 0 0 11 3 0 0 0 0 0 0 0 
66 11 1 0 0 0 11 2 0 0 0 0 0 0 0 
c=11
66 11 1 0 0 0 11 2 0 0 0 0 0 0 0 
67 11 1 0 0 0 11 1 0 0 0 11 0 11 118328 
68 12 1 0 0 0 11 0 0 0 0 11 0 0 0 
69 12 1 0 0 0 11 0 0 0 0 0 0 0 0 
72 12 1 0 0 0 11 4 0 0 0 11 0 0 0 
73 12 1 0 0 0 11 3 0 0 0 11 0 0 0 
74 12 1 0 0 0 11 2 0 0 0 0 0 0 0 
75 12 1 0 0 0 11 1 0 0 0 11 0 0 0 
78 13 0 0 0 0 0 4 0 0 4 0 0 0 0 
79 13 0 0 0 0 0 3 0 0 3 0 0 0 0 
80 13 0 0 0 0 0 2 0 0 2 0 0 0 0 
81 13 0 0 0 0 0 1 0 0 1 4 0 0 0 
84 14 1 0 0 0 11 5 0 0 0 11 0 0 0 
85 14 1 0 0 0 11 4 0 0 0 0 0 0 0 
86 14 1 0 0 0 11 3 0 0 0 11 0 0 0 
87 14 1 0 0 0 11 2 0 0 0 0 0 0 0 
88 14 1 0 0 0 11 1 0 0 0 11 0 0 0 
91 9 1 0 0 0 11 0 0 0 0 11 0 0 0 
92 9 1 0 0 0 11 0 0 0 0 0 0 0 0 
95 15 1 0 0 0 11 0 0 0 0 11 0 0 0 
96 15 1 0 0 0 11 0 0 0 0 0 0 0 0 
99 16 1 0 0 0 11 0 0 0 0 11 0 0 0 


This is the critical path for program 43:
[42] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var a int -11
var b int 0
var c int 0
var d int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
(query [] false)


--- Program 83 ---
[run.istats content]
version: 1
creator: klee
pid: 8158
cmd: 51.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=51.c
fn=modexp
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
23 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
25 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
26 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
27 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
28 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
29 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
30 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
31 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
34 6 1 0 0 0 11 0 0 0 0 11 0 0 0 
35 6 1 0 0 0 11 0 0 0 0 11 0 0 0 
36 6 1 0 0 0 11 0 0 0 0 0 0 0 0 
37 6 1 9 0 0 11 0 0 0 0 11 10 2 1111499 
40 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
41 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
42 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
43 7 1 0 0 0 10 0 0 0 0 0 0 0 0 
44 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
45 8 1 0 0 0 10 0 0 0 0 0 0 0 0 
48 6 1 0 0 0 10 0 0 0 0 10 0 0 0 
49 6 1 0 0 0 10 0 0 0 0 10 0 0 0 
50 6 1 0 0 0 10 0 0 0 0 0 0 0 0 
51 6 1 0 0 0 10 0 0 0 0 0 0 0 0 
52 6 1 0 0 0 10 0 0 0 0 10 0 0 0 
53 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
54 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
55 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
56 9 1 0 0 0 10 0 0 0 0 0 0 0 0 
57 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
58 6 1 0 0 0 10 0 0 0 0 0 0 0 0 
61 11 1 0 0 0 11 0 0 0 0 11 0 0 0 
62 11 1 0 0 0 11 0 0 0 0 11 0 0 0 
63 11 1 0 0 0 11 0 0 0 0 0 0 0 0 
cfn=modexp
calls=11 15 5
63 11 47 9 0 0 203 0 0 0 0 101 10 2 1111499 
64 11 1 0 0 0 11 0 0 0 0 0 0 0 0 
65 11 1 0 0 0 11 0 0 0 0 11 0 0 0 
66 11 1 0 0 0 11 0 0 0 0 0 0 0 0 
67 11 1 0 0 0 11 0 0 0 0 0 0 0 0 
68 11 1 0 0 0 11 0 0 0 0 0 0 0 0 
69 11 1 0 0 0 11 0 0 0 0 11 0 0 0 
72 13 1 0 0 0 11 0 0 0 0 11 0 0 0 
73 13 1 0 0 0 11 0 0 0 0 11 0 0 0 
74 13 1 0 0 0 11 0 0 0 0 0 0 0 0 
75 13 1 0 0 0 11 0 0 0 0 11 0 0 0 
76 14 1 0 0 0 11 0 0 0 0 11 0 0 0 
77 14 1 0 0 0 11 0 0 0 0 0 0 0 0 
78 14 1 10 0 0 114 0 0 0 0 55 11 1 1034616 
81 14 1 0 0 0 11 0 0 0 0 11 0 0 0 
82 14 1 0 0 0 11 0 0 0 0 0 0 0 0 
83 14 1 0 0 0 11 0 0 0 0 11 0 0 0 


This is the critical path for program 51:
[50] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var base int 0
var exp int -1
var mod int 3
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun base () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun exp () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun mod () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  base (_ bv3 32) ) (concat  (select  base (_ bv2 32) ) (concat  (select  base (_ bv1 32) ) (select  base (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  exp (_ bv3 32) ) (concat  (select  exp (_ bv2 32) ) (concat  (select  exp (_ bv1 32) ) (select  exp (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  mod (_ bv3 32) ) (concat  (select  mod (_ bv2 32) ) (concat  (select  mod (_ bv1 32) ) (select  mod (_ bv0 32) ) ) ) ) ) ) (and  (and  (=  false (=  0 ?B3 ) ) (bvslt  (bvadd  ?B1 (bvmul  ?B1 ?B2 ) ) ?B3 ) ) (bvslt  ?B2 (_ bv20 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array base[4] : w32 -> w8 = symbolic
array exp[4] : w32 -> w8 = symbolic
array mod[4] : w32 -> w8 = symbolic
(query [(Eq False
             (Slt (Add w32 (ReadLSB w32 0
                                     base)
                         (Mul w32 (ReadLSB w32 0
                                         base)
                                     (ReadLSB w32 0
                                         exp)))
                  (ReadLSB w32 0
                              mod)))]
        False)


Test case: test000002
[Parsed from .ktest]
var base int 1
var exp int 0
var mod int 3
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun base () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun exp () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun mod () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  base (_ bv3 32) ) (concat  (select  base (_ bv2 32) ) (concat  (select  base (_ bv1 32) ) (select  base (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  exp (_ bv3 32) ) (concat  (select  exp (_ bv2 32) ) (concat  (select  exp (_ bv1 32) ) (select  exp (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  mod (_ bv3 32) ) (concat  (select  mod (_ bv2 32) ) (concat  (select  mod (_ bv1 32) ) (select  mod (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  (bvadd  ?B1 (bvmul  ?B1 ?B2 ) ) ?B3 ) (bvslt  ?B2 (_ bv20 32) ) ) (=  false (=  0 ?B3 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array base[4] : w32 -> w8 = symbolic
array exp[4] : w32 -> w8 = symbolic
array mod[4] : w32 -> w8 = symbolic
(query [(Slt (Add w32 (ReadLSB w32 0
                                     base)
                         (Mul w32 (ReadLSB w32 0
                                         base)
                                     (ReadLSB w32 0
                                         exp)))
              (ReadLSB w32 0
                          mod))
         (Eq False
             (ReadLSB w32 0
                         mod))]
        False)


--- Program 84 ---
[run.istats content]
version: 1
creator: klee
pid: 8164
cmd: 58.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=58.c
fn=abs_val
13 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
20 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 6 1 0 0 0 11 0 0 0 0 11 0 0 0 
24 6 1 0 0 0 11 0 0 0 0 11 0 0 0 
25 6 1 0 0 0 11 0 0 0 0 0 0 0 0 
26 6 1 10 0 0 11 0 0 0 0 11 10 1 137492 
29 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
30 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
31 7 1 0 0 0 10 0 0 0 0 0 0 0 0 
32 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
33 8 1 0 0 0 10 0 0 0 0 10 0 0 0 
34 8 1 0 0 0 10 0 0 0 0 10 0 0 0 
35 8 1 0 0 0 10 0 0 0 0 0 0 0 0 
38 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
39 9 1 0 0 0 10 0 0 0 0 0 0 0 0 
fn=sign
47 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
48 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
49 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
50 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
51 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
52 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
53 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
54 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
55 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
56 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
cfn=abs_val
calls=1 11 5
56 13 21 10 0 0 132 0 0 0 0 75 10 1 137492 
57 13 1 0 0 0 11 0 0 0 0 11 0 0 0 
58 13 1 0 0 0 11 0 0 0 0 0 0 0 0 
59 13 1 0 0 0 11 0 0 0 0 11 0 0 0 
60 14 1 0 0 0 10 0 0 0 0 10 0 0 0 
61 14 1 0 0 0 10 0 0 0 0 10 0 0 0 
62 14 1 0 0 0 10 0 0 0 0 0 0 0 0 
63 14 1 0 0 0 10 0 0 0 0 10 10 0 129225 
66 15 1 0 0 0 10 0 0 0 0 10 0 0 0 
67 15 1 0 0 0 10 0 0 0 0 0 0 0 0 
fn=main
75 18 1 0 0 0 1 60 0 0 0 0 0 0 0 
76 18 1 0 0 0 1 59 0 0 0 0 0 0 0 
77 18 1 0 0 0 1 58 0 0 0 0 0 0 0 
78 18 1 0 0 0 1 57 0 0 0 1 0 0 0 
79 19 1 0 0 0 1 56 0 0 0 0 0 0 0 
80 19 1 0 0 0 1 54 0 0 0 0 0 0 0 
81 19 1 0 0 0 1 52 0 0 0 0 0 0 0 
82 20 1 0 0 0 1 50 0 0 0 0 0 0 0 
83 20 1 0 0 0 1 49 0 0 0 2 0 0 0 
84 21 1 0 0 0 1 47 0 0 0 1 0 0 0 
85 21 1 0 0 0 1 46 0 0 0 0 0 0 0 
86 21 1 0 0 0 1 45 0 0 0 0 0 0 0 
87 21 1 0 0 0 1 44 0 0 0 0 0 0 0 
88 21 1 0 0 0 1 43 0 0 0 1 1 0 13250 
89 22 1 0 0 0 1 41 0 0 0 0 0 0 0 
90 22 1 0 0 0 1 40 0 0 0 1 0 0 0 
91 22 1 0 0 0 1 39 0 0 0 0 0 0 0 
94 22 1 0 0 0 10 38 0 0 0 10 0 0 0 
95 22 1 0 0 0 10 37 0 0 0 10 0 0 0 
96 22 1 0 0 0 10 36 0 0 0 0 0 0 0 
97 22 1 9 0 0 10 35 0 0 0 10 9 1 127242 
100 23 1 0 0 0 10 39 0 0 0 10 0 0 0 
101 23 1 0 0 0 10 38 0 0 0 10 0 0 0 
102 23 1 0 0 0 10 37 0 0 0 0 0 0 0 
103 23 1 0 0 0 10 36 0 0 0 10 0 0 0 
104 24 1 0 0 0 10 34 0 0 0 10 0 0 0 
105 24 1 0 0 0 10 33 0 0 0 0 0 0 0 
106 24 1 0 0 0 10 32 0 0 0 0 0 0 0 
107 24 1 0 0 0 10 31 0 0 0 10 0 0 0 
110 25 1 0 0 0 10 30 0 0 0 10 0 0 0 
111 25 1 0 0 0 10 29 0 0 0 0 0 0 0 
112 25 1 0 0 0 10 28 0 0 0 0 0 0 0 
113 25 1 0 0 0 10 27 0 0 0 10 0 0 0 
116 22 1 0 0 0 10 26 0 0 0 10 0 0 0 
117 22 1 0 0 0 10 25 0 0 0 0 0 0 0 
118 22 1 0 0 0 10 24 0 0 0 0 0 0 0 
119 22 1 0 0 0 10 23 0 0 0 10 0 0 0 
122 26 1 0 0 0 10 21 0 0 0 10 0 0 0 
123 26 1 0 0 0 10 20 0 0 0 10 0 0 0 
124 26 1 0 0 0 10 19 0 0 0 0 0 0 0 
127 26 1 0 0 0 30 18 0 0 0 30 0 0 0 
128 26 1 0 0 0 30 17 0 0 0 0 0 0 0 
129 26 1 0 0 0 30 16 0 0 0 0 0 0 0 
130 26 1 0 0 0 30 15 0 0 0 30 0 0 0 
131 27 1 0 0 0 30 13 0 0 0 30 0 0 0 
132 27 1 0 0 0 30 12 0 0 0 30 0 0 0 
133 27 1 0 0 0 30 11 0 0 0 0 0 0 0 
134 27 1 0 0 0 30 10 0 0 0 0 0 0 0 
135 27 1 0 0 0 30 9 0 0 0 30 0 0 0 
138 28 1 0 0 0 10 7 0 0 0 10 0 0 0 
139 28 1 0 0 0 10 6 0 0 0 10 0 0 0 
140 28 1 0 0 0 10 5 0 0 0 0 0 0 0 
141 28 1 0 0 0 10 4 0 0 0 0 0 0 0 
142 28 1 0 0 0 10 3 0 0 0 0 0 0 0 
143 28 1 0 0 0 10 2 0 0 0 10 0 0 0 
146 29 1 0 0 0 10 0 0 0 0 10 0 0 0 
147 29 1 0 0 0 10 -1 0 0 0 0 0 0 0 
148 29 1 0 0 0 10 -2 0 0 0 10 0 0 0 
151 29 1 0 0 0 20 -3 0 0 0 20 0 0 0 
152 29 1 0 0 0 20 -4 0 0 0 20 0 0 0 
153 29 1 0 0 0 20 -5 0 0 0 0 0 0 0 
154 29 1 0 0 0 20 -6 0 0 0 20 0 0 0 
157 30 1 0 0 0 10 4 0 0 0 10 0 0 0 
158 30 1 0 0 0 10 3 0 0 0 0 0 0 0 
159 30 1 0 0 0 10 2 0 0 0 10 0 0 0 
162 31 1 0 0 0 10 0 0 0 0 10 0 0 0 
163 31 1 0 0 0 10 -1 0 0 0 0 0 0 0 
164 31 1 0 0 0 10 -2 0 0 0 10 0 0 0 
167 32 1 0 0 0 20 -3 0 0 0 20 0 0 0 
168 32 1 0 0 0 20 -4 0 0 0 20 0 0 0 
169 32 1 0 0 0 20 -5 0 0 0 0 0 0 0 
170 32 1 0 0 0 20 -6 0 0 0 20 0 0 0 
173 34 1 0 0 0 10 0 0 0 0 10 0 0 0 
174 34 1 0 0 0 10 -1 0 0 0 10 0 0 0 
175 34 1 0 0 0 10 -2 0 0 0 0 0 0 0 
178 35 1 0 0 0 20 -3 0 0 0 20 0 0 0 
179 35 1 0 0 0 20 -4 0 0 0 20 0 0 0 
180 35 1 0 0 0 20 -5 0 0 0 0 0 0 0 
181 35 1 0 0 0 20 -6 0 0 0 20 0 0 0 
184 36 1 0 0 0 30 -3 0 0 0 30 0 0 0 
185 36 1 0 0 0 30 -4 0 0 0 0 0 0 0 
fn=runtime/Intrinsic/klee_div_zero_check
197 42 1 0 0 0 1 0 0 0 0 0 0 0 0 
198 42 1 0 0 0 1 0 0 0 0 0 0 0 0 
199 42 1 0 0 0 1 0 0 0 0 1 0 0 0 
200 43 1 0 0 0 1 0 0 0 0 0 0 0 0 
201 43 1 0 0 0 1 0 0 0 0 1 0 0 0 
204 43 1 0 0 0 3 0 0 0 0 3 0 0 0 
205 43 1 0 0 0 3 0 0 0 0 3 0 0 0 
206 43 1 0 0 0 3 0 0 0 0 0 0 0 0 
207 43 1 0 0 0 3 0 0 0 0 0 0 0 0 
208 43 1 0 0 0 3 0 0 0 0 0 0 0 0 
209 43 1 0 0 0 3 0 0 0 0 0 0 0 0 
210 43 1 0 0 0 3 0 0 0 0 3 0 0 0 
211 44 1 0 0 0 3 0 0 0 0 0 0 0 0 
214 45 1 0 0 0 10 0 0 0 0 10 0 0 0 
215 45 1 0 0 0 10 0 0 0 0 10 0 0 0 
216 45 1 0 0 0 10 0 0 0 0 0 0 0 0 
217 45 1 0 0 0 10 0 0 0 0 0 0 0 0 
cfn=sign
calls=10 11 5
217 45 0 9 0 0 544 0 0 0 0 284 9 1 127242 
218 45 1 0 0 0 10 6 0 0 0 10 0 0 0 
219 45 1 0 0 0 10 5 0 0 0 0 0 0 0 
220 45 1 0 0 0 10 4 0 0 0 0 0 0 0 
221 45 1 0 0 0 10 3 0 0 0 0 0 0 0 
222 45 1 0 0 0 10 2 0 0 0 10 0 0 0 
225 58 1 0 0 0 10 0 0 0 0 10 0 0 0 
226 58 1 0 0 0 10 -1 0 0 0 0 0 0 0 
227 58 1 0 0 0 10 -2 0 0 0 0 0 0 0 
230 58 1 0 0 0 30 -3 0 0 0 30 0 0 0 
231 58 1 0 0 0 30 -4 0 0 0 30 0 0 0 
232 58 1 0 0 0 30 -5 0 0 0 0 0 0 0 
233 58 1 0 0 0 30 -6 0 0 0 30 0 0 0 
236 59 1 0 0 0 10 0 0 0 0 10 0 0 0 
237 59 1 0 0 0 10 0 0 0 0 10 0 0 0 
238 59 1 0 0 0 10 0 0 0 0 0 0 0 0 
239 59 1 0 0 0 10 0 0 0 0 0 0 0 0 
240 59 1 0 0 0 10 0 0 0 0 10 0 0 0 
241 60 1 0 0 0 10 0 0 0 0 10 0 0 0 
242 60 1 0 0 0 10 0 0 0 0 0 0 0 0 
fn=runtime/Intrinsic/klee_div_zero_check
248 42 1 0 0 0 1 0 0 0 0 0 0 0 0 
249 42 1 0 0 0 1 0 0 0 0 0 0 0 0 
250 42 1 0 0 0 1 0 0 0 0 1 0 0 0 
251 43 1 0 0 0 1 0 0 0 0 0 0 0 0 
252 43 1 0 0 0 1 0 0 0 0 1 0 0 0 
255 43 1 0 0 0 3 0 0 0 0 3 0 0 0 
256 43 1 0 0 0 3 0 0 0 0 0 0 0 0 
257 43 1 0 0 0 3 0 0 0 0 3 0 0 0 
258 45 1 0 0 0 3 0 0 0 0 0 0 0 0 
261 45 1 0 0 0 10 0 0 0 0 10 0 0 0 
262 45 1 0 0 0 10 0 0 0 0 10 0 0 0 
263 45 1 0 0 0 10 0 0 0 0 0 0 0 0 
264 45 1 0 0 0 10 0 0 0 0 10 0 0 0 
265 46 1 0 0 0 10 0 0 0 0 10 0 0 0 
266 46 1 0 0 0 10 0 0 0 0 0 0 0 0 
cfn=sign
calls=10 11 5
266 46 0 9 0 0 544 0 0 0 0 284 9 1 127242 
267 46 1 0 0 0 10 6 0 0 0 10 0 0 0 
268 46 1 0 0 0 10 5 0 0 0 0 0 0 0 
269 46 1 0 0 0 10 4 0 0 0 0 0 0 0 
270 46 1 0 0 0 10 3 0 0 0 0 0 0 0 
271 46 1 0 0 0 10 2 0 0 0 10 0 0 0 
274 47 1 0 0 0 10 0 0 0 0 10 0 0 0 
275 47 1 0 0 0 10 0 0 0 0 10 0 0 0 
276 47 1 0 0 0 10 0 0 0 0 0 0 0 0 
277 47 1 0 0 0 10 0 0 0 0 0 0 0 0 
278 47 1 0 0 0 10 0 0 0 0 10 0 0 0 
281 48 1 0 0 0 10 7 0 0 0 10 0 0 0 
282 48 1 0 0 0 10 6 0 0 0 0 0 0 0 
283 48 1 0 0 0 10 5 0 0 0 10 0 0 0 
284 48 1 0 0 0 10 4 0 0 0 0 0 0 0 
285 48 1 0 0 0 10 3 0 0 0 10 0 0 0 
286 48 1 0 0 0 10 2 0 0 0 0 0 0 0 
289 49 1 0 0 0 10 0 0 0 0 10 0 0 0 
290 49 1 0 0 0 10 0 0 0 0 10 0 0 0 
291 49 1 0 0 0 10 0 0 0 0 0 0 0 0 
292 49 1 0 0 0 10 0 0 0 0 0 0 0 0 
293 49 1 0 0 0 10 0 0 0 0 10 0 0 0 
296 50 1 0 0 0 10 0 0 0 0 10 0 0 0 
297 50 1 0 0 0 10 0 0 0 0 0 0 0 0 
fn=main
304 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
305 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
306 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
307 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
308 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
309 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
310 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
311 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
312 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
313 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
314 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
315 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
316 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
317 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
318 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
319 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
320 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
321 52 1 0 0 0 35 0 0 0 0 0 0 0 0 
322 52 1 0 0 0 35 0 0 0 0 35 0 0 0 
325 53 1 0 0 0 33 0 0 0 0 0 0 0 0 
326 53 1 0 0 0 33 0 0 0 0 0 0 0 0 
327 53 1 0 0 0 33 0 0 0 0 0 0 0 0 
328 53 1 0 0 0 33 0 0 0 0 0 0 0 0 
329 53 1 0 0 0 33 0 0 0 0 0 0 0 0 
330 53 1 0 0 0 33 0 0 0 0 0 0 0 0 
331 53 1 0 0 0 33 0 0 0 0 0 0 0 0 
332 53 1 0 0 0 33 0 0 0 0 33 0 0 0 
335 54 1 0 0 0 24 0 0 0 0 0 0 0 0 
336 54 1 0 0 0 24 0 0 0 0 0 0 0 0 
337 54 1 0 0 0 24 0 0 0 0 0 0 0 0 
338 54 1 0 0 0 24 0 0 0 0 0 0 0 0 
339 54 1 0 0 0 24 0 0 0 0 0 0 0 0 
340 54 1 0 0 0 24 0 0 0 0 0 0 0 0 
341 54 1 0 0 0 24 0 0 0 0 24 0 0 0 
344 55 1 0 0 0 25 0 0 0 0 0 0 0 0 
345 55 1 0 0 0 25 0 0 0 0 0 0 0 0 
346 55 1 0 0 0 25 0 0 0 0 0 0 0 0 
347 55 1 0 0 0 25 0 0 0 0 0 0 0 0 
348 55 1 0 0 0 25 0 0 0 0 25 0 0 0 
351 56 1 0 0 0 35 0 0 0 0 0 0 0 0 
352 56 1 0 0 0 35 0 0 0 0 0 0 0 0 
353 56 1 0 0 0 35 0 0 0 0 0 0 0 0 
354 56 1 0 0 0 35 0 0 0 0 0 0 0 0 
355 56 1 0 0 0 35 0 0 0 0 0 0 0 0 
356 56 1 0 0 0 35 0 0 0 0 35 0 0 0 
359 57 1 0 0 0 10 0 0 0 0 10 0 0 0 
360 57 1 0 0 0 10 0 0 0 0 10 0 0 0 
361 57 1 0 0 0 10 0 0 0 0 0 0 0 0 
362 57 1 0 0 0 10 0 0 0 0 10 0 0 0 
365 57 1 0 0 0 20 0 0 0 0 20 0 0 0 
366 57 1 0 0 0 20 0 0 0 0 0 0 0 0 
367 57 1 0 0 0 20 0 0 0 0 20 0 0 0 
370 58 1 0 0 0 10 0 0 0 0 10 0 0 0 
371 58 1 0 0 0 10 0 0 0 0 10 0 0 0 
372 58 1 0 0 0 10 0 0 0 0 0 0 0 0 
373 58 1 0 0 0 10 0 0 0 0 10 0 0 0 
376 59 1 0 0 0 10 0 0 0 0 10 0 0 0 
377 59 1 0 0 0 10 0 0 0 0 0 0 0 0 
378 59 1 0 0 0 10 0 0 0 0 10 0 0 0 
381 60 1 0 0 0 10 0 0 0 0 10 0 0 0 
382 60 1 0 0 0 10 0 0 0 0 0 0 0 0 
cfn=runtime/Intrinsic/klee_div_zero_check
calls=10 11 5
382 60 0 9 0 0 544 0 0 0 0 284 9 1 127242 
383 60 1 0 0 0 10 6 0 0 0 10 0 0 0 
384 60 1 0 0 0 10 5 0 0 0 0 0 0 0 
385 60 1 0 0 0 10 4 0 0 0 0 0 0 0 
386 60 1 0 0 0 10 3 0 0 0 10 0 0 0 
387 60 1 0 0 0 10 2 0 0 0 0 0 0 0 
390 61 1 0 0 0 10 0 0 0 0 10 0 0 0 
391 61 1 0 0 0 10 0 0 0 0 0 0 0 0 
fn=main
401 18 1 0 0 0 1 74 0 0 0 0 0 0 0 
402 18 1 0 0 0 1 73 0 0 0 0 0 0 0 
403 18 1 0 0 0 1 72 0 0 0 0 0 0 0 
404 18 1 0 0 0 1 71 0 0 0 1 0 0 0 
405 19 1 0 0 0 1 70 0 0 0 0 0 0 0 
406 19 1 0 0 0 1 68 0 0 0 0 0 0 0 
407 19 1 0 0 0 1 66 0 0 0 0 0 0 0 
408 20 1 0 0 0 1 64 0 0 0 0 0 0 0 
409 20 1 0 0 0 1 63 0 0 0 2 0 0 0 
410 21 1 0 0 0 1 61 0 0 0 1 0 0 0 
411 21 1 0 0 0 1 60 0 0 0 0 0 0 0 
412 21 1 0 0 0 1 59 0 0 0 0 0 0 0 
413 21 1 0 0 0 1 58 0 0 0 1 1 0 13250 
414 22 1 0 0 0 1 56 0 0 0 0 0 0 0 
415 22 1 0 0 0 1 54 0 0 0 1 0 0 0 
416 22 1 0 0 0 1 53 0 0 0 0 0 0 0 
419 22 1 0 0 0 10 52 0 0 0 10 0 0 0 
420 22 1 0 0 0 10 51 0 0 0 10 0 0 0 
421 22 1 0 0 0 10 50 0 0 0 0 0 0 0 
422 22 1 0 0 0 10 49 0 0 0 0 0 0 0 
423 22 1 0 0 0 10 48 0 0 0 0 0 0 0 
424 22 1 0 0 0 10 47 0 0 0 10 0 0 0 
427 23 1 0 0 0 10 45 0 0 0 10 0 0 0 
428 23 1 0 0 0 10 44 0 0 0 0 0 0 0 
429 23 1 0 0 0 10 43 0 0 0 10 0 0 0 
430 23 1 0 0 0 10 42 0 0 0 0 0 0 0 
433 24 1 0 0 0 20 41 0 0 0 0 0 0 0 
434 24 1 0 0 0 20 40 0 0 0 20 0 0 0 
435 24 1 0 0 0 20 39 0 0 0 0 0 0 0 
438 22 1 0 0 0 20 38 0 0 0 20 0 0 0 
439 22 1 0 0 0 20 37 0 0 0 20 0 0 0 
440 22 1 0 0 0 20 36 0 0 0 0 0 0 0 
441 22 1 0 0 0 20 35 0 0 0 0 0 0 0 
442 22 1 0 0 0 20 34 0 0 0 0 0 0 0 
443 22 1 0 0 0 20 33 0 0 0 20 0 0 0 
446 25 1 0 0 0 20 31 0 0 0 0 0 0 0 
447 25 1 0 0 0 20 30 0 0 0 0 0 0 0 
448 25 1 0 0 0 20 29 0 0 0 20 0 0 0 
449 25 1 0 0 0 20 28 0 0 0 0 0 0 0 
450 25 1 0 0 0 20 27 0 0 0 20 20 0 252754 
453 29 1 0 0 0 10 26 0 0 0 10 0 0 0 
454 29 1 0 0 0 10 25 0 0 0 0 0 0 0 
455 29 1 0 0 0 10 24 0 0 0 10 0 0 0 
458 30 1 0 0 0 10 32 0 0 0 10 0 0 0 
459 30 1 0 0 0 10 31 0 0 0 0 0 0 0 
460 30 1 0 0 0 10 30 0 0 0 10 0 0 0 
461 30 1 0 0 0 10 29 0 0 0 0 0 0 0 
462 30 1 0 0 0 10 28 0 0 0 10 0 0 0 
463 30 1 0 0 0 10 27 0 0 0 0 0 0 0 
466 31 1 0 0 0 10 26 0 0 0 10 0 0 0 
467 31 1 0 0 0 10 25 0 0 0 0 0 0 0 
468 31 1 0 0 0 10 24 0 0 0 10 0 0 0 
469 31 1 0 0 0 10 23 0 0 0 0 0 0 0 
472 32 1 0 0 0 30 22 0 0 0 30 0 0 0 
473 32 1 0 0 0 30 21 0 0 0 0 0 0 0 
474 32 1 0 0 0 30 20 0 0 0 0 0 0 0 
475 32 1 0 0 0 30 19 0 0 0 30 0 0 0 
478 32 1 0 0 0 10 18 0 0 0 10 0 0 0 
479 32 1 0 0 0 10 17 0 0 0 10 0 0 0 
480 32 1 0 0 0 10 16 0 0 0 0 0 0 0 
481 32 1 0 0 0 10 15 0 0 0 0 0 0 0 
482 32 1 0 0 0 10 14 0 0 0 0 0 0 0 
483 32 1 0 0 0 10 13 0 0 0 10 0 0 0 
486 32 1 0 0 0 20 11 0 0 0 20 0 0 0 
487 32 1 0 0 0 20 10 0 0 0 0 0 0 0 
488 32 1 0 0 0 20 9 0 0 0 20 0 0 0 
489 32 1 0 0 0 20 8 0 0 0 0 0 0 0 
492 33 1 0 0 0 20 7 0 0 0 20 0 0 0 
493 33 1 0 0 0 20 6 0 0 0 20 0 0 0 
494 33 1 0 0 0 20 5 0 0 0 0 0 0 0 
495 33 1 0 0 0 20 4 0 0 0 20 7 0 94628 
498 34 1 0 0 0 20 3 0 0 0 20 0 0 0 
499 34 1 0 0 0 20 2 0 0 0 0 0 0 0 
500 34 1 0 0 0 20 1 0 0 0 20 0 0 0 
503 35 0 0 0 0 0 0 0 0 0 0 0 0 0 
506 35 1 0 0 0 10 0 0 0 0 10 0 0 0 


This is the critical path for program 58:
[57] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var x int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvslt  (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) (_ bv0 32) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Slt (ReadLSB w32 0 x)
                  0))]
        false)


Test case: test000002
[Parsed from .ktest]
var x int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  (_ bv0 32) (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq 0
             (ReadLSB w32 0 x))]
        false)


Test case: test000003
[Parsed from .ktest]
var x int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  ?B1 (_ bv0 32) ) (=  false (bvslt  (bvsle  (_ bv0 32) ?B1 ) (_ bv0 32) ) ) ) (=  false (bvslt  ?B1 (_ bv0 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Slt N0:(ReadLSB w32 0 x)
              0)
         (Eq false
             (Slt (Sle w32 0 N0)
                  0))]
        false)


Test case: test000004
[Parsed from .ktest]
var x int -4294967296
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  ?B1 (_ bv0 32) ) (=  false (bvslt  (bvsle  (_ bv0 32) ?B1 ) (_ bv0 32) ) ) ) (bvslt  (bvadd  (_ bv0 32) ?B1 ) (_ bv0 32) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Slt N0:(ReadLSB w32 0 x)
              0)
         (Eq false
             (Slt (Sle w32 0 N0)
                  0))
         (Slt (Add w32 0 N0)
              0)]
        false)


Test case: test000005
[Parsed from .ktest]
var x int 4294967295
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  ?B1 (_ bv0 32) ) (=  false (bvslt  (bvsle  (_ bv0 32) ?B1 ) (_ bv0 32) ) ) ) (bvslt  (bvadd  (_ bv0 32) ?B1 ) (_ bv0 32) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Slt N0:(ReadLSB w32 0 x)
              0)
         (Eq false
             (Slt (Sle w32 0 N0)
                  0))
         (Slt (Add w32 0 N0)
              0)]
        false)


Test case: test000006
[Parsed from .ktest]
var x int 4294967296
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (=  (bvslt  ?B1 (_ bv0 32) ) false ) (=  false (bvslt  (bvsle  (_ bv0 32) ?B1 ) (_ bv0 32) ) ) ) (bvslt  (bvadd  (_ bv0 32) ?B1 ) (_ bv0 32) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq (Slt N0:(ReadLSB w32 0 x)
              0)
             false)
         (Eq false
             (Slt (Sle w32 0 N0)
                  0))
         (Slt (Add w32 0 N0)
              0)]
        false)


--- Program 85 ---
[run.istats content]
version: 1
creator: klee
pid: 7518
cmd: 36.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=36.c
fn=main
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
19 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
25 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
26 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
27 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
28 9 1 0 0 0 1 0 0 0 0 2 0 0 0 
29 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
30 10 1 0 0 0 1 0 0 0 0 2 0 0 0 
31 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 11 1 0 0 0 1 0 0 0 0 2 0 0 0 
33 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
34 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
35 12 1 1 0 0 1 0 0 0 0 1 2 0 25462 
38 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
39 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
40 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
43 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
44 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
45 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
46 12 1 0 0 0 2 0 0 0 0 3 0 0 0 
47 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
48 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
49 13 1 1 0 0 1 0 0 0 0 1 1 0 15272 
52 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
53 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
54 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
57 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
58 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
59 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
60 13 1 0 0 0 2 0 0 0 0 3 0 0 0 
61 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
62 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
63 14 1 1 0 0 1 0 0 0 0 1 1 0 18434 
66 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
67 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
68 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
71 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
72 14 1 0 0 0 2 0 0 0 0 0 0 0 0 
73 14 1 0 0 0 2 0 0 0 0 0 0 0 0 
74 14 1 0 0 0 2 0 0 0 0 3 0 0 0 
75 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
76 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
77 15 1 1 0 0 1 0 0 0 0 1 1 0 19759 
80 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
81 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
82 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
85 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
86 15 1 0 0 0 2 0 0 0 0 0 0 0 0 
87 15 1 0 0 0 2 0 0 0 0 0 0 0 0 
88 15 1 0 0 0 2 0 0 0 0 3 0 0 0 
89 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
90 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
91 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
92 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
93 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
94 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
95 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
96 18 1 1 0 0 1 0 0 0 0 1 1 0 188725 
99 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
100 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
101 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
102 18 1 1 0 0 1 0 0 0 0 1 1 0 185738 
105 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
106 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
107 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
108 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
109 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
110 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
111 19 1 1 0 0 2 0 0 0 0 2 1 0 103756 
114 20 1 0 0 0 1 0 0 0 0 1 0 0 0 
115 20 1 0 0 0 1 0 0 0 0 1 0 0 0 
116 20 1 0 0 0 1 0 0 0 0 0 0 0 0 
117 20 1 0 0 0 1 0 0 0 0 1 0 0 0 
118 20 1 0 0 0 1 0 0 0 0 0 0 0 0 
119 20 1 0 0 0 1 0 0 0 0 0 0 0 0 
120 20 1 1 0 0 1 0 0 0 0 1 1 0 90931 
123 21 1 0 0 0 1 0 0 0 0 1 0 0 0 
124 21 1 0 0 0 1 0 0 0 0 1 0 0 0 
125 21 1 0 0 0 1 0 0 0 0 0 0 0 0 
126 21 1 0 0 0 1 0 0 0 0 1 0 0 0 
127 21 1 0 0 0 1 0 0 0 0 0 0 0 0 
128 21 1 0 0 0 1 0 0 0 0 0 0 0 0 
129 21 1 1 0 0 1 0 0 0 0 1 1 0 69030 
132 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
133 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
134 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
135 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
136 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
137 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
138 22 1 1 0 0 1 0 0 0 0 1 1 0 46190 
141 23 1 0 0 0 2 0 0 0 0 2 0 0 0 
142 23 1 0 0 0 2 0 0 0 0 2 0 0 0 
143 23 1 0 0 0 2 0 0 0 0 0 0 0 0 
144 23 1 1 0 0 2 0 0 0 0 2 1 0 81737 
147 23 1 0 0 0 2 0 0 0 0 2 0 0 0 
148 23 1 0 0 0 2 0 0 0 0 0 0 0 0 
149 23 1 0 0 0 2 0 0 0 0 2 0 0 0 
150 23 1 0 0 0 2 0 0 0 0 0 0 0 0 
151 23 1 0 0 0 2 0 0 0 0 0 0 0 0 
152 23 1 1 0 0 2 0 0 0 0 2 1 0 240065 
155 24 1 0 0 0 2 0 0 0 0 2 0 0 0 
156 24 1 0 0 0 2 0 0 0 0 0 0 0 0 
157 24 1 0 0 0 2 0 0 0 0 2 0 0 0 
158 24 1 0 0 0 2 0 0 0 0 0 0 0 0 
159 24 1 0 0 0 2 0 0 0 0 0 0 0 0 
160 24 1 2 0 0 2 0 0 0 0 2 2 1 293327 
163 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
164 25 1 0 0 0 2 0 0 0 0 0 0 0 0 
165 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
166 25 1 0 0 0 2 0 0 0 0 0 0 0 0 
167 25 1 0 0 0 2 0 0 0 0 0 0 0 0 
168 25 1 2 0 0 2 0 0 0 0 2 2 1 252541 
171 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
172 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
173 26 1 0 0 0 1 0 0 0 0 0 0 0 0 
174 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
175 26 1 0 0 0 1 0 0 0 0 0 0 0 0 
176 26 1 4869 0 0 1 0 0 0 0 1 1 0 177889 
179 27 1 0 0 0 1 0 0 0 0 1 0 0 0 
180 27 1 0 0 0 1 0 0 0 0 1 0 0 0 
181 27 1 0 0 0 1 0 0 0 0 0 0 0 0 
182 27 1 0 0 0 1 0 0 0 0 1 0 0 0 
183 27 1 0 0 0 1 0 0 0 0 0 0 0 0 
184 27 1 5058 0 0 1 0 0 0 0 1 1 0 130528 
187 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
188 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
189 28 1 0 0 0 1 0 0 0 0 0 0 0 0 
190 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
191 28 1 0 0 0 1 0 0 0 0 0 0 0 0 
192 28 1 1 0 0 1 0 0 0 0 1 1 0 180177 
195 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
196 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
197 28 1 0 0 0 1 0 0 0 0 0 0 0 0 
198 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
199 28 1 1 0 0 1 0 0 0 0 1 1 0 137158 
202 29 1 0 0 0 1 0 0 0 0 1 0 0 0 
203 29 1 0 0 0 1 0 0 0 0 1 0 0 0 
204 29 1 0 0 0 1 0 0 0 0 0 0 0 0 
205 29 1 0 0 0 1 0 0 0 0 1 0 0 0 
206 29 1 0 0 0 1 0 0 0 0 0 0 0 0 
207 29 1 0 0 0 1 0 0 0 0 0 0 0 0 
208 29 1 1 0 0 1 0 0 0 0 1 1 0 167059 
211 29 1 0 0 0 1 0 0 0 0 1 0 0 0 
212 29 1 0 0 0 1 0 0 0 0 1 0 0 0 
213 29 1 0 0 0 1 0 0 0 0 0 0 0 0 
214 29 1 0 0 0 1 0 0 0 0 1 0 0 0 
215 29 1 0 0 0 1 0 0 0 0 0 0 0 0 
216 29 1 5337 0 0 1 0 0 0 0 1 1 0 98859 
219 30 1 0 0 0 1 0 0 0 0 1 0 0 0 
220 30 1 0 0 0 1 0 0 0 0 1 0 0 0 
221 30 1 0 0 0 1 0 0 0 0 0 0 0 0 
222 30 1 0 0 0 1 0 0 0 0 0 0 0 0 
223 30 1 0 0 0 1 0 0 0 0 1 0 0 0 
224 31 1 0 0 0 1 0 0 0 0 0 0 0 0 
227 31 1 0 0 0 1 0 0 0 0 1 0 0 0 
228 31 1 0 0 0 1 0 0 0 0 1 0 0 0 
229 31 1 0 0 0 1 0 0 0 0 0 0 0 0 
230 31 1 0 0 0 1 0 0 0 0 0 0 0 0 
231 31 1 1 0 0 1 0 0 0 0 1 1 0 148528 
234 31 1 0 0 0 1 0 0 0 0 1 0 0 0 
235 31 1 0 0 0 1 0 0 0 0 1 0 0 0 
236 31 1 0 0 0 1 0 0 0 0 0 0 0 0 
237 31 1 0 0 0 1 0 0 0 0 1 0 0 0 
238 31 1 0 0 0 1 0 0 0 0 0 0 0 0 
239 31 1 1 0 0 1 0 0 0 0 1 1 0 174415 
242 32 1 0 0 0 1 0 0 0 0 1 0 0 0 
243 32 1 0 0 0 1 0 0 0 0 1 0 0 0 
244 32 1 0 0 0 1 0 0 0 0 0 0 0 0 
245 32 1 0 0 0 1 0 0 0 0 1 0 0 0 
246 33 1 0 0 0 1 0 0 0 0 0 0 0 0 
249 33 1 0 0 0 2 0 0 0 0 2 0 0 0 
250 33 1 0 0 0 2 0 0 0 0 0 0 0 0 
251 33 1 0 0 0 2 0 0 0 0 2 0 0 0 
252 33 1 0 0 0 2 0 0 0 0 0 0 0 0 
253 33 1 0 0 0 2 0 0 0 0 0 0 0 0 
254 33 1 1 0 0 2 0 0 0 0 2 1 0 254201 
257 33 1 0 0 0 2 0 0 0 0 2 0 0 0 
258 33 1 0 0 0 2 0 0 0 0 0 0 0 0 
259 33 1 0 0 0 2 0 0 0 0 2 0 0 0 
260 33 1 0 0 0 2 0 0 0 0 2 0 0 0 
261 33 1 0 0 0 2 0 0 0 0 0 0 0 0 
262 33 1 1 0 0 2 0 0 0 0 2 1 0 118233 
265 34 1 0 0 0 1 0 0 0 0 1 0 0 0 
266 33 1 0 0 0 1 0 0 0 0 0 0 0 0 
269 35 1 0 0 0 1 0 0 0 0 1 0 0 0 
270 35 1 0 0 0 1 0 0 0 0 0 0 0 0 
271 35 1 1 0 0 1 0 0 0 0 1 1 0 52424 
274 35 1 0 0 0 1 0 0 0 0 1 0 0 0 
275 35 1 0 0 0 1 0 0 0 0 0 0 0 0 
276 35 1 1 0 0 1 0 0 0 0 1 1 0 25550 
279 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
280 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
281 36 1 1 0 0 1 0 0 0 0 1 1 0 11174 
284 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
285 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
286 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
287 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
288 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
289 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
290 36 1 1 0 0 1 0 0 0 0 1 1 0 44434 
293 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
294 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
295 36 1 1 0 0 1 0 0 0 0 1 1 0 18285 
298 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
299 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
300 36 1 1 0 0 1 0 0 0 0 1 1 0 8304 
303 37 1 0 0 0 1 0 0 0 0 1 0 0 0 
304 37 1 0 0 0 1 0 0 0 0 0 0 0 0 
307 38 1 0 0 0 1 0 0 0 0 0 0 0 0 
310 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
311 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
312 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
313 36 1 0 0 0 1 0 0 0 0 1 0 0 0 
314 36 1 0 0 0 1 0 0 0 0 0 0 0 0 
315 36 1 1 0 0 1 0 0 0 0 1 1 0 47733 
318 39 1 0 0 0 1 0 0 0 0 1 0 0 0 
319 39 1 0 0 0 1 0 0 0 0 1 0 0 0 
320 39 1 0 0 0 1 0 0 0 0 0 0 0 0 
321 39 1 0 0 0 1 0 0 0 0 1 0 0 0 
322 39 1 0 0 0 1 0 0 0 0 0 0 0 0 
323 39 1 0 0 0 1 0 0 0 0 1 0 0 0 
324 39 1 0 0 0 1 0 0 0 0 0 0 0 0 
325 39 1 1 0 0 1 0 0 0 0 1 1 0 45000 
328 40 1 0 0 0 1 0 0 0 0 1 0 0 0 
329 40 1 0 0 0 1 0 0 0 0 1 0 0 0 
330 40 1 0 0 0 1 0 0 0 0 0 0 0 0 
331 40 1 0 0 0 1 0 0 0 0 1 0 0 0 
332 40 1 0 0 0 1 0 0 0 0 0 0 0 0 
333 40 1 0 0 0 1 0 0 0 0 1 0 0 0 
334 40 1 0 0 0 1 0 0 0 0 0 0 0 0 
335 40 1 1 0 0 1 0 0 0 0 1 1 0 56 
338 42 1 0 0 0 1 0 0 0 0 1 0 0 0 
339 42 1 0 0 0 1 0 0 0 0 0 0 0 0 
344 45 1 0 0 0 3 0 0 0 0 3 0 0 0 
345 42 1 0 0 0 3 0 0 0 0 3 0 0 0 
346 42 1 0 0 0 3 0 0 0 0 0 0 0 0 
347 42 1 0 0 0 3 0 0 0 0 3 0 0 0 
348 42 1 0 0 0 3 0 0 0 0 0 0 0 0 
349 42 1 1 0 0 3 0 0 0 0 3 1 0 519832 
352 46 1 0 0 0 3 0 0 0 0 3 0 0 0 
353 46 1 0 0 0 3 0 0 0 0 0 0 0 0 
354 46 1 0 0 0 3 0 0 0 0 3 0 0 0 
355 42 1 0 0 0 3 0 0 0 0 0 0 0 0 
358 49 1 0 0 0 1 0 0 0 0 1 0 0 0 
359 49 1 0 0 0 1 0 0 0 0 1 0 0 0 
360 49 1 0 0 0 1 0 0 0 0 0 0 0 0 
361 49 1 0 0 0 1 0 0 0 0 1 0 0 0 
362 49 1 0 0 0 1 0 0 0 0 0 0 0 0 
363 49 1 0 0 0 1 0 0 0 0 0 0 0 0 
364 49 1 1 0 0 1 0 0 0 0 1 1 0 82014 
367 49 1 0 0 0 1 0 0 0 0 1 0 0 0 
368 49 1 0 0 0 1 0 0 0 0 1 0 0 0 
369 49 1 0 0 0 1 0 0 0 0 0 0 0 0 
370 49 1 0 0 0 1 0 0 0 0 1 0 0 0 
371 49 1 0 0 0 1 0 0 0 0 0 0 0 0 
372 49 1 1 0 0 1 0 0 0 0 1 1 0 59294 
375 50 1 0 0 0 1 0 0 0 0 1 0 0 0 
376 50 1 0 0 0 1 0 0 0 0 1 0 0 0 
377 50 1 0 0 0 1 0 0 0 0 0 0 0 0 
378 50 1 0 0 0 1 0 0 0 0 1 0 0 0 
379 50 1 0 0 0 1 0 0 0 0 0 0 0 0 
380 50 1 0 0 0 1 0 0 0 0 1 0 0 0 
381 51 1 0 0 0 1 0 0 0 0 1 0 0 0 
382 51 1 0 0 0 1 0 0 0 0 1 0 0 0 
383 52 1 0 0 0 1 0 0 0 0 0 0 0 0 
386 53 1 0 0 0 6 0 0 0 0 1 0 0 0 
387 53 1 0 0 0 6 0 0 0 0 0 0 0 0 
fn=calculate
395 55 1 0 0 0 1 7 0 0 0 0 0 0 0 
396 55 1 0 0 0 1 0 0 0 0 1 0 0 0 
397 55 1 0 0 0 1 0 0 0 0 0 0 0 0 
400 55 1 0 0 0 3 0 0 0 0 3 0 0 0 
401 55 1 0 0 0 3 0 0 0 0 0 0 0 0 
fn=main
409 63 1 0 0 0 1 40 0 0 0 0 0 0 0 
410 63 1 0 0 0 1 39 0 0 0 0 0 0 0 
411 63 1 0 0 0 1 38 0 0 0 0 0 0 0 
412 63 1 0 0 0 1 37 0 0 0 0 0 0 0 
413 63 1 0 0 0 1 36 0 0 0 1 0 0 0 
414 64 1 0 0 0 1 0 0 0 0 0 0 0 0 
415 64 1 0 0 0 1 0 0 0 0 0 0 0 0 
416 64 1 0 0 0 1 0 0 0 0 0 0 0 0 
417 64 1 0 0 0 1 0 0 0 0 1 0 0 0 
418 65 1 0 0 0 1 0 0 0 0 0 0 0 0 
419 65 1 0 0 0 1 0 0 0 0 2 0 0 0 
420 66 1 0 0 0 1 0 0 0 0 1 0 0 0 
421 66 1 0 0 0 1 0 0 0 0 0 0 0 0 
422 66 1 1 0 0 1 0 0 0 0 1 1 0 11323 
425 66 1 0 0 0 1 0 0 0 0 1 0 0 0 
426 66 1 0 0 0 1 0 0 0 0 0 0 0 0 
427 63 1 0 0 0 1 0 0 0 0 0 0 0 0 
430 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
431 66 1 0 0 0 2 0 0 0 0 0 0 0 0 
432 66 1 0 0 0 2 0 0 0 0 0 0 0 0 
433 66 1 0 0 0 2 0 0 0 0 3 0 0 0 
434 67 1 0 0 0 1 0 0 0 0 1 0 0 0 
435 67 1 0 0 0 1 0 0 0 0 0 0 0 0 
fn=calculate
443 55 1 0 0 0 1 7 0 0 0 0 0 0 0 
444 55 1 0 0 0 1 0 0 0 0 1 0 0 0 
445 55 1 0 0 0 1 0 0 0 0 0 0 0 0 
448 55 1 0 0 0 3 0 0 0 0 3 0 0 0 
449 55 1 0 0 0 3 0 0 0 0 0 0 0 0 
fn=main
457 63 1 0 0 0 1 40 0 0 0 0 0 0 0 
458 63 1 0 0 0 1 39 0 0 0 0 0 0 0 
459 63 1 0 0 0 1 38 0 0 0 0 0 0 0 
460 63 1 0 0 0 1 37 0 0 0 0 0 0 0 
461 63 1 0 0 0 1 36 0 0 0 1 0 0 0 
462 64 1 0 0 0 1 0 0 0 0 0 0 0 0 
463 64 1 0 0 0 1 0 0 0 0 0 0 0 0 
464 64 1 0 0 0 1 0 0 0 0 0 0 0 0 
465 64 1 0 0 0 1 0 0 0 0 1 0 0 0 
466 65 1 0 0 0 1 0 0 0 0 0 0 0 0 
467 65 1 0 0 0 1 0 0 0 0 2 0 0 0 
468 66 1 0 0 0 1 0 0 0 0 1 0 0 0 
469 66 1 0 0 0 1 0 0 0 0 0 0 0 0 
470 66 1 1 0 0 1 0 0 0 0 1 1 0 11323 
473 66 1 0 0 0 1 0 0 0 0 1 0 0 0 
474 66 1 0 0 0 1 0 0 0 0 0 0 0 0 
475 63 1 0 0 0 1 0 0 0 0 0 0 0 0 
478 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
479 66 1 0 0 0 2 0 0 0 0 0 0 0 0 
480 66 1 0 0 0 2 0 0 0 0 0 0 0 0 
481 66 1 0 0 0 2 0 0 0 0 3 0 0 0 
482 67 1 0 0 0 1 0 0 0 0 1 0 0 0 
483 67 1 0 0 0 1 0 0 0 0 0 0 0 0 
487 69 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 36:
[35] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var a int -1
var b int 0
var c int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv50 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 a))
         (Sle N0 50)]
        false)


Test case: test000002
[Parsed from .ktest]
var a int 0
var b int -1
var c int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv50 32) ) ) ) (=  (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 a))
         (Sle N0 50)
         (Eq (ReadLSB w32 0 b)
             0)]
        false)


--- Program 86 ---
[run.istats content]
version: 1
creator: klee
pid: 10001
cmd: 78.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=78.c
fn=main
14 5 1 0 0 0 1 11 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 10 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 9 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 8 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 7 0 0 0 1 0 0 0 
19 6 1 0 0 0 1 6 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 4 0 0 0 0 0 0 0 
21 6 1 0 0 0 1 2 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
24 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 7 1 0 0 0 51 0 0 0 0 51 0 0 0 
28 7 1 0 0 0 51 0 0 0 0 51 0 0 0 
29 7 1 0 0 0 51 0 0 0 0 0 0 0 0 
30 7 1 50 0 0 51 0 0 0 0 51 50 1 150385 
33 8 1 0 0 0 50 0 0 0 0 50 0 0 0 
34 8 1 0 0 0 50 0 0 0 0 50 0 0 0 
35 8 1 0 0 0 50 0 0 0 0 0 0 0 0 
36 8 1 0 0 0 50 0 0 0 0 0 0 0 0 
37 8 1 0 0 0 50 0 0 0 0 50 0 0 0 
38 9 1 0 0 0 50 0 0 0 0 50 0 0 0 
39 9 1 0 0 0 50 0 0 0 0 50 0 0 0 
40 9 1 0 0 0 50 0 0 0 0 0 0 0 0 
41 9 1 0 0 0 50 0 0 0 0 50 0 0 0 
42 7 1 0 0 0 50 0 0 0 0 0 0 0 0 
45 11 1 0 0 0 51 0 0 0 0 51 0 0 0 
46 11 1 0 0 0 51 0 0 0 0 0 0 0 0 
fn=foo
54 14 1 0 0 0 51 21 0 0 0 0 0 0 0 
55 14 1 0 0 0 51 20 0 0 0 0 0 0 0 
56 14 1 0 0 0 51 19 0 0 0 0 0 0 0 
57 14 1 0 0 0 51 18 0 0 0 51 0 0 0 
58 15 1 0 0 0 51 17 0 0 0 51 0 0 0 
59 15 1 0 0 0 51 16 0 0 0 0 0 0 0 
60 15 1 0 0 0 51 15 0 0 0 51 0 0 0 
63 15 1 0 0 0 51 14 0 0 0 51 0 0 0 
64 15 1 0 0 0 51 13 0 0 0 0 0 0 0 
65 15 1 0 0 0 51 12 0 0 0 51 0 0 0 
66 5 1 0 0 0 51 11 0 0 0 0 0 0 0 
69 5 1 0 0 0 51 10 0 0 0 0 0 0 0 
72 16 1 0 0 0 51 9 0 0 0 51 0 0 0 
73 16 1 0 0 0 51 8 0 0 0 0 0 0 0 
74 16 1 0 0 0 51 7 0 0 0 51 0 0 0 
75 16 1 0 0 0 51 6 0 0 0 0 0 0 0 
76 16 1 0 0 0 51 5 0 0 0 51 0 0 0 
77 17 1 0 0 0 51 4 0 0 0 51 0 0 0 
78 17 1 0 0 0 51 3 0 0 0 0 0 0 0 
79 17 1 0 0 0 51 2 0 0 0 51 0 0 0 
82 17 1 0 0 0 51 1 0 0 0 51 0 0 0 
83 17 1 0 0 0 51 0 0 0 0 0 0 0 0 
86 18 1 0 0 0 51 0 0 0 0 51 0 0 0 


This is the critical path for program 78:
[77] Most complex (longest) path file: test000052.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var x int -51
var y int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv4294967246 32) ?B1 ) (bvsle  ?B1 (_ bv4294967246 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Sle 4294967246
              N0:(ReadLSB w32 0 x))
         (Sle N0
             4294967246)
         (Eq false
             (Slt 0 N0))]
        false)


Test case: test000002
[Parsed from .ktest]
var x int 0
var y int -51
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun y () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  y (_ bv3 32) ) (concat  (select  y (_ bv2 32) ) (concat  (select  y (_ bv1 32) ) (select  y (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (bvsle  (_ bv4294967246 32) ?B1 ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) (bvsle  ?B1 (_ bv4294967246 32) ) ) (bvsle  ?B2 (_ bv4294967246 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
array y[4] : w32 -> w8 = symbolic
(query [(Sle 4294967246
              N0:(ReadLSB w32 0 x))
         (Eq false
             (Slt 0 N0))
         (Sle N0
             4294967246)
         (Sle N1:(ReadLSB w32 0 y)
             4294967246)]
        false)


Test case: test000003
[Parsed from .ktest]
var x int 0
var y int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun y () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  y (_ bv3 32) ) (concat  (select  y (_ bv2 32) ) (concat  (select  y (_ bv1 32) ) (select  y (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (bvsle  (_ bv4294967246 32) ?B1 ) (bvsle  ?B1 (_ bv4294967246 32) ) ) (bvsle  ?B2 (_ bv4294967246 32) ) ) (eq  false (bvslt  (_ bv0 32) ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
array y[4] : w32 -> w8 = symbolic
(query [(Sle 4294967246
              N0:(ReadLSB w32 0 x))
         (Sle N0
             4294967246)
         (Sle N1:(ReadLSB w32 0 y)
             4294967246)]
        false)


Test case: test000004
[Parsed from .ktest]
var x int -50
var y int -50
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun y () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  y (_ bv3 32) ) (concat  (select  y (_ bv2 32) ) (concat  (select  y (_ bv1 32) ) (select  y (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  (_ bv4294967246 32) ?B1 ) (bvsle  ?B1 (_ bv4294967246 32) ) ) (bvsle  ?B2 (_ bv4294967246 32) ) ) (eq  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
array y[4] : w32 -> w8 = symbolic
(query [(Sle 4294967246
              N0:(ReadLSB w32 0 x))
         (Sle N0
             4294967246)
         (Sle N1:(ReadLSB w32 0 y)
             4294967246)
         (Eq false
             (Slt 0 N0))]
        false)


Test case: test000005
[Parsed from .ktest]
var x int -51
var y int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun y () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  y (_ bv3 32) ) (concat  (select  y (_ bv2 32) ) (concat  (select  y (_ bv1 32) ) (select  y (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv4294967246 32) ?B1 ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) (bvsle  ?B2 (_ bv4294967246 32) ) ) ) )

(check-sat)
(exit)


--- Program 87 ---
[run.istats content]
version: 1
creator: klee
pid: 9050
cmd: 63.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=63.c
fn=main
14 5 1 0 0 0 1 34 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 33 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 32 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 31 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 30 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 29 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 28 0 0 0 1 0 0 0 
21 6 1 0 0 0 1 27 0 0 0 0 0 0 0 
22 6 1 0 0 0 1 25 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 23 0 0 0 0 0 0 0 
24 7 1 0 0 0 1 21 0 0 0 0 0 0 0 
25 7 1 0 0 0 1 20 0 0 0 2 0 0 0 
26 8 1 0 0 0 1 18 0 0 0 1 0 0 0 
27 8 1 0 0 0 1 17 0 0 0 0 0 0 0 
28 8 1 1 0 0 1 16 0 0 0 1 2 0 26784 
31 8 1 0 0 0 1 18 0 0 0 1 0 0 0 
32 8 1 0 0 0 1 17 0 0 0 0 0 0 0 
33 5 1 0 0 0 1 16 0 0 0 0 0 0 0 
36 0 1 0 0 0 2 15 0 0 0 0 0 0 0 
37 8 1 0 0 0 2 14 0 0 0 0 0 0 0 
38 8 1 0 0 0 2 13 0 0 0 0 0 0 0 
39 8 1 0 0 0 2 12 0 0 0 3 0 0 0 
40 9 1 0 0 0 1 10 0 0 0 1 0 0 0 
41 10 1 0 0 0 1 9 0 0 0 1 0 0 0 
42 10 1 0 0 0 1 8 0 0 0 0 0 0 0 
43 10 1 1 0 0 1 7 0 0 0 1 1 0 12544 
46 10 1 0 0 0 1 6 0 0 0 1 0 0 0 
47 10 1 0 0 0 1 5 0 0 0 0 0 0 0 
48 10 1 1 0 0 1 4 0 0 0 1 1 0 10963 
51 11 1 0 0 0 1 3 0 0 0 1 0 0 0 
52 11 1 0 0 0 1 2 0 0 0 0 0 0 0 
53 11 1 0 0 0 1 1 0 0 0 1 0 1 9804 
56 11 1 0 0 0 1 3 0 0 0 1 0 0 0 
57 11 1 0 0 0 1 2 0 0 0 0 0 0 0 
58 11 1 0 0 0 1 1 0 0 0 1 0 1 9204 
61 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
62 12 0 0 0 0 0 0 0 0 0 0 0 0 0 
65 13 1 0 0 0 2 0 0 0 0 2 0 0 0 


This is the critical path for program 63:
[62] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var a int -101
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
(query [] false)


--- Program 88 ---
[run.istats content]
version: 1
creator: klee
pid: 8140
cmd: 57.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=57.c
fn=main
13 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
25 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
26 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 9 1 1 0 0 1 0 0 0 0 1 2 0 30905 
30 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
31 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
35 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
36 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
37 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
38 9 1 0 0 0 2 0 0 0 0 3 0 0 0 
39 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
40 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
41 10 1 1 0 0 1 0 0 0 0 1 1 0 10244 
44 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
45 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
46 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
49 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
50 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
51 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
52 10 1 0 0 0 2 0 0 0 0 3 0 0 0 
53 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
54 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
55 11 1 1 0 0 1 0 0 0 0 1 1 0 11971 
58 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
59 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
60 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
63 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
64 11 1 0 0 0 2 0 0 0 0 0 0 0 0 
65 11 1 0 0 0 2 0 0 0 0 0 0 0 0 
66 11 1 0 0 0 2 0 0 0 0 3 0 0 0 
67 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
68 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
69 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
70 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
71 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
72 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
73 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
74 13 1 1 0 0 1 0 0 0 0 1 1 0 62334 
77 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
78 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
79 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
80 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
81 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
84 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
85 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
86 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
87 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
88 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
89 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
90 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
91 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
92 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
93 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
96 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
97 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
98 17 1 0 0 0 2 0 0 0 0 0 0 0 0 
99 17 1 0 0 0 2 0 0 0 0 0 0 0 0 
100 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
101 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
102 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
103 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
106 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
107 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
108 17 1 0 0 0 2 0 0 0 0 0 0 0 0 
109 17 1 2 0 0 2 0 0 0 0 2 2 0 81631 
112 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
113 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
114 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
115 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
116 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
117 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
120 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
121 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
122 17 1 0 0 0 2 0 0 0 0 0 0 0 0 
125 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
126 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
127 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
128 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
129 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
130 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
133 21 1 0 0 0 1 0 0 0 0 1 0 0 0 
134 21 1 0 0 0 1 0 0 0 0 1 0 0 0 
135 21 1 0 0 0 1 0 0 0 0 0 0 0 0 
136 21 1 1 0 0 1 0 0 0 0 1 1 0 14420 
139 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
140 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
141 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
142 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
143 22 1 1 0 0 1 0 0 0 0 1 1 0 59745 
146 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
147 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
148 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
149 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
150 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
153 25 1 0 0 0 1 0 0 0 0 1 0 0 0 
154 25 1 0 0 0 1 0 0 0 0 1 0 0 0 
155 25 1 0 0 0 1 0 0 0 0 0 0 0 0 
156 25 1 0 0 0 1 0 0 0 0 1 0 0 0 
157 25 1 0 0 0 1 0 0 0 0 0 0 0 0 
158 25 1 1 0 0 1 0 0 0 0 1 1 0 92679 
161 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
162 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
163 26 1 0 0 0 1 0 0 0 0 0 0 0 0 
164 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
165 26 1 0 0 0 1 0 0 0 0 0 0 0 0 
166 26 1 1 0 0 1 0 0 0 0 1 1 0 288632 
169 27 1 0 0 0 2 0 0 0 0 2 0 0 0 
170 27 1 0 0 0 2 0 0 0 0 2 0 0 0 
171 27 1 0 0 0 2 0 0 0 0 0 0 0 0 
172 27 1 0 0 0 2 0 0 0 0 0 0 0 0 
173 27 1 0 0 0 2 0 0 0 0 2 0 2 198867 
176 28 1 0 0 0 2 0 0 0 0 0 0 0 0 
177 28 1 0 0 0 2 0 0 0 0 2 0 0 0 
178 29 1 0 0 0 2 0 0 0 0 2 0 0 0 
179 29 1 0 0 0 2 0 0 0 0 2 0 0 0 
180 29 1 0 0 0 2 0 0 0 0 0 0 0 0 
181 29 1 0 0 0 2 0 0 0 0 2 0 0 0 
182 29 1 0 0 0 2 0 0 0 0 0 0 0 0 
185 27 1 0 0 0 2 0 0 0 0 2 0 0 0 
186 27 1 0 0 0 2 0 0 0 0 0 0 0 0 
187 27 1 0 0 0 2 0 0 0 0 0 0 0 0 
188 27 1 0 0 0 2 0 0 0 0 2 0 0 0 
189 27 1 0 0 0 2 0 0 0 0 0 0 0 0 
190 27 1 1 0 0 2 0 0 0 0 2 1 1 271971 
193 30 1 0 0 0 2 0 0 0 0 2 0 0 0 
194 30 1 0 0 0 2 0 0 0 0 2 0 0 0 
195 30 1 0 0 0 2 0 0 0 0 0 0 0 0 
196 30 1 0 0 0 2 0 0 0 0 2 0 0 0 
197 30 1 0 0 0 2 0 0 0 0 0 0 0 0 
200 31 1 0 0 0 1 0 0 0 0 1 0 0 0 
201 31 0 0 0 0 0 0 0 0 0 0 0 0 0 
204 32 1 0 0 0 2 0 0 0 0 2 0 0 0 


This is the critical path for program 57:
[56] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var x int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv1 32) ?B1 ) (bvsle  ?B1 (_ bv50 32) ) ) (=  false (bvslt  (bvsle  (_ bv1 32) ?B1 ) (_ bv1 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 x))
         (Sle N0 50)
         (Eq false
             (Slt (Sle 1 N0) 1))]
        false)


Test case: test000002
[Parsed from .ktest]
var x int 50
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv1 32) ?B1 ) (bvsle  ?B1 (_ bv50 32) ) ) (=  false (bvslt  (bvsle  (_ bv1 32) ?B1 ) (_ bv1 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 x))
         (Sle N0 50)
         (Eq false
             (Slt (Sle 1 N0) 1))]
        false)


--- Program 89 ---
[run.istats content]
version: 1
creator: klee
pid: 7590
cmd: 55.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=55.c
fn=main
12 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
13 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 2 1 0 0 0 1 0 0 0 0 1 0 0 0 
20 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
25 4 1 0 0 0 1 0 0 0 0 2 0 0 0 
26 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 5 1 0 0 0 1 0 0 0 0 2 0 0 0 
28 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
29 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
30 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
31 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 7 1 0 0 0 1 0 0 0 0 1 0 0 0 
33 8 1 0 0 0 1 0 0 0 0 1 0 0 0 
34 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
35 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
36 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
37 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
38 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
39 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
40 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_div_zero_check.c
cfn=klee_div_zero_check
calls=1 48 12
40 10 7 0 0 0 7 0 0 0 0 3 0 0 0 
41 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
42 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
43 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
44 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
47 12 1 0 0 0 15 0 0 0 0 15 0 0 0 
48 12 1 0 0 0 15 0 0 0 0 0 0 0 0 
49 12 1 14 0 0 15 0 0 0 0 15 14 1 32422409 
52 13 1 0 0 0 14 0 0 0 0 14 0 0 0 
53 13 1 0 0 0 14 0 0 0 0 0 0 0 0 
54 13 1 0 0 0 14 0 0 0 0 14 0 0 0 
55 13 1 0 0 0 14 0 0 0 0 0 0 0 0 
56 13 1 10 0 0 14 0 0 0 0 0 10 0 16026590 
59 14 1 0 0 0 6 0 0 0 0 6 0 0 0 
60 14 1 0 0 0 6 0 0 0 0 6 0 0 0 
61 14 1 0 0 0 6 0 0 0 0 0 0 0 0 
62 14 1 0 0 0 6 0 0 0 0 6 0 0 0 
63 14 1 0 0 0 6 0 0 0 0 0 0 0 0 
66 15 1 0 0 0 15 0 0 0 0 15 0 0 0 
67 15 1 0 0 0 15 0 0 0 0 0 0 0 0 
68 15 1 0 0 0 15 0 0 0 0 15 0 0 0 
69 15 1 0 0 0 15 0 0 0 0 0 0 0 0 
70 15 1 0 0 0 15 0 0 0 0 0 0 0 0 
71 15 1 15 0 0 15 0 0 0 0 0 15 0 22699671 
74 16 1 0 0 0 14 0 0 0 0 14 0 0 0 
75 16 1 0 0 0 14 0 0 0 0 0 0 0 0 
76 16 1 0 0 0 14 0 0 0 0 14 0 0 0 
77 16 1 0 0 0 14 0 0 0 0 0 0 0 0 
78 16 1 2 0 0 14 0 0 0 0 0 2 0 3396981 
81 17 1 0 0 0 5 0 0 0 0 5 0 0 0 
82 17 1 0 0 0 5 0 0 0 0 0 0 0 0 
83 17 1 0 0 0 5 0 0 0 0 5 0 0 0 
84 17 1 0 0 0 5 0 0 0 0 0 0 0 0 
87 18 1 0 0 0 14 0 0 0 0 14 0 0 0 
88 18 1 0 0 0 14 0 0 0 0 0 0 0 0 
89 18 1 0 0 0 14 0 0 0 0 14 0 0 0 
90 18 1 0 0 0 14 0 0 0 0 0 0 0 0 
91 18 1 3 0 0 14 0 0 0 0 0 3 0 4621302 
94 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
95 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
96 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
97 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
100 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
101 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
102 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
105 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
106 21 1 0 0 0 5 0 0 0 0 0 0 0 0 
107 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
108 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
109 21 1 0 0 0 5 0 0 0 0 0 0 0 0 
110 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
111 22 1 0 0 0 5 0 0 0 0 5 0 0 0 
112 22 1 0 0 0 5 0 0 0 0 0 0 0 0 
115 23 1 0 0 0 7 0 0 0 0 7 0 0 0 
116 23 1 0 0 0 7 0 0 0 0 7 0 0 0 
117 23 1 0 0 0 7 0 0 0 0 0 0 0 0 
118 23 1 0 0 0 7 0 0 0 0 0 0 0 0 
cfn=main
calls=7 10 2
118 23 0 0 0 0 15 0 0 0 0 0 0 0 0 
119 23 1 0 0 0 5 0 0 0 0 0 0 0 0 
120 23 1 0 0 0 5 0 0 0 0 5 0 0 0 
121 24 1 0 0 0 5 0 0 0 0 0 0 0 0 
124 23 1 0 0 0 11 0 0 0 0 11 0 0 0 
125 23 1 0 0 0 11 0 0 0 0 0 0 0 0 
126 23 1 0 0 0 11 0 0 0 0 11 0 0 0 
127 23 1 0 0 0 11 0 0 0 0 0 0 0 0 
130 25 1 0 0 0 11 0 0 0 0 11 0 0 0 
131 25 1 0 0 0 11 0 0 0 0 0 0 0 0 
132 25 1 0 0 0 11 0 0 0 0 11 0 0 0 
133 22 1 0 0 0 11 0 0 0 0 0 0 0 0 
136 27 1 0 0 0 5 0 0 0 0 5 0 0 0 
137 27 1 0 0 0 5 0 0 0 0 5 0 0 0 
138 27 1 0 0 0 5 0 0 0 0 0 0 0 0 
139 27 1 0 0 0 5 0 0 0 0 0 0 0 0 
142 28 1 0 0 0 7 0 0 0 0 7 0 0 0 
143 28 1 0 0 0 7 0 0 0 0 0 0 0 0 
144 28 1 0 0 0 7 0 0 0 0 7 0 0 0 
145 28 1 0 0 0 7 0 0 0 0 0 0 0 0 
148 29 1 0 0 0 11 0 0 0 0 11 0 0 0 
149 29 1 0 0 0 11 0 0 0 0 0 0 0 0 
150 29 1 0 0 0 11 0 0 0 0 11 0 0 0 
151 29 1 0 0 0 11 0 0 0 0 0 0 0 0 
154 30 1 0 0 0 5 0 0 0 0 0 0 0 0 
155 30 1 0 0 0 5 0 0 0 0 5 0 0 0 
156 31 1 0 0 0 5 0 0 0 0 0 0 0 0 
159 32 1 0 0 0 11 0 0 0 0 11 0 0 0 
160 32 1 0 0 0 11 0 0 0 0 11 0 0 0 
161 32 1 0 0 0 11 0 0 0 0 11 0 0 0 
162 32 1 0 0 0 11 0 0 0 0 0 0 0 0 
163 32 1 9 0 0 11 0 0 0 0 11 9 2 10511015 
166 33 1 0 0 0 5 0 0 0 0 0 0 0 0 
167 33 1 0 0 0 5 0 0 0 0 0 0 0 0 
168 33 1 0 0 0 5 0 0 0 0 5 0 0 0 
169 33 1 0 0 0 5 0 0 0 0 0 0 0 0 
172 35 1 0 0 0 16 0 0 0 0 16 0 0 0 
173 35 1 0 0 0 16 0 0 0 0 16 0 0 0 
174 35 1 0 0 0 16 0 0 0 0 0 0 0 0 
175 35 1 0 0 0 16 0 0 0 0 0 0 0 0 
178 36 1 0 0 0 11 0 0 0 0 11 0 0 0 
179 36 1 0 0 0 11 0 0 0 0 11 0 0 0 
180 36 1 0 0 0 11 0 0 0 0 0 0 0 0 
183 37 1 0 0 0 5 0 0 0 0 5 0 0 0 
184 37 1 0 0 0 5 0 0 0 0 5 0 0 0 
185 37 1 0 0 0 5 0 0 0 0 0 0 0 0 
188 39 1 0 0 0 16 0 0 0 0 16 0 0 0 
189 39 1 0 0 0 16 0 0 0 0 0 0 0 0 
fn=kleesq
197 41 1 0 0 0 1 30 0 0 0 0 0 0 0 
198 41 1 0 0 0 1 28 0 0 0 0 0 0 0 
199 41 1 0 0 0 1 26 0 0 0 0 0 0 0 
200 41 1 0 0 0 1 24 0 0 0 1 0 0 0 
201 42 1 0 0 0 1 22 0 0 0 1 0 0 0 
202 42 1 0 0 0 1 20 0 0 0 0 0 0 0 
203 42 1 1 0 0 1 18 0 0 0 1 2 0 21351 
206 42 1 0 0 0 1 20 0 0 0 1 0 0 0 
207 42 1 0 0 0 1 18 0 0 0 0 0 0 0 
210 43 1 0 0 0 1 16 0 0 0 1 0 0 0 
211 43 1 0 0 0 1 14 0 0 0 0 0 0 0 
214 41 1 0 0 0 1 12 0 0 0 0 0 0 0 
215 41 1 0 0 0 1 10 0 0 0 0 0 0 0 
218 44 1 0 0 0 5 8 0 0 0 5 0 0 0 
219 44 1 0 0 0 5 6 0 0 0 0 0 0 0 
222 45 1 0 0 0 3 4 0 0 0 3 0 0 0 
223 45 1 0 0 0 3 3 0 0 0 0 0 0 0 
224 45 1 0 0 0 3 2 0 0 0 3 0 0 0 
227 47 0 0 0 0 0 1 0 0 1 0 0 0 0 
228 47 0 0 0 0 0 0 0 0 0 0 0 0 0 
231 48 1 0 0 0 5 0 0 0 0 5 0 0 0 


This is the critical path for program 55:
[54] Most complex (longest) path file: test000002.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) (_ bv0 32) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq 0
             (ReadLSB w32 0 n))]
        false)


--- Program 90 ---
[run.istats content]
version: 1
creator: klee
pid: 9058
cmd: 67.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=67.c
fn=main
13 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 0 0 0 0 2 0 0 0 
21 7 1 0 0 0 1 0 0 0 0 1 0 0 0 
22 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 7 1 1 0 0 1 0 0 0 0 1 2 0 25018 
26 7 1 0 0 0 1 0 0 0 0 1 0 0 0 
27 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
28 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
31 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
32 7 1 0 0 0 2 0 0 0 0 0 0 0 0 
33 7 1 0 0 0 2 0 0 0 0 0 0 0 0 
34 7 1 0 0 0 2 0 0 0 0 3 0 0 0 
35 8 1 0 0 0 1 0 0 0 0 1 0 0 0 
36 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
37 8 1 1 0 0 1 0 0 0 0 1 1 0 8484 
40 8 1 0 0 0 1 0 0 0 0 1 0 0 0 
41 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
42 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
45 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
46 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
47 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
48 8 1 0 0 0 2 0 0 0 0 3 0 0 0 
49 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
50 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
51 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
52 9 1 1 0 0 1 0 0 0 0 1 1 0 12100 
55 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
56 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
57 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
58 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
59 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
60 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
61 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
62 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
63 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
64 11 1 1 0 0 1 0 0 0 0 1 1 0 22359 
67 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
68 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
69 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
70 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
71 13 1 0 0 0 2 0 0 0 0 2 0 0 0 
72 13 1 0 0 0 2 0 0 0 0 2 0 0 0 
73 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
74 13 1 0 0 0 2 0 0 0 0 2 0 0 0 
75 14 1 0 0 0 2 0 0 0 0 2 0 0 0 
76 14 1 0 0 0 2 0 0 0 0 2 0 0 0 
77 14 1 0 0 0 2 0 0 0 0 0 0 0 0 
78 14 1 0 0 0 2 0 0 0 0 2 0 0 0 
79 15 1 0 0 0 2 0 0 0 0 0 0 0 0 
80 15 1 0 0 0 2 0 0 0 0 2 0 0 0 
81 16 1 0 0 0 2 0 0 0 0 2 0 0 0 
82 16 1 0 0 0 2 0 0 0 0 2 0 0 0 
83 17 1 0 0 0 2 0 0 0 0 0 0 0 0 
84 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
85 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
86 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
87 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
88 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
89 5 1 0 0 0 2 0 0 0 0 0 0 0 0 
92 0 1 0 0 0 3 0 0 0 0 0 0 0 0 
93 19 1 0 0 0 3 0 0 0 0 0 0 0 0 
94 19 1 0 0 0 3 0 0 0 0 0 0 0 0 
95 19 1 0 0 0 3 0 0 0 0 4 0 0 0 
96 20 1 0 0 0 3 0 0 0 0 0 0 0 0 
97 20 1 0 0 0 3 0 0 0 0 3 0 0 0 
98 20 1 0 0 0 3 0 0 0 0 0 0 0 0 
99 20 1 0 0 0 3 0 0 0 0 3 0 3 3686066 
102 21 1 0 0 0 2 0 0 0 0 0 0 0 0 
103 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
104 21 1 0 0 0 2 0 0 0 0 0 0 0 0 
107 23 1 0 0 0 3 0 0 0 0 3 0 0 0 
108 23 1 0 0 0 3 0 0 0 0 3 0 0 0 
109 23 1 0 0 0 3 0 0 0 0 0 0 0 0 
110 23 1 0 0 0 3 0 0 0 0 3 0 3 3686066 
113 24 1 0 0 0 2 0 0 0 0 2 0 0 0 
114 24 1 0 0 0 2 0 0 0 0 2 0 0 0 
115 24 1 0 0 0 2 0 0 0 0 0 0 0 0 
116 24 1 0 0 0 2 0 0 0 0 2 0 0 0 
117 25 1 0 0 0 2 0 0 0 0 0 0 0 0 
120 26 1 0 0 0 3 0 0 0 0 3 0 0 0 
121 26 1 0 0 0 3 0 0 0 0 0 0 0 0 
122 26 1 0 0 0 3 0 0 0 0 3 0 0 0 
123 26 1 0 0 0 3 0 0 0 0 0 0 0 0 
126 28 1 0 0 0 6 0 0 0 0 6 0 0 0 
127 28 1 0 0 0 6 0 0 0 0 6 0 0 0 
128 28 1 0 0 0 6 0 0 0 0 0 0 0 0 
129 28 1 0 0 0 6 0 0 0 0 6 0 0 0 
130 29 1 0 0 0 6 0 0 0 0 0 0 0 0 
133 31 1 0 0 0 3 0 0 0 0 3 0 0 0 
134 31 1 0 0 0 3 0 0 0 0 0 0 0 0 
135 31 1 0 0 0 3 0 0 0 0 3 0 0 0 
136 31 1 0 0 0 3 0 0 0 0 0 0 0 0 
139 32 1 0 0 0 3 0 0 0 0 3 0 0 0 
140 32 1 0 0 0 3 0 0 0 0 3 0 0 0 
141 32 1 0 0 0 3 0 0 0 0 0 0 0 0 
142 32 1 0 0 0 3 0 0 0 0 3 0 0 0 
143 33 1 0 0 0 3 0 0 0 0 0 0 0 0 
146 35 1 0 0 0 9 0 0 0 0 9 0 0 0 
147 35 1 0 0 0 9 0 0 0 0 0 0 0 0 
fn=main
155 5 1 0 0 0 1 84 0 0 0 0 0 0 0 
156 5 1 0 0 0 1 83 0 0 0 0 0 0 0 
157 5 1 0 0 0 1 82 0 0 0 0 0 0 0 
158 5 1 0 0 0 1 81 0 0 0 1 0 0 0 
159 6 1 0 0 0 1 80 0 0 0 0 0 0 0 
160 6 1 0 0 0 1 78 0 0 0 0 0 0 0 
161 6 1 0 0 0 1 76 0 0 0 0 0 0 0 
162 7 1 0 0 0 1 74 0 0 0 0 0 0 0 
163 7 1 0 0 0 1 73 0 0 0 2 0 0 0 
164 8 1 0 0 0 1 71 0 0 0 1 0 0 0 
165 8 1 0 0 0 1 70 0 0 0 0 0 0 0 
166 8 1 1 0 0 1 69 0 0 0 1 1 0 8445 
169 8 1 0 0 0 1 71 0 0 0 1 0 0 0 
170 8 1 0 0 0 1 70 0 0 0 0 0 0 0 
171 5 1 0 0 0 1 69 0 0 0 0 0 0 0 
174 0 1 0 0 0 3 68 0 0 0 0 0 0 0 
175 8 1 0 0 0 3 67 0 0 0 0 0 0 0 
176 8 1 0 0 0 3 66 0 0 0 0 0 0 0 
177 8 1 0 0 0 3 65 0 0 0 4 0 0 0 
178 9 1 0 0 0 3 63 0 0 0 0 0 0 0 
179 9 1 0 0 0 3 62 0 0 0 3 0 0 0 
180 9 1 0 0 0 3 61 0 0 0 0 0 0 0 
181 9 1 0 0 0 3 60 0 0 0 0 0 0 0 
182 9 1 0 0 0 3 59 0 0 0 3 0 3 2450561 
185 10 1 0 0 0 2 63 0 0 0 2 0 0 0 
186 10 1 0 0 0 2 62 0 0 0 2 0 0 0 
187 10 1 0 0 0 2 61 0 0 0 0 0 0 0 
188 10 1 0 0 0 2 60 0 0 0 0 0 0 0 
189 10 1 0 0 0 2 59 0 0 0 2 0 0 0 
190 5 1 0 0 0 2 58 0 0 0 0 0 0 0 
193 0 1 0 0 0 3 57 0 0 0 0 0 0 0 
194 10 1 0 0 0 3 56 0 0 0 0 0 0 0 
195 10 1 0 0 0 3 55 0 0 0 0 0 0 0 
196 10 1 0 0 0 3 54 0 0 0 4 0 0 0 
197 11 1 0 0 0 3 52 0 0 0 0 0 0 0 
198 11 1 0 0 0 3 51 0 0 0 3 0 0 0 
199 11 1 0 0 0 3 50 0 0 0 0 0 0 0 
200 11 1 1 0 0 3 49 0 0 0 3 1 1 1500439 
203 12 1 0 0 0 3 51 0 0 0 3 0 0 0 
204 12 1 0 0 0 3 50 0 0 0 0 0 0 0 
205 12 1 0 0 0 3 49 0 0 0 3 0 0 0 
206 12 1 0 0 0 3 48 0 0 0 0 0 0 0 
207 12 1 0 0 0 3 47 0 0 0 3 0 0 0 
208 5 1 0 0 0 3 46 0 0 0 0 0 0 0 
211 0 1 0 0 0 4 45 0 0 0 0 0 0 0 
212 12 1 0 0 0 4 44 0 0 0 0 0 0 0 
213 12 1 0 0 0 4 43 0 0 0 0 0 0 0 
214 12 1 0 0 0 4 42 0 0 0 5 0 0 0 
215 13 1 0 0 0 4 40 0 0 0 4 0 0 0 
216 13 1 0 0 0 4 39 0 0 0 0 0 0 0 
217 13 1 0 0 0 4 38 0 0 0 0 0 0 0 
218 13 1 0 0 0 4 37 0 0 0 0 0 0 0 
219 13 1 0 0 0 4 36 0 0 0 4 0 4 2152309 
222 14 1 0 0 0 2 32 0 0 0 2 0 0 0 
223 14 1 0 0 0 2 31 0 0 0 2 0 0 0 
224 14 1 0 0 0 2 30 0 0 0 0 0 0 0 
225 14 1 0 0 0 2 29 0 0 0 2 0 0 0 
226 5 1 0 0 0 2 28 0 0 0 0 0 0 0 
229 0 1 0 0 0 3 27 0 0 0 0 0 0 0 
230 14 1 0 0 0 3 26 0 0 0 0 0 0 0 
231 14 1 0 0 0 3 25 0 0 0 0 0 0 0 
232 14 1 0 0 0 3 24 0 0 0 3 0 0 0 
233 15 1 0 0 0 3 22 0 0 0 0 0 0 0 
234 15 1 0 0 0 3 21 0 0 0 3 0 0 0 
235 5 1 0 0 0 3 20 0 0 0 0 0 0 0 
238 17 1 0 0 0 3 19 0 0 0 3 0 0 0 
239 17 1 0 0 0 3 18 0 0 0 0 0 0 0 
240 17 1 0 0 0 3 17 0 0 0 0 0 0 0 
241 17 1 0 0 0 3 16 0 0 0 3 0 0 0 
242 17 1 0 0 0 3 15 0 0 0 0 0 0 0 
243 17 1 1 0 0 3 14 0 0 0 3 1 1 8683710 
246 18 1 0 0 0 3 13 0 0 0 3 0 0 0 
247 18 1 0 0 0 3 12 0 0 0 3 0 0 0 
248 18 1 0 0 0 3 11 0 0 0 0 0 0 0 
249 18 1 0 0 0 3 10 0 0 0 3 0 0 0 
250 18 1 0 0 0 3 9 0 0 0 0 0 0 0 
251 18 1 0 0 0 3 8 0 0 0 0 0 0 0 
252 18 1 0 0 0 3 7 0 0 0 3 0 3 2548276 
255 19 1 0 0 0 3 23 0 0 0 3 0 0 0 
256 19 1 0 0 0 3 22 0 0 0 3 0 0 0 
257 19 1 0 0 0 3 21 0 0 0 0 0 0 0 
258 19 1 0 0 0 3 20 0 0 0 3 0 3 2903073 
261 20 1 0 0 0 3 41 0 0 0 3 0 0 0 
262 20 1 0 0 0 3 40 0 0 0 3 0 0 0 
263 20 1 0 0 0 3 39 0 0 0 0 0 0 0 
264 20 1 0 0 0 3 38 0 0 0 0 0 0 0 
265 20 1 0 0 0 3 37 0 0 0 3 0 0 0 
266 21 1 0 0 0 3 35 0 0 0 0 0 0 0 
267 21 1 0 0 0 3 33 0 0 0 3 0 0 0 
268 21 1 0 0 0 3 32 0 0 0 0 0 0 0 
269 21 1 0 0 0 3 31 0 0 0 0 0 0 0 
270 21 1 0 0 0 3 30 0 0 0 3 0 3 3028653 
273 23 1 0 0 0 3 30 0 0 0 3 0 0 0 
274 23 1 0 0 0 3 29 0 0 0 3 0 0 0 
275 23 1 0 0 0 3 28 0 0 0 0 0 0 0 
276 23 1 0 0 0 3 27 0 0 0 0 0 0 0 
277 23 1 0 0 0 3 26 0 0 0 0 0 0 0 
278 23 1 0 0 0 3 25 0 0 0 3 0 0 0 
279 24 1 0 0 0 3 23 0 0 0 0 0 0 0 
280 24 1 0 0 0 3 21 0 0 0 3 0 0 0 
281 24 1 0 0 0 3 20 0 0 0 0 0 0 0 
282 24 1 0 0 0 3 19 0 0 0 0 0 0 0 
283 24 1 0 0 0 3 18 0 0 0 3 0 0 0 
284 24 1 0 0 0 3 17 0 0 0 0 0 0 0 
285 24 1 1 0 0 3 16 0 0 0 3 1 1 8652177 
288 25 1 0 0 0 3 22 0 0 0 3 0 0 0 
289 25 1 0 0 0 3 21 0 0 0 3 0 0 0 
290 25 1 0 0 0 3 20 0 0 0 0 0 0 0 
291 25 1 0 0 0 3 19 0 0 0 0 0 0 0 
292 25 1 0 0 0 3 18 0 0 0 3 0 0 0 
293 26 1 0 0 0 3 16 0 0 0 0 0 0 0 
296 28 1 0 0 0 9 15 0 0 0 9 0 0 0 
297 28 1 0 0 0 9 14 0 0 0 0 0 0 0 
298 28 1 0 0 0 9 13 0 0 0 0 0 0 0 
299 28 1 0 0 0 9 12 0 0 0 9 0 9 4788117 
302 29 1 0 0 0 3 10 0 0 0 3 0 0 0 
303 29 1 0 0 0 3 9 0 0 0 3 0 0 0 
304 29 1 0 0 0 3 8 0 0 0 0 0 0 0 
305 29 1 0 0 0 3 7 0 0 0 3 0 0 0 
306 30 1 0 0 0 3 5 0 0 0 3 0 0 0 
307 30 1 0 0 0 3 4 0 0 0 0 0 0 0 
308 30 1 0 0 0 3 3 0 0 0 0 0 0 0 
309 30 1 0 0 0 3 2 0 0 0 3 0 0 0 
312 7 1 0 0 0 3 1 0 0 0 0 0 0 0 
315 32 1 0 0 0 3 0 0 0 0 3 0 0 0 


This is the critical path for program 67:
[66] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvslt  (_ bv1 32) ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Eq false (Slt 1 N0))]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (bvslt  (_ bv1 32) ?B1 ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Slt 1 N0)]
        false)


--- Program 91 ---
[run.istats content]
version: 1
creator: klee
pid: 6651
cmd: 28.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=28.c
fn=main
13 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
25 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
26 9 1 0 0 0 1 0 0 0 0 2 0 0 0 
27 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
28 10 1 0 0 0 1 0 0 0 0 2 0 0 0 
29 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
30 11 1 0 0 0 1 0 0 0 0 2 0 0 0 
31 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
32 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
33 12 1 1 0 0 1 0 0 0 0 1 2 0 26056 
36 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
37 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
38 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
41 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
42 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
43 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
44 12 1 0 0 0 2 0 0 0 0 3 0 0 0 
45 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
46 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
47 13 1 1 0 0 1 0 0 0 0 1 1 0 16628 
50 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
51 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
52 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
55 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
56 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
57 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
58 13 1 0 0 0 2 0 0 0 0 3 0 0 0 
59 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
60 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
61 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
62 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
63 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
66 0 1 0 0 0 3 0 0 0 0 0 0 0 0 
67 14 1 0 0 0 3 0 0 0 0 3 0 0 0 
68 14 1 0 0 0 3 0 0 0 0 0 0 0 0 
69 14 1 0 0 0 3 0 0 0 0 3 0 0 0 
70 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
71 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
72 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
73 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
74 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
77 0 1 0 0 0 4 0 0 0 0 0 0 0 0 
78 15 1 0 0 0 4 0 0 0 0 4 0 0 0 
79 15 1 0 0 0 4 0 0 0 0 0 0 0 0 
80 15 1 0 0 0 4 0 0 0 0 4 0 0 0 
81 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
82 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
83 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
84 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
85 16 1 1 0 0 1 0 0 0 0 1 1 0 71123 
88 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
89 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
90 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
91 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
92 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
93 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_abort.c
cfn=klee_abort
calls=1 104 12
93 17 7 0 0 0 7 0 0 0 0 3 0 4 106604 
94 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
95 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
96 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
97 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
98 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
99 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
100 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
101 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
102 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
103 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
104 18 1 1 0 0 1 0 0 0 0 1 1 1 217618 
107 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
108 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
109 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
110 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
111 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
112 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
113 18 1 1 0 0 1 0 0 0 0 1 1 1 102997 
116 19 1 0 0 0 2 0 0 0 0 1 0 0 0 
117 19 0 0 0 0 0 0 0 0 0 0 0 0 0 
120 20 1 0 0 0 3 0 0 0 0 3 0 0 0 


This is the critical path for program 28:
[27] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Eq false (Slt 0 N0))]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (bvslt  (_ bv0 32) ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Slt 0 N0)]
        false)


Test case: test000004
[Parsed from .ktest]
var n int 5
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) (?B2 (div  ?B1 (_ bv5 32) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvslt  (_ bv0 32) ?B2 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Eq false (Slt 0 (Div w32 N0 5))]
        false)


Test case: test000005
[Parsed from .ktest]
var n int 15
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) (?B2 (div  ?B1 (_ bv5 32) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (and  (bvsle  ?B2 (_ bv4294967295 32) ) (bvsle  ?B2 (_ bv2147483647 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Sle (Div w32 N0 5) 4294967295)
         (Sle (Div w32 N0 5) 2147483647)]
        false)


Test case: test000006
[Parsed from .ktest]
var n int 25
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) (?B2 (div  ?B1 (_ bv5 32) ) ) ) (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvslt  ?B1 (_ bv100 32) ) ) (=  false (bvslt  (_ bv0 32) ?B2 ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Slt N0 100)
         (Eq false (Slt 0 (Div w32 N0 5))]
        false)


Test case: test000007
[Parsed from .ktest]
var n int 35
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) (?B2 (div  ?B1 (_ bv5 32) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvslt  ?B1 (_ bv100 32) ) ) (bvsle  ?B2 (_ bv4294967295 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Slt N0 100)
         (Sle (Div w32 N0 5) 4294967295)]
        false)


--- Program 92 ---
[run.istats content]
version: 1
creator: klee
pid: 6718
cmd: 28.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=28.c
fn=main
13 5 1 0 0 0 1 38 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 37 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 36 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 35 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 34 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 33 0 0 0 1 0 0 0 
19 6 1 0 0 0 1 32 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 30 0 0 0 0 0 0 0 
21 6 1 0 0 0 1 28 0 0 0 1 0 0 0 
22 7 1 0 0 0 1 27 0 0 0 0 0 0 0 
23 7 1 0 0 0 1 25 0 0 0 2 0 0 0 
24 8 1 0 0 0 1 23 0 0 0 1 0 0 0 
25 8 1 0 0 0 1 22 0 0 0 0 0 0 0 
26 8 1 1 0 0 1 21 0 0 0 1 2 0 24971 
29 8 1 0 0 0 1 23 0 0 0 1 0 0 0 
30 8 1 0 0 0 1 22 0 0 0 0 0 0 0 
31 5 1 0 0 0 1 21 0 0 0 0 0 0 0 
34 0 1 0 0 0 2 20 0 0 0 0 0 0 0 
35 8 1 0 0 0 2 19 0 0 0 0 0 0 0 
36 8 1 0 0 0 2 18 0 0 0 0 0 0 0 
37 8 1 0 0 0 2 17 0 0 0 3 0 0 0 
38 9 1 0 0 0 1 15 0 0 0 0 0 0 0 
39 9 1 0 0 0 1 13 0 0 0 1 0 0 0 
40 9 1 0 0 0 1 12 0 0 0 0 0 0 0 
43 9 1 0 0 0 11 11 0 0 0 11 0 0 0 
44 9 1 0 0 0 11 10 0 0 0 0 0 0 0 
45 9 1 0 0 0 11 9 0 0 0 11 0 0 0 
46 10 1 0 0 0 11 8 0 0 0 0 0 0 0 
49 9 1 0 0 0 11 7 0 0 0 11 0 0 0 
50 9 1 0 0 0 11 6 0 0 0 0 0 0 0 
51 9 1 0 0 0 11 5 0 0 0 11 0 0 0 
52 9 1 0 0 0 11 4 0 0 0 0 0 0 0 
53 9 1 0 0 0 11 3 0 0 0 11 0 0 0 
54 9 1 0 0 0 11 2 0 0 0 0 0 0 0 
55 9 1 10 0 0 11 1 0 0 0 11 10 1 338001 
58 11 1 0 0 0 11 20 0 0 0 11 0 0 0 
59 11 1 0 0 0 11 19 0 0 0 0 0 0 0 
60 11 1 0 0 0 11 18 0 0 0 11 0 0 0 
61 11 1 0 0 0 11 17 0 0 0 0 0 0 0 
64 12 1 0 0 0 11 16 0 0 0 11 0 0 0 
65 12 1 0 0 0 11 15 0 0 0 11 0 0 0 
66 12 1 0 0 0 11 14 0 0 0 0 0 0 0 
67 12 1 0 0 0 11 13 0 0 0 0 0 0 0 
68 12 1 0 0 0 11 12 0 0 0 11 0 0 0 
69 12 1 0 0 0 11 11 0 0 0 0 0 0 0 
70 12 1 0 0 0 11 10 0 0 0 11 0 0 0 
71 12 1 0 0 0 11 9 0 0 0 0 0 0 0 
74 13 1 0 0 0 11 5 0 0 0 11 0 0 0 
75 13 1 0 0 0 11 4 0 0 0 0 0 0 0 
76 13 1 0 0 0 11 3 0 0 0 11 0 0 0 
77 13 1 0 0 0 11 2 0 0 0 0 0 0 0 
78 13 1 0 0 0 11 1 0 0 0 0 0 0 0 
81 14 0 0 0 0 0 0 0 0 0 0 0 0 0 
84 15 1 0 0 0 11 0 0 0 0 11 0 0 0 


This is the critical path for program 28:
[27] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var start int 0
var cycles int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (bvuge  (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) (_ bv1 32) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
(query [(Uge (ReadLSB w32 0 start)
              1)]
        False)


Test case: test000002
[Parsed from .ktest]
var start int 1
var cycles int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun cycles () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  cycles (_ bv3 32) ) (concat  (select  cycles (_ bv2 32) ) (concat  (select  cycles (_ bv1 32) ) (select  cycles (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (bvsle  ?B1 (_ bv100 32) ) (bvsgt  ?B1 (_ bv0 32) ) ) (=  ?B2 (_ bv1 32) ) ) (bvsle  (bvadd  ?B1 (bvmul  ?B2 (_ bv100 32) ) ) (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
array cycles[4] : w32 -> w8 = symbolic
(query [(Sle (Sle N0:(ReadLSB w32 0 start)
              100)
              (Sgt N0 0))
         (= (Add w32 N0:(ReadLSB w32 0 start)
                   (Mul w32 N1:(ReadLSB w32 0 cycles)
                           100))
             100)]
        False)


Test case: test000003
[Parsed from .ktest]
var start int 2
var cycles int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun cycles () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  cycles (_ bv3 32) ) (concat  (select  cycles (_ bv2 32) ) (concat  (select  cycles (_ bv1 32) ) (select  cycles (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (bvsle  ?B1 (_ bv100 32) ) (bvsgt  ?B1 (_ bv0 32) ) ) (=  ?B2 (_ bv1 32) ) ) (bvsle  (bvadd  ?B1 (bvmul  ?B2 (_ bv100 32) ) ) (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
array cycles[4] : w32 -> w8 = symbolic
(query [(Sle (Sle N0:(ReadLSB w32 0 start)
              100)
              (Sgt N0 0))
         (= (Add w32 N0:(ReadLSB w32 0 start)
                   (Mul w32 N1:(ReadLSB w32 0 cycles)
                           100))
             100)]
        False)


Test case: test000004
[Parsed from .ktest]
var start int 3
var cycles int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun cycles () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  cycles (_ bv3 32) ) (concat  (select  cycles (_ bv2 32) ) (concat  (select  cycles (_ bv1 32) ) (select  cycles (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (bvsle  ?B1 (_ bv100 32) ) (bvsgt  ?B1 (_ bv0 32) ) ) (=  ?B2 (_ bv1 32) ) ) (bvsle  (bvadd  ?B1 (bvmul  ?B2 (_ bv100 32) ) ) (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
array cycles[4] : w32 -> w8 = symbolic
(query [(Sle (Sle N0:(ReadLSB w32 0 start)
              100)
              (Sgt N0 0))
         (= (Add w32 N0:(ReadLSB w32 0 start)
                   (Mul w32 N1:(ReadLSB w32 0 cycles)
                           100))
             100)]
        False)


Test case: test000005
[Parsed from .ktest]
var start int 4
var cycles int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun cycles () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  cycles (_ bv3 32) ) (concat  (select  cycles (_ bv2 32) ) (concat  (select  cycles (_ bv1 32) ) (select  cycles (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (bvsle  ?B1 (_ bv100 32) ) (bvsgt  ?B1 (_ bv0 32) ) ) (=  ?B2 (_ bv1 32) ) ) (bvsle  (bvadd  ?B1 (bvmul  ?B2 (_ bv100 32) ) ) (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
array cycles[4] : w32 -> w8 = symbolic
(query [(Sle (Sle N0:(ReadLSB w32 0 start)
              100)
              (Sgt N0 0))
         (Eq N1:(ReadLSB w32 0 cycles) 1)
         (Sle (Add w32 N0 (Mul w32 N1 100) 100))]
        False)


Test case: test000006
[Parsed from .ktest]
var start int 5
var cycles int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun cycles () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  cycles (_ bv3 32) ) (concat  (select  cycles (_ bv2 32) ) (concat  (select  cycles (_ bv1 32) ) (select  cycles (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (bvsle  ?B1 (_ bv100 32) ) (bvsgt  ?B1 (_ bv0 32) ) ) (bvsle  ?B2 (_ bv1 32) ) ) (bvsle  (bvadd  ?B1 (bvmul  ?B2 (_ bv100 32) ) ) (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
array cycles[4] : w32 -> w8 = symbolic
(query [(Sle (Sle N0:(ReadLSB w32 0 start)
              100)
              (Sgt N0 0))
         (Sle N1:(ReadLSB w32 0 cycles) 1)
         (Sle (Add w32 N0 (Mul w32 N1 100) 100)]
        False)


Test case: test000007
[Parsed from .ktest]
var start int 6
var cycles int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun cycles () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  cycles (_ bv3 32) ) (concat  (select  cycles (_ bv2 32) ) (concat  (select  cycles (_ bv1 32) ) (select  cycles (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (bvsle  ?B1 (_ bv100 32) ) (bvsgt  ?B1 (_ bv0 32) ) ) (=  ?B2 (_ bv1 32) ) ) (bvsle  (bvadd  ?B1 (bvmul  ?B2 (_ bv100 32) ) ) (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
array cycles[4] : w32 -> w8 = symbolic
(query [(Sle (Sle N0:(ReadLSB w32 0 start)
              100)
              (Sgt N0 0))
         (Eq N1:(ReadLSB w32 0 cycles) 1)
         (Sle (Add w32 N0 (Mul w32 N1 100) 100)]
        False)


--- Program 93 ---
[run.istats content]
version: 1
creator: klee
pid: 5770
cmd: 8.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=8.c
fn=main
12 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
13 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 3 1 0 0 0 1 0 0 0 0 1 0 0 0 
16 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 4 1 0 0 0 1 0 0 0 0 1 0 0 0 
19 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
22 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
24 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
25 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
26 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
28 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
29 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
30 9 1 1 0 0 1 0 0 0 0 1 2 0 27809 
33 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
34 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
35 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
38 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
39 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
40 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
41 9 1 0 0 0 2 0 0 0 0 3 0 0 0 
42 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
43 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
44 10 1 1 0 0 1 0 0 0 0 1 1 0 10916 
47 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
48 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
49 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
50 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
51 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
52 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
53 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
54 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
55 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
56 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
57 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
60 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
61 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
62 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
63 12 1 0 0 0 2 0 0 0 0 3 0 0 0 
64 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
65 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
66 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
67 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
68 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
69 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
70 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
71 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
72 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
73 14 1 1 0 0 1 0 0 0 0 1 1 0 170498 
76 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
77 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
78 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
79 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
80 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
81 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
84 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
85 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
86 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
87 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
88 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
89 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
90 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
91 14 1 1 0 0 1 0 0 0 0 1 1 0 145340 
94 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
95 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
96 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
97 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
100 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
101 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
104 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
105 15 1 0 0 0 2 0 0 0 0 0 0 0 0 
106 15 1 0 0 0 2 0 0 0 0 0 0 0 0 
107 15 1 0 0 0 2 0 0 0 0 3 0 0 0 
108 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
109 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
110 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
111 16 1 1 0 0 1 0 0 0 0 1 1 0 634421 
114 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
115 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
116 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
117 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
118 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
119 17 1 1 0 0 1 0 0 0 0 1 1 0 159239 
122 18 1 0 0 0 2 0 0 0 0 1 0 0 0 
123 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
126 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
127 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
128 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
129 18 1 0 0 0 1 0 0 0 0 1 0 1 165533 
132 19 1 0 0 0 1 0 0 0 0 0 0 0 0 
133 19 1 0 0 0 1 0 0 0 0 1 0 0 0 
134 19 1 0 0 0 1 0 0 0 0 0 0 0 0 
137 20 1 0 0 0 2 0 0 0 0 2 0 0 0 
138 20 1 0 0 0 2 0 0 0 0 0 0 0 0 
139 20 1 0 0 0 2 0 0 0 0 2 0 0 0 
140 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
141 21 1 0 0 0 2 0 0 0 0 0 0 0 0 
142 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
143 22 1 0 0 0 2 0 0 0 0 0 0 0 0 
146 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
147 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
168 22 1 0 0 0 2 0 0 0 0 2 0 0 0 
169 22 1 0 0 0 2 0 0 0 0 0 0 0 0 
170 22 1 0 0 0 2 0 0 0 0 2 0 0 0 
171 23 1 0 0 0 2 0 0 0 0 0 0 0 0 
172 23 1 0 0 0 2 0 0 0 0 2 0 0 0 
173 22 1 0 0 0 2 0 0 0 0 0 0 0 0 
174 22 1 0 0 0 2 0 0 0 0 0 0 0 0 
175 22 1 0 0 0 2 0 0 0 0 2 0 0 0 
176 24 1 0 0 0 2 0 0 0 0 2 0 0 0 
177 24 1 0 0 0 2 0 0 0 0 0 0 0 0 
178 24 1 0 0 0 2 0 0 0 0 2 0 0 0 
179 22 1 0 0 0 2 0 0 0 0 0 0 0 0 
180 22 1 0 0 0 2 0 0 0 0 0 0 0 0 
181 22 1 0 0 0 2 0 0 0 0 2 0 0 0 
182 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
183 25 1 0 0 0 2 0 0 0 0 0 0 0 0 
184 25 1 1 0 0 2 0 0 0 0 2 1 1 172633 
187 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
188 25 1 0 0 0 2 0 0 0 0 0 0 0 0 
189 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
190 26 1 0 0 0 2 0 0 0 0 2 0 0 0 
191 26 1 0 0 0 2 0 0 0 0 2 0 0 0 
192 26 1 0 0 0 2 0 0 0 0 0 0 0 0 
193 26 1 0 0 0 2 0 0 0 0 2 0 0 0 
194 27 1 0 0 0 2 0 0 0 0 2 0 0 0 
195 27 1 0 0 0 2 0 0 0 0 0 0 0 0 
196 27 1 0 0 0 2 0 0 0 0 2 0 0 0 
197 28 1 0 0 0 2 0 0 0 0 2 0 0 0 
198 28 1 0 0 0 2 0 0 0 0 0 0 0 0 
199 28 1 0 0 0 2 0 0 0 0 2 0 0 0 
200 29 1 0 0 0 2 0 0 0 0 0 0 0 0 
203 29 1 0 0 0 2 0 0 0 0 0 0 0 0 
204 29 1 0 0 0 2 0 0 0 0 2 0 0 0 
205 30 1 0 0 0 2 0 0 0 0 0 0 0 0 
208 30 1 0 0 0 3 0 0 0 0 3 0 0 0 
209 30 1 0 0 0 3 0 0 0 0 0 0 0 0 
210 30 1 0 0 0 3 0 0 0 0 3 0 0 0 
211 31 1 0 0 0 3 0 0 0 0 3 0 0 0 
212 31 1 0 0 0 3 0 0 0 0 3 0 0 0 
213 31 1 0 0 0 3 0 0 0 0 0 0 0 0 
214 31 1 0 0 0 3 0 0 0 0 0 0 0 0 
215 31 1 0 0 0 3 0 0 0 0 3 0 0 0 
216 32 1 0 0 0 3 0 0 0 0 3 0 0 0 
217 32 1 0 0 0 3 0 0 0 0 0 0 0 0 
218 32 1 0 0 0 3 0 0 0 0 3 0 0 0 
219 30 1 0 0 0 3 0 0 0 0 0 0 0 0 
222 30 1 0 0 0 2 0 0 0 0 0 0 0 0 
223 30 1 0 0 0 2 0 0 0 0 2 0 0 0 
224 33 1 0 0 0 2 0 0 0 0 0 0 0 0 
227 33 1 0 0 0 3 0 0 0 0 3 0 0 0 
228 33 1 0 0 0 3 0 0 0 0 3 0 0 0 
229 33 1 0 0 0 3 0 0 0 0 3 0 0 0 
230 33 1 0 0 0 3 0 0 0 0 0 0 0 0 
231 33 1 0 0 0 3 0 0 0 0 3 0 0 0 
232 34 1 0 0 0 3 0 0 0 0 3 0 0 0 
233 34 1 0 0 0 3 0 0 0 0 3 0 0 0 
234 34 1 0 0 0 3 0 0 0 0 3 0 0 0 
235 34 1 0 0 0 3 0 0 0 0 0 0 0 0 
236 34 1 1 0 0 3 0 0 0 0 3 1 2 302953 
239 35 1 0 0 0 1 0 0 0 0 1 0 0 0 
240 35 1 0 0 0 1 0 0 0 0 0 0 0 0 
241 35 1 0 0 0 1 0 0 0 0 1 0 0 0 
242 35 1 0 0 0 1 0 0 0 0 0 0 0 0 
245 36 1 0 0 0 2 0 0 0 0 2 0 0 0 
246 36 1 0 0 0 2 0 0 0 0 0 0 0 0 
247 36 1 0 0 0 2 0 0 0 0 2 0 0 0 
248 37 1 0 0 0 2 0 0 0 0 0 0 0 0 
251 37 1 0 0 0 1 0 0 0 0 1 0 0 0 
252 37 1 0 0 0 1 0 0 0 0 0 0 0 0 
253 37 1 0 0 0 1 0 0 0 0 1 0 0 0 
254 37 1 0 0 0 1 0 0 0 0 0 0 0 0 
257 39 1 0 0 0 1 0 0 0 0 1 0 0 0 
258 39 1 0 0 0 1 0 0 0 0 0 0 0 0 
259 39 1 0 0 0 1 0 0 0 0 0 0 0 0 
260 39 1 0 0 0 1 0 0 0 0 1 0 0 0 
261 39 1 0 0 0 1 0 0 0 0 0 0 0 0 
264 40 1 0 0 0 1 0 0 0 0 0 0 0 0 
265 40 1 0 0 0 1 0 0 0 0 1 0 0 0 
266 40 1 0 0 0 1 0 0 0 0 0 0 0 0 
cfn=printf
calls=1 266 40
266 40 1 0 0 0 16 0 0 0 0 0 0 0 0 
267 40 1 0 0 0 16 0 0 0 0 0 0 0 0 
268 40 1 0 0 0 16 0 0 0 0 0 0 0 0 
269 40 1 0 0 0 16 0 0 0 0 17 0 0 0 
270 41 1 0 0 0 16 0 0 0 0 0 0 0 0 
273 42 1 0 0 0 17 0 0 0 0 0 0 0 0 
fl=runtime/Intrinsic/klee_div_zero_check.c
fn=klee_div_zero_check
292 45 1 0 0 0 1 10 0 0 0 0 0 0 0 
293 45 1 0 0 0 1 9 0 0 0 0 0 0 0 
294 45 1 0 0 0 1 8 0 0 0 0 0 0 0 
295 45 1 0 0 0 1 7 0 0 0 0 0 0 0 
296 45 1 0 0 0 1 6 0 0 0 0 0 0 0 
297 45 1 0 0 0 1 5 0 0 0 1 0 0 0 
298 46 1 0 0 0 1 4 0 0 0 0 0 0 0 
299 46 1 0 0 0 1 2 0 0 0 1 0 0 0 
302 46 1 0 0 0 1 1 0 0 0 0 0 0 0 
305 46 0 0 0 0 0 1 0 0 1 0 0 0 0 
308 47 1 0 0 0 1 0 0 0 0 0 0 0 0 
309 47 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 8:
[7] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var dividend int 0
var divisor int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun dividend () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun divisor () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  divisor (_ bv3 32) ) (concat  (select  divisor (_ bv2 32) ) (concat  (select  divisor (_ bv1 32) ) (select  divisor (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  (_ bv0 32) ?B1 ) (bule  ?B1 (_ bv100 32) ) ) (=  false (bvslt  (_ bv0 32) (concat  (select  dividend (_ bv3 32) ) (concat  (select  dividend (_ bv2 32) ) (concat  (select  dividend (_ bv1 32) ) (select  dividend (_ bv0 32) ) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array dividend[4] : w32 -> w8 = symbolic
array divisor[4] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 divisor))
         (Sle w32 N0 100)
         (Eq false
             (Slt 0
                 (ReadLSB w32 0 dividend)))]
        false)


Test case: test000002
[Parsed from .ktest]
var dividend int 10
var divisor int 3
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun dividend () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun divisor () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  divisor (_ bv3 32) ) (concat  (select  divisor (_ bv2 32) ) (concat  (select  divisor (_ bv1 32) ) (select  divisor (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  (_ bv0 32) ?B1 ) (bule  ?B1 (_ bv100 32) ) ) (and  (bvsge  (_ bv0 32) (concat  (select  dividend (_ bv3 32) ) (concat  (select  dividend (_ bv2 32) ) (concat  (select  dividend (_ bv1 32) ) (select  dividend (_ bv0 32) ) ) ) ) ) (bvslt  (concat  (select  dividend (_ bv3 32) ) (concat  (select  dividend (_ bv2 32) ) (concat  (select  dividend (_ bv1 32) ) (select  dividend (_ bv0 32) ) ) ) ) (_ bv1000 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array dividend[4] : w32 -> w8 = symbolic
array divisor[4] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 divisor))
         (Sle w32 N0 100)
         (Sge 0
             (ReadLSB w32 0 dividend))
         (Slt (ReadLSB w32 0 dividend) 1000)]
        false)


--- Program 94 ---
[run.istats content]
version: 1
creator: klee
pid: 9058
cmd: 63.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=63.c
fn=main
13 5 1 0 0 0 1 33 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 32 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 31 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 30 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 29 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 28 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 26 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 24 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 22 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 21 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 19 0 0 0 0 0 0 0 
24 8 1 0 0 0 1 18 0 0 0 2 0 0 0 
25 9 1 0 0 0 1 16 0 0 0 1 0 0 0 
26 9 1 0 0 0 1 15 0 0 0 1 0 0 0 
27 9 1 0 0 0 1 14 0 0 0 0 0 0 0 
28 9 1 1 0 0 1 13 0 0 0 1 2 0 29643 
31 9 1 0 0 0 1 15 0 0 0 1 0 0 0 
32 9 1 0 0 0 1 14 0 0 0 0 0 0 0 
33 9 1 0 0 0 1 13 0 0 0 1 0 0 0 
34 10 1 0 0 0 1 11 0 0 0 1 0 0 0 
35 10 1 0 0 0 1 10 0 0 0 1 0 0 0 
36 10 1 0 0 0 1 9 0 0 0 0 0 0 0 
37 10 1 1 0 0 1 8 0 0 0 1 1 0 11164 
40 10 1 0 0 0 1 15 0 0 0 1 0 0 0 
41 10 1 0 0 0 1 14 0 0 0 0 0 0 0 
42 10 1 0 0 0 1 13 0 0 0 1 0 0 0 
43 11 1 0 0 0 1 11 0 0 0 1 0 0 0 
44 11 1 0 0 0 1 10 0 0 0 1 0 0 0 
45 11 1 0 0 0 1 9 0 0 0 0 0 0 0 
46 11 1 1 0 0 1 8 0 0 0 1 1 0 13663 
49 11 1 0 0 0 1 15 0 0 0 1 0 0 0 
50 11 1 0 0 0 1 14 0 0 0 0 0 0 0 
51 11 1 0 0 0 1 13 0 0 0 1 0 0 0 
52 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
53 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
54 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
55 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
58 14 0 0 0 0 0 0 0 0 0 0 0 0 0 
59 14 0 0 0 0 0 0 0 0 0 0 0 0 0 
62 15 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 63:
[62] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv4294967295 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 4294967295
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv20 32) ) ) (=  false (bvslt  (_ bv4294967295 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 20)
         (Eq false
             (Slt 4294967295 N0))]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 2
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv20 32) ) ) (and  (=  false (bvslt  (_ bv4294967295 32) ?B1 ) ) (=  false (bvsle  (_ bv4294967295 32) ?B1 ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 20)
         (Eq false
             (Slt 4294967295 N0)
         (Eq false (Sle 4294967295 N0))]
        false)


--- Program 95 ---
[run.istats content]
version: 1
creator: klee
pid: 6820
cmd: 32.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=32.c
fn=main
14 5 1 0 0 0 1 33 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 32 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 31 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 30 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 29 0 0 0 1 0 0 0 
19 6 1 0 0 0 1 28 0 0 0 0 0 0 0 
20 7 1 0 0 0 1 26 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 25 0 0 0 2 0 0 0 
22 8 1 0 0 0 1 23 0 0 0 1 0 0 0 
23 8 1 0 0 0 1 22 0 0 0 0 0 0 0 
24 8 1 1 0 0 1 21 0 0 0 1 2 0 27867 
27 8 1 0 0 0 1 23 0 0 0 1 0 0 0 
28 8 1 0 0 0 1 22 0 0 0 0 0 0 0 
29 5 1 0 0 0 1 21 0 0 0 0 0 0 0 
32 0 1 0 0 0 2 20 0 0 0 0 0 0 0 
33 8 1 0 0 0 2 19 0 0 0 0 0 0 0 
34 8 1 0 0 0 2 18 0 0 0 0 0 0 0 
35 8 1 0 0 0 2 17 0 0 0 3 0 0 0 
36 9 1 0 0 0 1 15 0 0 0 1 0 0 0 
37 9 1 0 0 0 1 14 0 0 0 0 0 0 0 
38 9 1 0 0 0 1 13 0 0 0 1 0 0 0 
39 10 1 0 0 0 1 11 0 0 0 0 0 0 0 
40 10 1 0 0 0 1 9 0 0 0 1 0 0 0 
41 11 1 0 0 0 1 8 0 0 0 1 0 0 0 
42 11 1 0 0 0 1 7 0 0 0 1 0 0 0 
43 11 1 0 0 0 1 6 0 0 0 0 0 0 0 
44 11 1 0 0 0 1 5 0 0 0 0 0 0 0 
45 11 1 0 0 0 1 4 0 0 0 1 0 0 0 
46 12 1 0 0 0 1 3 0 0 0 1 0 0 0 
47 12 1 0 0 0 1 2 0 0 0 0 0 0 0 
48 12 1 0 0 0 1 1 0 0 0 1 0 0 0 
51 12 1 0 0 0 21 0 0 0 0 21 0 0 0 
52 12 1 0 0 0 21 0 0 0 0 0 0 0 0 
53 12 1 20 0 0 21 0 0 0 0 21 20 1 292199 
56 13 1 0 0 0 20 19 0 0 0 20 0 0 0 
57 13 1 0 0 0 20 18 0 0 0 20 0 0 0 
58 13 1 0 0 0 20 17 0 0 0 0 0 0 0 
59 13 1 0 0 0 20 16 0 0 0 20 0 0 0 
60 15 1 0 0 0 20 15 0 0 0 20 0 0 0 
61 15 1 0 0 0 20 14 0 0 0 0 0 0 0 
62 15 1 0 0 0 20 13 0 0 0 20 0 0 0 
63 5 1 0 0 0 20 12 0 0 0 0 0 0 0 
66 18 1 0 0 0 21 11 0 0 0 21 0 0 0 
67 18 1 0 0 0 21 10 0 0 0 0 0 0 0 
68 18 1 0 0 0 21 9 0 0 0 21 0 0 0 
69 18 1 0 0 0 21 8 0 0 0 0 0 0 0 
70 18 1 0 0 0 21 7 0 0 0 0 0 0 0 
71 18 1 0 0 0 21 6 0 0 0 0 0 0 0 
72 18 1 0 0 0 21 5 0 0 0 21 0 0 0 
73 18 1 0 0 0 21 4 0 0 0 0 0 0 0 
74 18 1 0 0 0 21 3 0 0 0 21 0 0 0 
75 20 1 0 0 0 21 2 0 0 0 21 0 0 0 
76 20 1 0 0 0 21 1 0 0 0 0 0 0 0 
79 12 1 0 0 0 21 0 0 0 0 21 0 0 0 
80 12 1 0 0 0 21 0 0 0 0 0 0 0 0 
81 12 1 0 0 0 21 0 0 0 0 21 0 0 0 
82 12 1 0 0 0 21 0 0 0 0 0 0 0 0 
85 21 1 0 0 0 20 0 0 0 0 20 0 0 0 
86 21 1 0 0 0 20 0 0 0 0 0 0 0 0 
87 21 1 0 0 0 20 0 0 0 0 20 0 0 0 
88 21 1 0 0 0 20 0 0 0 0 0 0 0 0 
91 24 1 0 0 0 21 0 0 0 0 21 0 0 0 
92 24 1 0 0 0 21 0 0 0 0 21 0 0 0 
93 24 1 0 0 0 21 0 0 0 0 0 0 0 0 
94 24 1 0 0 0 21 0 0 0 0 21 0 0 0 
97 24 1 0 0 0 21 14 0 0 0 21 0 0 0 
98 24 1 0 0 0 21 13 0 0 0 0 0 0 0 
99 24 1 0 0 0 21 12 0 0 0 0 0 0 0 
100 24 1 0 0 0 21 11 0 0 0 0 0 0 0 
101 24 1 0 0 0 21 10 0 0 0 0 0 0 0 
102 24 1 0 0 0 21 9 0 0 0 21 0 21 137450 
105 27 1 0 0 0 21 0 0 0 0 21 0 0 0 
106 27 1 0 0 0 21 0 0 0 0 0 0 0 0 
107 27 1 19 0 0 21 0 0 0 0 21 20 2 281032 
110 28 1 0 0 0 21 0 0 0 0 21 0 0 0 
111 28 1 0 0 0 21 0 0 0 0 21 0 0 0 
112 28 1 0 0 0 21 0 0 0 0 0 0 0 0 
113 28 1 0 0 0 21 0 0 0 0 0 0 0 0 
114 28 1 0 0 0 21 0 0 0 0 21 0 0 0 
115 29 1 0 0 0 21 0 0 0 0 0 0 0 0 
118 31 1 0 0 0 21 0 0 0 0 21 0 0 0 
119 31 1 0 0 0 21 0 0 0 0 0 0 0 0 
fn=run
127 33 1 0 0 0 1 0 0 0 0 0 0 0 0 
128 33 1 0 0 0 1 0 0 0 0 0 0 0 0 
129 33 1 0 0 0 1 0 0 0 0 1 0 0 0 
130 33 1 0 0 0 1 0 0 0 0 0 0 0 0 
131 33 1 0 0 0 1 0 0 0 0 1 0 0 0 
132 34 1 0 0 0 1 0 0 0 0 0 0 0 0 
133 34 1 0 0 0 1 0 0 0 0 1 0 0 0 
134 34 1 0 0 0 1 0 0 0 0 0 0 0 0 
135 34 1 0 0 0 1 0 0 0 0 0 0 0 0 
136 34 1 0 0 0 1 0 0 0 0 1 1 0 11673 
139 35 1 0 0 0 20 0 0 0 0 20 0 0 0 
140 35 1 0 0 0 20 0 0 0 0 20 0 0 0 
141 36 1 0 0 0 20 0 0 0 0 0 0 0 0 
144 37 1 0 0 0 21 0 0 0 0 21 0 0 0 
145 37 1 0 0 0 21 0 0 0 0 21 0 0 0 
146 37 1 0 0 0 21 0 0 0 0 0 0 0 0 
149 38 1 0 0 0 21 0 0 0 0 21 0 0 0 


This is the critical path for program 32:
[31] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv20 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 20)
         (Eq false (Slt 0 N0))]
        false)


--- Program 96 ---
[run.istats content]
version: 1
creator: klee
pid: 9989
cmd: 70.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=70.c
fn=main
13 5 1 0 0 0 1 43 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 42 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 41 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 40 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 39 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 38 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 36 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 34 0 0 0 1 0 0 0 
21 7 1 0 0 0 1 33 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 32 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 30 0 0 0 1 0 0 0 
24 8 1 0 0 0 1 29 0 0 0 0 0 0 0 
25 8 1 1 0 0 1 28 0 0 0 1 2 0 24519 
28 8 1 0 0 0 1 30 0 0 0 1 0 0 0 
29 8 1 0 0 0 1 29 0 0 0 0 0 0 0 
30 5 1 0 0 0 1 28 0 0 0 0 0 0 0 
33 0 1 0 0 0 2 27 0 0 0 0 0 0 0 
34 8 1 0 0 0 2 26 0 0 0 0 0 0 0 
35 8 1 0 0 0 2 25 0 0 0 0 0 0 0 
36 8 1 0 0 0 2 24 0 0 0 3 0 0 0 
37 9 1 0 0 0 1 22 0 0 0 0 0 0 0 
38 9 1 0 0 0 1 20 0 0 0 1 0 0 0 
39 9 1 0 0 0 1 19 0 0 0 1 0 0 0 
40 9 1 0 0 0 1 18 0 0 0 0 0 0 0 
43 9 1 0 0 0 1 17 0 0 0 0 0 0 0 
44 9 1 0 0 0 1 15 0 0 0 1 0 0 0 
45 10 1 0 0 0 1 14 0 0 0 1 0 0 0 
46 10 1 0 0 0 1 13 0 0 0 1 0 0 0 
47 10 1 0 0 0 1 12 0 0 0 0 0 0 0 
48 10 1 0 0 0 1 11 0 0 0 0 0 0 0 
51 10 1 0 0 0 1 10 0 0 0 1 0 0 0 
52 10 1 0 0 0 1 9 0 0 0 1 0 0 0 
53 10 1 0 0 0 1 8 0 0 0 0 0 0 0 
56 10 1 0 0 0 1 7 0 0 0 1 0 0 0 
57 10 1 0 0 0 1 6 0 0 0 0 0 0 0 
58 10 1 0 0 0 1 5 0 0 0 1 0 0 0 
61 11 0 0 0 0 0 4 0 0 4 0 0 0 0 
62 11 0 0 0 0 0 3 0 0 3 0 0 0 0 
63 11 0 0 0 0 0 2 0 0 2 0 0 0 0 
66 12 1 0 0 0 1 11 0 0 0 1 0 0 0 
67 12 1 0 0 0 1 10 0 0 0 1 0 0 0 
68 12 1 0 0 0 1 9 0 0 0 0 0 0 0 
69 12 1 0 0 0 1 8 0 0 0 1 0 1 8517 
72 13 1 0 0 0 1 18 0 0 0 1 0 0 0 
73 13 1 0 0 0 1 17 0 0 0 0 0 0 0 
74 13 1 0 0 0 1 16 0 0 0 0 0 0 0 
75 13 1 0 0 0 1 15 0 0 0 1 0 0 0 
76 14 1 0 0 0 1 14 0 0 0 1 0 0 0 
77 14 1 0 0 0 1 13 0 0 0 0 0 0 0 
78 14 1 0 0 0 1 12 0 0 0 0 0 0 0 
79 14 1 0 0 0 1 11 0 0 0 0 0 0 0 
80 14 1 0 0 0 1 10 0 0 0 1 0 0 0 
81 14 1 0 0 0 1 9 0 0 0 0 0 0 0 
84 15 1 0 0 0 1 8 0 0 0 1 0 0 0 
85 15 1 0 0 0 1 7 0 0 0 0 0 0 0 
86 15 1 0 0 0 1 6 0 0 0 1 0 0 0 
87 16 1 0 0 0 1 5 0 0 0 1 0 0 0 
88 16 1 0 0 0 1 4 0 0 0 0 0 0 0 
89 16 1 0 0 0 1 3 0 0 0 0 0 0 0 
90 16 1 0 0 0 1 2 0 0 0 1 1 0 9210 
93 17 1 0 0 0 1 5 0 0 0 1 0 0 0 
94 17 1 0 0 0 1 4 0 0 0 0 0 0 0 
95 17 1 0 0 0 1 3 0 0 0 0 0 0 0 
96 17 1 0 0 0 1 2 0 0 0 1 0 0 0 
99 18 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 70:
[69] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (=  false (bvsle  (_ bv1 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Eq false (Sle 1 N0))]
        false)


--- Program 97 ---
[run.istats content]
version: 1
creator: klee
pid: 8144
cmd: 59.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=59.c
fn=main
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
21 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
25 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
26 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 6 1 0 0 0 1 0 0 0 0 2 0 0 0 
28 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
29 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
30 8 1 0 0 0 1 0 0 0 0 1 0 0 0 
31 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 8 1 1 0 0 1 0 0 0 0 1 2 0 35688 
35 8 1 0 0 0 1 0 0 0 0 1 0 0 0 
36 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
37 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
40 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
41 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
42 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
43 8 1 0 0 0 2 0 0 0 0 3 0 0 0 
44 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
45 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
46 9 1 1 0 0 1 0 0 0 0 1 1 0 9441 
49 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
50 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
51 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
54 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
55 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
56 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
57 9 1 0 0 0 2 0 0 0 0 3 0 0 0 
58 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
59 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
60 10 1 1 0 0 1 0 0 0 0 1 1 0 12521 
63 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
64 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
65 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
68 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
69 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
70 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
71 10 1 0 0 0 2 0 0 0 0 3 0 0 0 
72 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
73 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
74 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
75 11 1 1 0 0 1 0 0 0 0 1 1 0 13413 
78 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
79 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
80 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
81 11 1 1 0 0 1 0 0 0 0 1 1 0 15282 
84 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
85 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
86 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
87 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
88 13 1 0 0 0 2 0 0 0 0 2 0 0 0 
89 13 1 0 0 0 2 0 0 0 0 2 0 0 0 
90 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
91 13 1 1 0 0 2 0 0 0 0 2 1 0 25173 
94 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
95 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
96 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
97 14 1 1 0 0 1 0 0 0 0 1 1 0 10756 
100 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
101 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
102 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
103 14 1 1 0 0 1 0 0 0 0 1 1 0 11791 
106 15 1 0 0 0 5 0 0 0 0 5 0 0 0 
107 15 1 0 0 0 5 0 0 0 0 5 0 0 0 
108 15 1 0 0 0 5 0 0 0 0 0 0 0 0 
109 15 1 0 0 0 5 0 0 0 0 5 0 0 0 
110 15 1 0 0 0 5 0 0 0 0 0 0 0 0 
113 16 1 0 0 0 5 0 0 0 0 5 0 0 0 
114 16 1 0 0 0 5 0 0 0 0 5 0 0 0 
115 16 1 0 0 0 5 0 0 0 0 0 0 0 0 
116 16 1 1 0 0 5 0 0 0 0 5 1 0 1904795 
119 17 1 0 0 0 5 0 0 0 0 5 0 0 0 
120 17 1 0 0 0 5 0 0 0 0 0 0 0 0 
121 17 1 0 0 0 5 0 0 0 0 5 0 0 0 
122 17 1 0 0 0 5 0 0 0 0 0 0 0 0 
125 18 1 0 0 0 5 0 0 0 0 5 0 0 0 
126 18 1 0 0 0 5 0 0 0 0 5 0 0 0 
127 18 1 0 0 0 5 0 0 0 0 0 0 0 0 
128 18 1 1 0 0 5 0 0 0 0 5 1 0 7562202 
131 19 1 0 0 0 5 0 0 0 0 5 0 0 0 
132 19 1 0 0 0 5 0 0 0 0 0 0 0 0 
133 19 1 0 0 0 5 0 0 0 0 5 0 2 2237490 
136 19 1 0 0 0 5 0 0 0 0 0 0 0 0 
139 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
140 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
141 21 1 0 0 0 5 0 0 0 0 0 0 0 0 
142 21 1 1 0 0 5 0 0 0 0 5 1 0 3700127 
145 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
146 21 1 0 0 0 5 0 0 0 0 0 0 0 0 
147 21 1 0 0 0 5 0 0 0 0 5 0 0 0 
148 21 1 0 0 0 5 0 0 0 0 0 0 0 0 
151 23 1 0 0 0 20 0 0 0 0 20 0 0 0 
152 23 1 0 0 0 20 0 0 0 0 20 0 0 0 
153 23 1 0 0 0 20 0 0 0 0 0 0 0 0 
154 23 1 1 0 0 20 0 0 0 0 20 1 0 4952872 
157 24 1 0 0 0 20 0 0 0 0 20 0 0 0 
158 24 1 0 0 0 20 0 0 0 0 20 0 0 0 
159 24 1 0 0 0 20 0 0 0 0 0 0 0 0 
160 24 1 1 0 0 20 0 0 0 0 20 1 0 2611339 
163 25 1 0 0 0 20 0 0 0 0 20 0 0 0 
164 25 1 0 0 0 20 0 0 0 0 0 0 0 0 
165 25 1 1 0 0 20 0 0 0 0 20 1 0 2989640 
168 26 1 0 0 0 20 0 0 0 0 20 0 0 0 
169 26 1 0 0 0 20 0 0 0 0 20 0 0 0 
170 26 1 0 0 0 20 0 0 0 0 0 0 0 0 
171 26 1 1 0 0 20 0 0 0 0 20 1 0 2500289 
174 23 1 0 0 0 20 0 0 0 0 0 0 0 0 
177 28 1 0 0 0 5 0 0 0 0 5 0 0 0 
178 28 1 0 0 0 5 0 0 0 0 0 0 0 0 
179 28 1 0 0 0 5 0 0 0 0 5 0 0 0 
180 28 1 0 0 0 5 0 0 0 0 0 0 0 0 
183 29 1 0 0 0 15 0 0 0 0 0 0 0 0 
186 29 1 0 0 0 5 0 0 0 0 5 0 0 0 
187 29 1 0 0 0 5 0 0 0 0 5 0 0 0 
188 29 1 1 0 0 5 0 0 0 0 5 1 0 5361719 
191 30 1 0 0 0 5 0 0 0 0 5 0 0 0 
192 30 1 0 0 0 5 0 0 0 0 0 0 0 0 
193 30 1 1 0 0 5 0 0 0 0 5 1 0 11723 
196 30 1 0 0 0 5 0 0 0 0 5 0 0 0 
197 30 1 0 0 0 5 0 0 0 0 0 0 0 0 
198 30 1 1 0 0 5 0 0 0 0 5 1 0 4233 
201 31 1 0 0 0 20 0 0 0 0 20 0 0 0 
202 31 1 0 0 0 20 0 0 0 0 0 0 0 0 
203 31 1 1 0 0 20 0 0 0 0 20 1 0 3301539 
206 32 1 0 0 0 20 0 0 0 0 20 0 0 0 
207 32 1 0 0 0 20 0 0 0 0 20 0 0 0 
208 32 1 0 0 0 20 0 0 0 0 0 0 0 0 
209 32 1 1 0 0 20 0 0 0 0 0 1 0 2514487 
212 33 1 0 0 0 15 0 0 0 0 15 0 0 0 
213 33 1 0 0 0 15 0 0 0 0 0 0 0 0 
fn=update
221 36 1 0 0 0 5 0 0 0 0 5 0 0 0 
222 36 1 0 0 0 5 0 0 0 0 0 0 0 0 
223 36 1 0 0 0 5 0 0 0 0 0 0 0 0 
224 36 1 0 0 0 5 0 0 0 0 5 0 0 0 
225 36 1 0 0 0 5 0 0 0 0 0 0 0 0 
228 37 1 0 0 0 5 0 0 0 0 0 0 0 0 
229 37 1 0 0 0 5 0 0 0 0 5 0 0 0 
230 37 1 0 0 0 5 0 0 0 0 0 0 0 0 
233 38 1 0 0 0 20 0 0 0 0 20 0 0 0 
234 38 1 0 0 0 20 0 0 0 0 20 0 0 0 
235 38 1 0 0 0 20 0 0 0 0 0 0 0 0 
236 38 1 1 0 0 20 0 0 0 0 20 1 0 9305005 
239 39 1 0 0 0 20 0 0 0 0 0 0 0 0 
242 40 1 0 0 0 5 0 0 0 0 5 0 0 0 
243 40 1 0 0 0 5 0 0 0 0 0 0 0 0 
246 41 1 0 0 0 5 0 0 0 0 0 0 0 0 
fn=rule
254 43 1 0 0 0 20 0 0 0 0 20 0 0 0 
255 43 1 0 0 0 20 0 0 0 0 0 0 0 0 
258 42 1 0 0 0 20 0 0 0 0 20 0 0 0 
259 42 1 0 0 0 20 0 0 0 0 0 0 0 0 
262 45 1 0 0 0 5 0 0 0 0 0 0 0 0 
265 44 1 0 0 0 15 0 0 0 0 15 0 0 0 
266 44 1 0 0 0 15 0 0 0 0 0 0 0 0 
fn=ne
274 46 1 0 0 0 20 0 0 0 0 20 0 0 0 
275 46 1 0 0 0 20 0 0 0 0 0 0 0 0 
fn=final
283 48 1 0 0 0 1 0 0 0 0 1 0 0 0 
284 48 1 0 0 0 1 0 0 0 0 0 0 0 0 
285 48 1 1 0 0 1 0 0 0 0 1 1 0 11531 


This is the critical path for program 59:
[59] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var input int 0
var transitions int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  #x00000001 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 1
                  (ReadLSB w32 0 input)))]
        false)


Test case: test000002
[Parsed from .ktest]
var input int 3
var transitions int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (=  false (bvslt  #x00000001 ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Eq false (Slt 1 N0))]
        false)


Test case: test000003
[Parsed from .ktest]
var input int 128
var transitions int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvslt  #x00000001 ?B1 ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Slt 1 N0)]
        false)


Test case: test000004
[Parsed from .ktest]
var input int 0
var transitions int 2
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvsle  #x00000001 ?B2 ) ) (bvsle  ?B2 #x00000014 ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))
         (Sle N1 20)]
        false)


Test case: test000005
[Parsed from .ktest]
var input int 3
var transitions int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvsle  #x00000001 ?B2 ) ) (bvsle  ?B2 #x00000014 ) ) (=  false (bvslt  #x00000001 ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))
         (Sle N1 20)
         (Eq false (Slt 1 N0))]
        false)


Test case: test000006
[Parsed from .ktest]
var input int 0
var transitions int 20
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvsle  #x00000001 ?B2 ) ) (bvsle  ?B2 #x00000014 ) ) (=  false (bvslt  #x00000001 ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))
         (Sle N1 20)
         (Eq false (Slt 1 N0))]
        false)


Test case: test000007
[Parsed from .ktest]
var input int 2
var transitions int 20
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvsle  #x00000001 ?B2 ) ) (bvsle  ?B2 #x00000014 ) ) (bvslt  #x00000001 ?B1 ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))
         (Sle N1 20)
         (Slt 1 N0)]
        false)


Test case: test000008
[Parsed from .ktest]
var input int 3
var transitions int 20
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvsle  #x00000001 ?B2 ) ) (bvsle  ?B2 #x00000014 ) ) (=  false (bvslt  #x00000001 ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))
         (Sle N1 20)
         (Eq false (Slt 1 N0))]
        false)


Test case: test000010
[Parsed from .ktest]
var input int -1
var transitions int 20
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvsle  #x00000001 ?B2 ) ) (bvsle  ?B2 #x00000014 ) ) (bvslt  #x00000001 ?B1 ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))
         (Sle N1 20)
         (Slt 1 N0)]
        false)


Test case: test000011
[Parsed from .ktest]
var input int 0
var transitions int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (and  (bvsle  #x00000001 ?B2 ) (=  false (bvslt  #x00000001 ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))
         (Eq false (Slt 1 N0))]
        false)


Test case: test000012
[Parsed from .ktest]
var input int 9
var transitions int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun input () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun transitions () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  input (_ bv3 32) ) (concat  (select  input (_ bv2 32) ) (concat  (select  input (_ bv1 32) ) (select  input (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  transitions (_ bv3 32) ) (concat  (select  transitions (_ bv2 32) ) (concat  (select  transitions (_ bv1 32) ) (select  transitions (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  #x00000001 ?B1 ) (bvsle  ?B1 #x00000020 ) ) (bvsle  #x00000001 ?B2 ) ) )
(check-sat)
(exit)

[.kquery content]
array input[4] : w32 -> w8 = symbolic
array transitions[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 input))
         (Sle N0 20)
         (Sle 1
             N1:(ReadLSB w32 0 transitions))]
        false)


--- Program 98 ---
[run.istats content]
version: 1
creator: klee
pid: 54676
cmd: 73.bc


positions: instr line
73:8 5
74:8 5
75:8 5
76:8 5
77:8 5
78:8 5
79:8 5
80:8 5
81:8 5
82:8 5
83:8 5
84:8 5
85:9 5
86:9 5
87:9 5
88:9 5
89:9 5
90:9 5
91:9 5
92:9 5
93:10 5
94:10 5
95:10 5
96:10 5
97:10 5
98:10 5
99:10 5
100:10 5
101:10 5
102:11 5
103:11 5
104:11 5
105:11 5
106:11 5
107:11 5
108:11 5
109:12 5
110:12 5
111:12 5
112:12 5
113:12 5
114:12 5
115:12 5
116:14 5
117:14 5
118:14 5
119:14 5
120:14 5
121:15 5
122:15 5
123:15 5
124:15 5
125:15 5
126:15 5
127:15 5
128:15 5
129:16 6
130:16 6
131:16 6
132:16 6
133:16 6
134:16 6
135:17 6
136:17 6
137:17 6
138:17 6
139:17 6
140:17 6
141:17 6
142:17 6
143:17 6
144:17 5
145:17 5
146:17 5
147:17 5
148:17 5
149:17 5
150:17 5
151:17 5
152:17 5
153:17 5
154:17 6
155:17 6
156:17 6
157:17 6
158:17 6
159:17 6
160:17 6
161:17 7
162:17 7
163:17 7
164:17 7
165:17 7
166:17 7
167:17 7
168:17 7
169:17 7
170:17 5
171:17 5
172:17 5
173:17 5
174:17 5
175:17 5
176:17 5
177:17 5
178:17 5
179:17 7
180:17 7
181:17 7
182:17 7
183:17 7
184:17 7
185:17 7
186:17 7
187:18 7
188:18 7
189:18 7
190:18 7
191:18 7
192:18 7
193:18 7
194:18 7
195:18 7
196:18 5
197:18 5
198:18 5
199:18 5
200:18 5
201:18 5
202:18 5
203:18 5
204:18 5
205:18 7
206:18 7
207:18 7
208:18 7
209:18 7
210:18 7
211:18 7
212:18 7
213:20 9
214:20 9
215:20 9
216:20 9
217:20 9
218:20 9
219:20 9
220:20 9
221:20 9
222:20 9
223:20 9
224:20 9
225:20 9
226:20 9
227:20 9
228:20 9
229:20 9
230:20 9
231:21 5
232:21 5
233:21 5
234:21 5
235:21 5
236:21 5
237:21 5
238:21 5
239:21 5
240:21 5
241:21 5
242:21 5
243:22 5
244:22 5
245:22 5
246:22 5
247:22 5
248:22 5
249:22 5
250:22 5
251:22 5
252:22 5
253:22 5
254:22 5
255:23 5
256:23 5
257:23 5
258:23 5
259:23 5
260:23 5
261:23 5
262:23 5
263:23 5
264:23 5
265:23 5
266:23 5
267:25 5
268:25 5
269:25 5
270:25 5
271:25 5
272:25 5
273:25 5
274:25 5
275:25 5
276:25 5
277:25 5
278:25 5
279:25 5
280:25 5
281:25 5
282:25 5
283:26 5
284:26 5
285:26 5
286:26 5
287:26 5
288:26 5
289:26 5
290:26 5
291:26 5
292:26 5
293:26 5
294:27 5
295:27 5
296:27 5
297:27 5
298:27 5
299:27 5
300:27 5
301:27 5
302:27 5
303:27 5
304:27 5
305:28 5
306:28 5
307:28 5
308:28 5
309:28 5
310:28 5
311:28 5
312:28 5
313:28 5
314:28 5
315:28 5
316:28 5
kquery: query 0:  [pos: 10 steps: S1]  (S1 >= 1) && (S1 <= 10)
smt2: (set-logic QF_AUFBV )
(declare-fun S1 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv1 32) (concat  (select  S1 (_ bv3 32) ) (concat  (select  S1 (_ bv2 32) ) (concat  (select  S1 (_ bv1 32) ) (select  S1 (_ bv0 32) ) ) ) ) ) ) )
(assert (=  false (bvsle  (concat  (select  S1 (_ bv3 32) ) (concat  (select  S1 (_ bv2 32) ) (concat  (select  S1 (_ bv1 32) ) (select  S1 (_ bv0 32) ) ) ) ) (_ bv1 32) ) ) ) )
(assert (bvsle  (concat  (select  S1 (_ bv3 32) ) (concat  (select  S1 (_ bv2 32) ) (concat  (select  S1 (_ bv1 32) ) (select  S1 (_ bv0 32) ) ) ) ) (_ bv10 32) ) ) )
(check-sat)
(exit)

[run.istats content]
version: 1
creator: klee
pid: 54676
cmd: 73.bc


positions: instr line
73:8 5
74:8 5
75:8 5
76:8 5
77:8 5
78:8 5
79:8 5
80:8 5
81:8 5
82:8 5
83:8 5
84:8 5
85:9 5
86:9 5
87:9 5
88:9 5
89:9 5
90:9 5
91:9 5
92:9 5
93:10 5
94:10 5
95:10 5
96:10 5
97:10 5
98:10 5
99:10 5
100:10 5
101:10 5
102:11 5
103:11 5
104:11 5
105:11 5
106:11 5
107:11 5
108:12 5
109:12 5
110:12 5
111:12 5
112:12 5
113:12 5
114:12 5
115:12 5
116:12 5
117:12 5
118:12 5
119:12 5
120:12 5
121:14 5
122:14 5
123:14 5
124:14 5
125:14 5
126:14 5
127:14 5
128:15 5
129:15 5
130:15 5
131:15 5
132:15 5
133:15 5
134:15 5
135:16 6
136:16 6
137:16 6
138:16 6
139:16 6
140:16 6
141:17 6
142:17 6
143:17 6
144:17 6
145:17 6
146:17 6
147:17 6
148:17 6
149:17 6
150:17 6
151:17 5
152:17 5
153:17 5
154:17 5
155:17 5
156:17 5
157:17 5
158:17 5
159:17 5
160:17 5
161:17 5
162:17 5
163:17 5
164:17 5
165:18 5
166:18 5
167:18 5
168:18 5
169:18 5
170:18 5
171:18 5
172:18 5
173:18 5
174:18 5
175:18 5
176:18 5
177:18 5
178:18 5
179:20 7
180:20 7
181:20 7
182:20 7
183:20 7
184:20 7
185:20 7
186:20 7
187:20 7
188:20 7
189:20 7
190:20 7
191:20 7
192:20 7
193:21 5
194:21 5
195:21 5
196:21 5
197:21 5
198:21 5
199:21 5
200:21 5
201:21 5
202:21 5
203:21 5
204:21 5
205:21 5
206:22 5
207:22 5
208:22 5
209:22 5
210:22 5
211:22 5
212:22 5
213:22 5
214:22 5
215:22 5
216:23 5
217:23 5
218:23 5
219:23 5
220:23 5
221:23 5
222:23 5
223:23 5
224:23 5
225:23 5
226:23 5
227:23 5
228:23 5
229:25 5
230:25 5
231:25 5
232:25 5
233:25 5
234:25 5
235:25 5
236:25 5
237:25 5
238:25 5
239:25 5
240:25 5
241:25 5
242:25 5
243:26 5
244:26 5
245:26 5
246:26 5
247:26 5
248:26 5
249:26 5
250:26 5
251:26 5
252:26 5
253:26 5
254:26 5
255:26 5
256:26 5
257:26 5
258:26 5
259:26 5
260:26 5
261:27 5
262:27 5
263:27 5
264:27 5
265:27 5
266:27 5
267:27 5
c1: (concat  (select  S1 (_ bv3 32) ) (concat  (select  S1 (_ bv2 32) ) (concat  (select  S1 (_ bv1 32) ) (select  S1 (_ bv0 32) ) ) ) ) )
(assert (let ( (?B1 (bvsle  (_ bv1 32) ?B0) ) ) (and  (and  (=  false ?B1 ) (bvsle  ?B0 (_ bv10 32) ) ) (=  false (bvsle  ?B0 (_ bv1 32) ) ) ) ) ) )
(check-sat)
(exit)


This is the critical path for program 73:
[72] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var steps int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun S1 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B0 (concat  (select  S1 (_ bv3 32) ) (concat  (select  S1 (_ bv2 32) ) (concat  (select  S1 (_ bv1 32) ) (select  S1 (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv1 32) ?B0) (bvsle  ?B0 (_ bv10 32) ) ) (=  false (bvsle  ?B0 (_ bv1 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array S1[4] : w32 -> w8 = symbolic
(query [(Sle 1
               N0:(ReadLSB w32 0 S1))
         (Sle N0 10)
         (Eq false (Sle N0 1))]
        false)


Test case: test000002
[Parsed from .ktest]
var steps int 1
var step int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun S1 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B0 (concat  (select  S1 (_ bv3 32) ) (concat  (select  S1 (_ bv2 32) ) (concat  (select  S1 (_ bv1 32) ) (select  S1 (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (bvsle  (_ bv1 32) ?B0) (bvsle  ?B0 (_ bv10 32) ) ) (bvsle  ?B0 (_ bv4294967295 32) ) ) (bvsle  ?B0 (_ bv1 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array S1[4] : w32 -> w8 = symbolic
(query [(Sle 1
               N0:(ReadLSB w32 0 S1))
         (Sle N0 10)
         (Sle N0 4294967295)
         (Sle N0 1)]
        false)


--- Program 99 ---
[run.istats content]
version: 1
creator: klee
pid: 8163
cmd: 58.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=58.c
fn=main
17 5 1 0 0 0 1 34 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 33 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 32 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 31 0 0 0 0 0 0 0 
21 5 1 0 0 0 1 30 0 0 0 1 0 0 0 
22 6 1 0 0 0 1 29 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 27 0 0 0 1 0 0 0 
24 6 1 0 0 0 1 26 0 0 0 0 0 0 0 
25 6 1 0 0 0 1 24 0 0 0 0 0 0 0 
26 6 1 0 0 0 1 22 0 0 0 0 0 0 0 
27 7 1 0 0 0 1 20 0 0 0 0 0 0 0 
28 7 1 0 0 0 1 19 0 0 0 2 0 0 0 
29 8 1 0 0 0 1 17 0 0 0 1 0 0 0 
30 8 1 0 0 0 1 16 0 0 0 0 0 0 0 
31 8 1 0 0 0 1 15 0 0 0 1 0 0 0 
32 9 1 0 0 0 1 13 0 0 0 1 0 0 0 
33 9 1 0 0 0 1 12 0 0 0 0 0 0 0 
34 9 1 0 0 0 1 11 0 0 0 1 0 0 0 
35 9 1 0 0 0 1 10 0 0 0 1 0 0 0 
36 9 1 0 0 0 1 9 0 0 0 0 0 0 0 
37 9 1 0 0 0 1 8 0 0 0 1 0 0 0 
38 9 1 0 0 0 1 7 0 0 0 0 0 0 0 
39 9 1 0 0 0 1 6 0 0 0 0 0 0 0 
40 9 1 0 0 0 1 5 0 0 0 0 0 0 0 
41 9 1 0 0 0 1 4 0 0 0 1 0 0 0 
42 10 1 0 0 0 1 2 0 0 0 1 0 0 0 
43 10 1 0 0 0 1 1 0 0 0 1 0 0 0 


This is the critical path for program 58:
[57] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var flag int 0
var iterations int 21
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
query []


Test case: test000002
[Parsed from .ktest]
var flag int 1
var iterations int 1
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
query []


Test case: test000003
[Parsed from .ktest]
var flag int 1
var iterations int 20
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvuge (bvsle (bvadd w[1] #b1) #b20) ) )
(check-sat)
(exit)

[.kquery content]
query [(Sle (Add w[1] 1) 20)]


Test case: test000004
[Parsed from .ktest]
var flag int 2
var iterations int 1
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvuge (bvsle (bvadd w[1] #b1) #b0) ) )
(check-sat)
(exit)

[.kquery content]
query [(Sle (Add w[1] 1) 0)]


Test case: test000005
[Parsed from .ktest]
var flag int 2
var iterations int 20
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvuge (bvsle (bvadd w[1] #b1) #b20) ) )
(check-sat)
(exit)

[.kquery content]
query [(Sle (Add w[1] 1) 20)]


Test case: test000006
[Parsed from .ktest]
var flag int 3
var iterations int 1
[.smt2 content]
(set-logic QF_AUFBV )
(assert (= w[1] #b0) )
(check-sat)
(exit)

[.kquery content]
query [(Eq w[1] 0)]


Test case: test000007
[Parsed from .ktest]
var flag int 3
var iterations int 20
[.smt2 content]
(set-logic QF_AUFBV )
(assert (bvuge (bvsle (bvadd w[1] #b1) #b20) ) )
(check-sat)
(exit)

[.kquery content]
query [(Sle (Add w[1] 1) 20)]


--- Program 100 ---
[run.istats content]
version: 1
creator: klee
pid: 48125
cmd: 21.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=21.c
fn=main
11 5 1 0 0 0 1 37 0 0 0 0 0 0 0 
12 5 1 0 0 0 1 36 0 0 0 0 0 0 0 
13 5 1 0 0 0 1 35 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 34 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 33 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 32 0 0 0 1 0 0 0 
17 6 1 0 0 0 1 31 0 0 0 0 0 0 0 
18 6 1 0 0 0 1 29 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 27 0 0 0 0 0 0 0 
20 7 1 0 0 0 1 25 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 24 0 0 0 2 0 0 0 
22 8 1 0 0 0 1 22 0 0 0 0 0 0 0 
23 8 1 0 0 0 1 21 0 0 0 2 0 0 0 
24 9 1 0 0 0 1 19 0 0 0 1 0 0 0 
25 9 1 0 0 0 1 18 0 0 0 0 0 0 0 
26 9 1 0 0 0 1 17 0 0 0 0 0 0 0 
27 9 1 0 0 0 1 16 0 0 0 0 0 0 0 
28 9 1 0 0 0 1 15 0 0 0 1 1 1 18466 
31 10 1 0 0 0 1 14 0 0 0 0 0 0 0 
32 10 1 0 0 0 1 12 0 0 0 1 0 0 0 
33 10 1 0 0 0 1 11 0 0 0 0 0 0 0 
34 10 1 0 0 0 1 10 0 0 0 1 0 0 0 
35 11 1 0 0 0 1 9 0 0 0 0 0 0 0 
36 11 1 0 0 0 1 8 0 0 0 1 0 0 0 
37 11 1 0 0 0 1 7 0 0 0 0 0 0 0 
38 11 1 0 0 0 1 6 0 0 0 1 0 0 0 
39 12 1 0 0 0 1 5 0 0 0 0 0 0 0 
40 12 1 0 0 0 1 4 0 0 0 1 0 0 0 
41 12 1 0 0 0 1 3 0 0 0 1 0 0 0 
42 12 1 0 0 0 1 2 0 0 0 0 0 0 0 
45 12 1 0 0 0 1 1 0 0 0 1 0 0 0 
46 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
49 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
50 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
51 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
54 14 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 21:
[20] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv1000 32) ) ) (=  false (bvsle  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)
         (Eq false (Sle 0 N0))]
        false)


