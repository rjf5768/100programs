--- Program 81 ---
[run.istats content]
version: 1
creator: klee
pid: 6847
cmd: 29.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=29.c
fn=gcd
13 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
14 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 11 0 0 0 0 11 0 0 0 
17 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 11 0 0 0 0 11 0 0 0 
19 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
20 6 1 0 0 0 11 0 0 0 0 11 0 0 0 
21 6 1 0 0 0 11 0 0 0 0 0 0 0 0 
22 6 1 10 0 0 11 0 0 0 0 11 10 1 1103937 
25 6 1 0 0 0 10 0 0 0 0 10 0 0 0 
26 6 1 0 0 0 10 0 0 0 0 0 0 0 0 
29 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
30 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
31 7 1 0 0 0 10 0 0 0 0 10 0 0 0 
32 8 1 0 0 0 10 0 0 0 0 10 0 0 0 
33 8 1 0 0 0 10 0 0 0 0 10 0 0 0 
34 8 1 0 0 0 10 0 0 0 0 0 0 0 0 
35 8 1 9 0 0 10 0 0 0 0 10 9 1 1185987 
38 9 1 0 0 0 11 0 0 0 0 11 0 0 0 
39 9 1 0 0 0 11 0 0 0 0 0 0 0 0 
42 11 1 0 0 0 21 0 0 0 0 21 0 0 0 
43 11 1 0 0 0 21 0 0 0 0 0 0 0 0 
fn=main
51 14 1 0 0 0 1 55 0 0 0 0 0 0 0 
52 14 1 0 0 0 1 54 0 0 0 0 0 0 0 
53 14 1 0 0 0 1 53 0 0 0 0 0 0 0 
54 14 1 0 0 0 1 52 0 0 0 1 0 0 0 
55 15 1 0 0 0 1 51 0 0 0 0 0 0 0 
56 16 1 0 0 0 1 49 0 0 0 0 0 0 0 
57 17 1 0 0 0 1 47 0 0 0 0 0 0 0 
58 17 1 0 0 0 1 46 0 0 0 2 0 0 0 
59 18 1 0 0 0 1 44 0 0 0 1 0 0 0 
60 18 1 0 0 0 1 43 0 0 0 0 0 0 0 
61 18 1 0 0 0 1 42 0 0 0 0 0 0 0 
62 18 1 0 0 0 1 41 0 0 0 0 0 0 0 
63 18 1 0 0 0 1 40 0 0 0 1 1 0 13328 
64 19 1 0 0 0 1 38 0 0 0 1 0 0 0 
65 19 1 0 0 0 1 37 0 0 0 0 0 0 0 
66 19 1 0 0 0 1 36 0 0 0 0 0 0 0 
67 19 1 0 0 0 1 35 0 0 0 0 0 0 0 
68 19 1 0 0 0 1 34 0 0 0 1 0 0 0 
69 20 1 0 0 0 1 32 0 0 0 0 0 0 0 
70 20 1 0 0 0 1 30 0 0 0 1 0 0 0 
71 20 1 0 0 0 1 29 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_div_zero_check.c
cfn=klee_div_zero_check
calls=1 75 12
71 20 24 0 0 0 24 0 0 0 0 10 0 0 0 
72 20 1 0 0 0 10 0 0 0 0 10 0 0 0 
73 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
74 21 1 0 0 0 10 0 0 0 0 0 0 0 0 
75 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
76 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
77 21 1 0 0 0 10 0 0 0 0 0 0 0 0 
80 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
81 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
82 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
83 21 1 0 0 0 10 0 0 0 0 0 0 0 0 
86 22 1 0 0 0 21 0 0 0 0 21 0 0 0 
87 22 1 0 0 0 21 0 0 0 0 21 0 0 0 
88 22 1 0 0 0 21 0 0 0 0 0 0 0 0 
cfn=gcd
calls=21 11 5
88 22 15 0 0 0 332 0 0 0 0 132 0 0 0 
89 22 1 0 0 0 11 0 0 0 0 11 0 0 0 
90 23 1 0 0 0 11 0 0 0 0 11 0 0 0 
91 23 1 0 0 0 11 0 0 0 0 0 0 0 0 
92 23 1 10 0 0 11 0 0 0 0 11 10 1 1103937 
95 23 1 0 0 0 11 0 0 0 0 11 0 0 0 
96 23 1 0 0 0 11 0 0 0 0 0 0 0 0 
97 23 1 0 0 0 11 0 0 0 0 10 0 0 0 
100 24 0 0 0 0 0 9 0 0 9 0 0 0 0 
101 24 0 0 0 0 0 8 0 0 8 0 0 0 0 
102 24 0 0 0 0 0 7 0 0 7 0 0 0 0 
103 24 0 0 0 0 0 6 0 0 6 0 0 0 0 
104 24 0 0 0 0 0 5 0 0 5 0 0 0 0 
105 24 0 0 0 0 0 4 0 0 4 0 0 0 0 
106 24 0 0 0 0 0 3 0 0 3 0 0 0 0 
107 24 0 0 0 0 0 2 0 0 2 0 0 0 0 
108 24 0 0 0 0 0 1 0 0 1 0 0 0 0 
111 25 1 0 0 0 11 0 0 0 0 11 0 0 0 
112 25 1 0 0 0 11 0 0 0 0 11 0 0 0 
113 25 1 0 0 0 11 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_div_zero_check.c
cfn=klee_div_zero_check
calls=11 75 12
113 25 0 0 0 0 383 0 0 0 0 149 0 0 0 
114 25 0 0 0 0 131 0 0 0 0 49 0 0 0 
115 25 0 0 0 0 131 0 0 0 0 0 0 0 0 
116 25 0 0 0 0 131 0 0 0 0 49 0 0 0 
117 25 0 0 0 0 131 0 0 0 0 0 0 0 0 
120 26 1 0 0 0 21 0 0 0 0 21 0 0 0 
121 26 1 0 0 0 21 0 0 0 0 21 0 0 0 
122 26 1 0 0 0 21 0 0 0 0 21 0 0 0 
123 26 1 0 0 0 21 0 0 0 0 0 0 0 0 
126 27 1 0 0 0 21 0 0 0 0 21 0 0 0 
127 27 1 0 0 0 21 0 0 0 0 21 0 0 0 
128 27 1 0 0 0 21 0 0 0 0 0 0 0 0 
129 27 1 0 0 0 21 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_div_zero_check.c
cfn=klee_div_zero_check
calls=21 75 12
129 27 0 0 0 0 457 0 0 0 0 174 0 0 0 
130 27 0 0 0 0 155 0 0 0 0 59 0 0 0 
131 27 0 0 0 0 155 0 0 0 0 0 0 0 0 
132 27 0 0 0 0 155 0 0 0 0 59 0 0 0 
133 27 0 0 0 0 0 0 0 0 0 0 0 0 0 
136 28 1 0 0 0 11 0 0 0 0 11 0 0 0 
137 28 1 0 0 0 11 0 0 0 0 11 0 0 0 
138 28 1 0 0 0 11 0 0 0 0 0 0 0 0 
139 28 1 0 0 0 11 0 0 0 0 11 0 0 0 
140 28 1 0 0 0 11 0 0 0 0 0 0 0 0 
143 29 12 0 0 0 214 0 0 0 0 99 0 0 0 
144 29 1 0 0 0 21 0 0 0 0 21 0 0 0 
145 29 1 0 0 0 21 0 0 0 0 21 0 0 0 
146 29 1 0 0 0 21 0 0 0 0 0 0 0 0 
147 29 1 0 0 0 21 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_div_zero_check.c
cfn=klee_div_zero_check
calls=21 75 12
148 29 0 0 0 0 383 0 0 0 0 149 0 0 0 
149 29 0 0 0 0 131 0 0 0 0 49 0 0 0 
150 29 0 0 0 0 131 0 0 0 0 0 0 0 0 
151 29 0 0 0 0 131 0 0 0 0 49 0 0 0 
152 29 0 0 0 0 0 0 0 0 0 0 0 0 0 
155 30 1 0 0 0 21 0 0 0 0 21 0 0 0 
156 30 1 0 0 0 21 0 0 0 0 0 0 0 0 
fn=run_ks_test
164 32 1 0 0 0 11 0 0 0 0 11 0 0 0 
165 32 1 0 0 0 11 0 0 0 0 11 0 0 0 
166 32 1 0 0 0 11 0 0 0 0 0 0 0 0 
167 32 1 0 0 0 11 0 0 0 0 0 0 0 0 
168 32 1 10 0 0 11 0 0 0 0 11 10 1 1103937 
171 33 1 0 0 0 11 0 0 0 0 11 0 0 0 
172 33 1 0 0 0 11 0 0 0 0 0 0 0 0 
173 33 1 0 0 0 11 0 0 0 0 11 0 0 0 
174 33 1 0 0 0 11 0 0 0 0 0 0 0 0 
179 35 1 0 0 0 11 0 0 0 0 11 0 0 0 


This is the critical path for program 29:
[28] Most complex (longest) path file: test000005.smt2
    Number of constraints: 1

Test Case: test000001
[Parsed from .ktest]
var a int -1
var b int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
(query [] false)


--- Program 82 ---
[run.istats content]
version: 1
creator: klee
pid: 57011
cmd: 14.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=14.c
fn=main
14 5 1 0 0 0 1 67 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 66 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 65 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 64 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 63 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 62 0 0 0 1 0 0 0 
20 6 1 0 0 0 1 61 0 0 0 0 0 0 0 
21 6 1 0 0 0 1 59 0 0 0 0 0 0 0 
22 6 1 0 0 0 1 57 0 0 0 1 0 0 0 
23 7 1 0 0 0 1 56 0 0 0 0 0 0 0 
24 7 1 0 0 0 1 55 0 0 0 2 0 0 0 
25 8 1 0 0 0 1 53 0 0 0 1 0 0 0 
26 8 1 0 0 0 1 52 0 0 0 0 0 0 0 
27 8 1 1 0 0 1 51 0 0 0 1 2 0 26883 
30 8 1 0 0 0 1 53 0 0 0 1 0 0 0 
31 8 1 0 0 0 1 52 0 0 0 0 0 0 0 
32 5 1 0 0 0 1 51 0 0 0 0 0 0 0 
35 0 1 0 0 0 2 50 0 0 0 0 0 0 0 
36 8 1 0 0 0 2 49 0 0 0 0 0 0 0 
37 8 1 0 0 0 2 48 0 0 0 0 0 0 0 
38 8 1 0 0 0 2 47 0 0 0 3 0 0 0 
39 9 1 0 0 0 1 45 0 0 0 0 0 0 0 
40 9 1 0 0 0 1 43 0 0 0 1 0 0 0 
41 9 1 0 0 0 1 42 0 0 0 0 0 0 0 
44 9 1 0 0 0 4 41 0 0 0 4 0 0 0 
45 9 1 0 0 0 4 40 0 0 0 0 0 0 0 
46 9 1 0 0 0 4 39 0 0 0 4 0 0 0 
49 10 1 0 0 0 4 38 0 0 0 4 0 0 0 
50 10 1 0 0 0 4 37 0 0 0 0 0 0 0 
51 10 1 0 0 0 4 36 0 0 0 4 0 0 0 
52 10 1 0 0 0 4 35 0 0 0 0 0 0 0 
55 11 1 0 0 0 4 34 0 0 0 4 0 0 0 
56 11 1 0 0 0 4 33 0 0 0 0 0 0 0 
57 11 1 0 0 0 4 32 0 0 0 4 0 0 0 
58 11 1 0 0 0 4 31 0 0 0 0 0 0 0 
61 12 1 0 0 0 4 30 0 0 0 0 0 0 0 
62 12 1 0 0 0 4 28 0 0 0 4 0 0 0 
63 12 1 0 0 0 4 27 0 0 0 0 0 0 0 
66 13 1 0 0 0 5 26 0 0 0 0 0 0 0 
69 9 1 0 0 0 5 25 0 0 0 5 0 0 0 
70 9 1 0 0 0 5 24 0 0 0 0 0 0 0 
71 9 1 0 0 0 5 23 0 0 0 5 0 0 0 
72 9 1 0 0 0 5 22 0 0 0 0 0 0 0 
75 15 1 0 0 0 5 21 0 0 0 5 0 0 0 
76 15 1 0 0 0 5 20 0 0 0 0 0 0 0 
77 15 1 0 0 0 5 19 0 0 0 5 0 0 0 
78 15 1 0 0 0 5 18 0 0 0 0 0 0 0 
81 14 1 0 0 0 5 17 0 0 0 5 0 0 0 
82 14 1 0 0 0 5 16 0 0 0 0 0 0 0 
83 14 1 0 0 0 5 15 0 0 0 5 0 0 0 
84 14 1 0 0 0 5 14 0 0 0 0 0 0 0 
87 5 1 0 0 0 5 13 0 0 0 0 0 0 0 
90 16 1 0 0 0 6 12 0 0 0 6 0 0 0 
91 16 1 0 0 0 6 11 0 0 0 0 0 0 0 
92 16 1 0 0 0 6 10 0 0 0 6 0 0 0 
93 16 1 0 0 0 6 9 0 0 0 0 0 0 0 
96 17 1 0 0 0 6 8 0 0 0 6 0 0 0 
97 17 1 0 0 0 6 7 0 0 0 0 0 0 0 
98 17 1 0 0 0 6 6 0 0 0 6 0 0 0 
99 17 1 0 0 0 6 5 0 0 0 0 0 0 0 
102 5 1 0 0 0 6 4 0 0 0 0 0 0 0 
105 19 1 0 0 0 6 3 0 0 0 6 0 0 0 
106 19 1 0 0 0 6 2 0 0 0 0 0 0 0 
107 19 1 0 0 0 6 1 0 0 0 6 0 0 0 
110 20 0 0 0 0 0 0 0 0 0 0 0 0 0 
113 5 1 0 0 0 6 0 0 0 0 0 0 0 0 
116 21 1 0 0 0 8 0 0 0 0 8 0 0 0 


This is the critical path for program 14:
[13] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var a int -11
var b int 0
var c int 0
var d int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv4294967286 32) (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 4294967286
                  (ReadLSB w32 0 a)))]
        false)


Test case: test000002
[Parsed from .ktest]
var a int -10
var b int -10
var c int -10
var d int -10
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun c () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun d () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  c (_ bv3 32) ) (concat  (select  c (_ bv2 32) ) (concat  (select  c (_ bv1 32) ) (select  c (_ bv0 32) ) ) ) ) ) (?B4 (concat  (select  d (_ bv3 32) ) (concat  (select  d (_ bv2 32) ) (concat  (select  d (_ bv1 32) ) (select  d (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv4294967286 32) ?B1 ) (bvsle  (bvadd  (bvmul  (bvadd  ?B1 ?B2 ) ?B3 ) ?B4 ) (_ bv1000 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
array c[4] : w32 -> w8 = symbolic
array d[4] : w32 -> w8 = symbolic
(query [(Sle 4294967286
              N0:(ReadLSB w32 0 a))
         (Sle (Add w32 (Mul w32 (Add w32 N0 (ReadLSB w32 0 b)) (ReadLSB w32 0 c)) (ReadLSB w32 0 d))
             1000)]
        false)


Test case: test000003
[Parsed from .ktest]
var a int 0
var b int 0
var c int 10
var d int -10
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun c () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun d () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  c (_ bv3 32) ) (concat  (select  c (_ bv2 32) ) (concat  (select  c (_ bv1 32) ) (select  c (_ bv0 32) ) ) ) ) ) (?B4 (concat  (select  d (_ bv3 32) ) (concat  (select  d (_ bv2 32) ) (concat  (select  d (_ bv1 32) ) (select  d (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv4294967286 32) ?B1 ) (bvsle  (bvadd  (bvmul  (bvadd  ?B1 ?B2 ) ?B3 ) ?B4 ) (_ bv1000 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
array c[4] : w32 -> w8 = symbolic
array d[4] : w32 -> w8 = symbolic
(query [(Sle 4294967286
              N0:(ReadLSB w32 0 a))
         (Sle (Add w32 (Mul w32 (Add w32 N0 (ReadLSB w32 0 b)) (ReadLSB w32 0 c)) (ReadLSB w32 0 d))
             1000)]
        false)


Test case: test000004
[Parsed from .ktest]
var a int 10
var b int 10
var c int 0
var d int 10
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun c () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun d () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  c (_ bv3 32) ) (concat  (select  c (_ bv2 32) ) (concat  (select  c (_ bv1 32) ) (select  c (_ bv0 32) ) ) ) ) ) (?B4 (concat  (select  d (_ bv3 32) ) (concat  (select  d (_ bv2 32) ) (concat  (select  d (_ bv1 32) ) (select  d (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv4294967286 32) ?B1 ) (bvsle  (bvadd  (bvmul  (bvmul  (bvadd  ?B1 ?B2 ) ?B3 ) ?B4 ) (_ bv1000 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
array c[4] : w32 -> w8 = symbolic
array d[4] : w32 -> w8 = symbolic
(query [(Sle 4294967286
              N0:(ReadLSB w32 0 a))
         (Sle (Add w32 (Mul w32 (Mul w32 (Add w32 N0 (ReadLSB w32 0 b)) (ReadLSB w32 0 c)) (ReadLSB w32 0 d))
             1000)]
        false)


Test case: test000005
[Parsed from .ktest]
var a int 0
var b int 0
var c int 10
var d int 9
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun c () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun d () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  c (_ bv3 32) ) (concat  (select  c (_ bv2 32) ) (concat  (select  c (_ bv1 32) ) (select  c (_ bv0 32) ) ) ) ) ) (?B4 (concat  (select  d (_ bv3 32) ) (concat  (select  d (_ bv2 32) ) (concat  (select  d (_ bv1 32) ) (select  d (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv4294967286 32) ?B1 ) (bvsle  (bvadd  (bvmul  (bvmul  (bvadd  ?B1 ?B2 ) ?B3 ) ?B4 ) (_ bv1000 32) ) ) ) (=  false (bvsle  (bvadd  (bvmul  (bvmul  (badd  ?B1 ?B2 ) ?B3 ) ?B4 ) (_ bv1000 32) ) (_ bv4294967295 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
array c[4] : w32 -> w8 = symbolic
array d[4] : w32 -> w8 = symbolic
(query [(Sle 4294967286
              N0:(ReadLSB w32 0 a))
         (Sle (Add w32 (Mul w32 (Mul w32 (Add w32 N0 (ReadLSB w32 0 b)) (ReadLSB w32 0 c)) (ReadLSB w32 0 d))
             1000)]
        false)


Test case: test000006
[Parsed from .ktest]
var a int 10
var b int 10
var c int 0
var d int 10
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun c () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun d () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) (?B3 (concat  (select  c (_ bv3 32) ) (concat  (select  c (_ bv2 32) ) (concat  (select  c (_ bv1 32) ) (select  c (_ bv0 32) ) ) ) ) ) (?B4 (concat  (select  d (_ bv3 32) ) (concat  (select  d (_ bv2 32) ) (concat  (select  d (_ bv1 32) ) (select  d (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv4294967286 32) ?B1 ) (bvsle  (bvmul  (bvmul  (bvadd  ?B1 ?B2 ) ?B3 ) ?B4 ) (_ bv1000 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
array c[4] : w32 -> w8 = symbolic
array d[4] : w32 -> w8 = symbolic
(query [(Sle 4294967286
              N0:(ReadLSB w32 0 a))
         (Sle (Mul w32 (Mul w32 (Add w32 N0 (ReadLSB w32 0 b)) (ReadLSB w32 0 c)) (ReadLSB w32 0 d))
             1000)]
        false)


--- Program 83 ---
[run.istats content]
version: 1
creator: klee
pid: 8176
cmd: 61.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=61.c
fn=modexp
11 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
12 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
13 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
20 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 7 1 0 0 0 21 0 0 0 0 21 0 0 0 
24 7 1 0 0 0 21 0 0 0 0 21 0 0 0 
25 7 1 0 0 0 21 0 0 0 0 21 0 0 0 
26 7 1 0 0 0 21 0 0 0 0 0 0 0 0 
27 7 1 11 0 0 21 0 0 0 0 21 11 10 156572 
30 8 1 0 0 0 10 0 0 0 0 10 0 0 0 
31 8 1 0 0 0 10 0 0 0 0 10 0 0 0 
32 8 1 0 0 0 10 0 0 0 0 10 0 0 0 
33 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
34 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
35 9 1 0 0 0 10 0 0 0 0 0 0 0 0 
36 9 1 0 0 0 10 0 0 0 0 0 0 0 0 
37 9 1 0 0 0 10 0 0 0 0 10 0 0 0 
38 10 1 0 0 0 10 0 0 0 0 10 0 0 0 
39 10 1 0 0 0 10 0 0 0 0 10 0 0 0 
40 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
41 11 1 0 0 0 10 0 0 0 0 0 0 0 0 
42 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
43 12 1 0 0 0 10 0 0 0 0 10 0 0 0 
44 12 1 0 0 0 10 0 0 0 0 10 0 0 0 
45 7 1 0 0 0 10 0 0 0 0 0 0 0 0 
48 14 1 0 0 0 21 0 0 0 0 21 0 0 0 
49 14 1 0 0 0 21 0 0 0 0 0 0 0 0 
fn=main
57 17 1 0 0 0 1 49 0 0 0 0 0 0 0 
58 17 1 0 0 0 1 48 0 0 0 0 0 0 0 
59 17 1 0 0 0 1 47 0 0 0 0 0 0 0 
60 17 1 0 0 0 1 46 0 0 0 0 0 0 0 
61 17 1 0 0 0 1 45 0 0 0 0 0 0 0 
62 17 1 0 0 0 1 44 0 0 0 0 0 0 0 
63 17 1 0 0 0 1 43 0 0 0 0 0 0 0 
64 17 1 0 0 0 1 42 0 0 0 0 0 0 0 
65 17 1 0 0 0 1 41 0 0 0 1 0 0 0 
66 18 1 0 0 0 1 40 0 0 0 0 0 0 0 
67 18 1 0 0 0 1 38 0 0 0 0 0 0 0 
68 18 1 0 0 0 1 36 0 0 0 0 0 0 0 
69 19 1 0 0 0 1 34 0 0 0 0 0 0 0 
70 19 1 0 0 0 1 33 0 0 0 2 0 0 0 
71 20 1 0 0 0 1 31 0 0 0 1 0 0 0 
72 20 1 0 0 0 1 30 0 0 0 0 0 0 0 
73 20 1 0 0 0 1 29 0 0 0 0 0 0 0 
74 20 1 0 0 0 1 28 0 0 0 0 0 0 0 
75 20 1 0 0 0 1 27 0 0 0 1 1 1 12012 
76 21 1 0 0 0 1 25 0 0 0 1 0 0 0 
77 21 1 0 0 0 1 24 0 0 0 1 0 0 0 
78 22 1 0 0 0 1 23 0 0 0 0 0 0 0 
81 22 1 0 0 0 10 22 0 0 0 10 0 0 0 
82 22 1 0 0 0 10 21 0 0 0 10 0 0 0 
83 22 1 0 0 0 10 20 0 0 0 0 0 0 0 
84 22 1 10 0 0 10 19 0 0 0 10 10 1 134305 
87 23 1 0 0 0 10 24 0 0 0 10 0 0 0 
88 23 1 0 0 0 10 23 0 0 0 10 0 0 0 
89 23 1 0 0 0 10 22 0 0 0 0 0 0 0 
90 23 1 0 0 0 10 21 0 0 0 0 0 0 0 
91 23 1 0 0 0 10 20 0 0 0 10 0 0 0 
94 25 1 0 0 0 21 0 0 0 0 21 0 0 0 
95 25 1 0 0 0 21 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_overshift_check.c
cfn=klee_overshift_check
calls=21 95 12
95 25 21 0 0 0 315 0 0 0 0 133 0 0 0 
96 25 1 0 0 0 15 0 0 0 0 0 0 0 0 
97 25 1 0 0 0 15 0 0 0 0 15 0 0 0 
98 23 1 0 0 0 15 0 0 0 0 0 0 0 0 
101 27 0 0 0 0 0 7 0 0 7 0 0 0 0 
102 27 0 0 0 0 0 6 0 0 6 0 0 0 0 
103 27 0 0 0 0 0 5 0 0 5 0 0 0 0 
106 28 1 0 0 0 21 0 0 0 0 21 0 0 0 
107 28 1 0 0 0 21 0 0 0 0 0 0 0 0 
110 29 1 0 0 0 21 0 0 0 0 21 0 0 0 


This is the critical path for program 61:
[60] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var base int 0
var exp int 0
var mod int 2
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
(query [] false)


--- Program 84 ---
[run.istats content]
version: 1
creator: klee
pid: 9050
cmd: 65.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=65.c
fn=abs_val
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
20 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 6 1 0 0 0 4 0 0 0 0 4 0 0 0 
25 6 1 0 0 0 4 0 0 0 0 0 0 0 0 
26 6 1 3 0 0 4 0 0 0 0 4 3 1 112646 
29 7 1 0 0 0 3 0 0 0 0 3 0 0 0 
30 7 1 0 0 0 3 0 0 0 0 0 0 0 0 
31 7 1 0 0 0 3 0 0 0 0 3 0 0 0 
32 7 1 0 0 0 3 0 0 0 0 0 0 0 0 
33 7 1 0 0 0 3 0 0 0 0 0 0 0 0 
cfn=abs_val
calls=3 15 5
33 7 7 3 0 0 13 0 0 0 0 6 3 1 112646 
34 7 1 0 0 0 3 0 0 0 0 3 0 0 0 
35 7 1 0 0 0 3 0 0 0 0 0 0 0 0 
36 7 1 0 0 0 3 0 0 0 0 3 0 0 0 
39 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
40 8 1 0 0 0 2 0 0 0 0 2 0 0 0 
41 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
44 9 1 0 0 0 3 0 0 0 0 3 0 0 0 
45 9 1 0 0 0 3 0 0 0 0 0 0 0 0 
fn=sign
53 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
54 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
55 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
56 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
57 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
58 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
59 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
60 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
61 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
62 12 1 1 0 0 1 0 0 0 0 1 2 0 24586 
65 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
66 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
67 12 1 1 0 0 1 0 0 0 0 1 1 0 19589 
70 13 1 0 0 0 2 0 0 0 0 2 0 0 0 
71 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
72 13 1 0 0 0 2 0 0 0 0 2 0 0 0 
75 11 1 0 0 0 2 0 0 0 0 0 0 0 0 
78 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
79 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
80 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
81 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_abs_check.c
cfn=klee_abs_check
calls=1 15 5
81 15 1 0 0 0 13 0 0 0 0 6 0 0 0 
82 15 1 0 0 0 13 0 0 0 0 0 0 0 0 
83 15 1 0 0 0 13 0 0 0 0 6 0 0 0 
84 15 1 0 0 0 13 0 0 0 0 0 0 0 0 
87 16 1 0 0 0 13 0 0 0 0 13 0 0 0 
88 16 1 0 0 0 13 0 0 0 0 0 0 0 0 
fn=main
93 18 1 0 0 0 1 76 0 0 0 0 0 0 0 
94 18 1 0 0 0 1 75 0 0 0 0 0 0 0 
95 18 1 0 0 0 1 74 0 0 0 0 0 0 0 
96 18 1 0 0 0 1 73 0 0 0 1 0 0 0 
97 19 1 0 0 0 1 72 0 0 0 0 0 0 0 
98 19 1 0 0 0 1 70 0 0 0 0 0 0 0 
99 20 1 0 0 0 1 68 0 0 0 0 0 0 0 
100 20 1 0 0 0 1 67 0 0 0 2 0 0 0 
101 21 1 0 0 0 1 65 0 0 0 1 0 0 0 
102 21 1 0 0 0 1 64 0 0 0 0 0 0 0 
103 21 1 1 0 0 1 63 0 0 0 1 2 0 28402 
106 21 1 0 0 0 1 65 0 0 0 1 0 0 0 
107 21 1 0 0 0 1 64 0 0 0 0 0 0 0 
108 18 1 0 0 0 1 63 0 0 0 0 0 0 0 
111 0 1 0 0 0 2 62 0 0 0 0 0 0 0 
112 21 1 0 0 0 2 61 0 0 0 0 0 0 0 
113 21 1 0 0 0 2 60 0 0 0 0 0 0 0 
114 21 1 0 0 0 2 59 0 0 0 3 0 0 0 
115 22 1 0 0 0 1 57 0 0 0 1 0 0 0 
116 22 1 0 0 0 1 56 0 0 0 0 0 0 0 
117 22 1 1 0 0 1 55 0 0 0 1 1 0 10314 
120 22 1 0 0 0 1 57 0 0 0 1 0 0 0 
121 22 1 0 0 0 1 56 0 0 0 0 0 0 0 
122 18 1 0 0 0 1 55 0 0 0 0 0 0 0 
125 18 1 1 0 0 5 54 0 0 0 5 1 2 123461 
128 23 1 0 0 0 4 59 0 0 0 4 0 0 0 
129 23 1 0 0 0 4 58 0 0 0 0 0 0 0 
130 23 1 0 0 0 4 57 0 0 0 0 0 0 0 
131 23 1 0 0 0 4 56 0 0 0 5 0 0 0 
132 24 1 0 0 0 1 54 0 0 0 1 0 0 0 
133 24 1 0 0 0 1 53 0 0 0 0 0 0 0 
134 24 1 0 0 0 1 52 0 0 0 1 0 0 0 
135 25 1 0 0 0 1 50 0 0 0 1 0 0 0 
136 25 1 0 0 0 1 49 0 0 0 0 0 0 0 
137 25 1 1 0 0 1 48 0 0 0 1 1 0 13265 
140 25 1 0 0 0 1 50 0 0 0 1 0 0 0 
141 25 1 0 0 0 1 49 0 0 0 0 0 0 0 
142 25 1 1 0 0 1 48 0 0 0 1 1 0 9936 
145 26 1 0 0 0 2 67 0 0 0 2 0 0 0 
146 26 1 0 0 0 2 66 0 0 0 2 0 0 0 
147 26 1 0 0 0 2 65 0 0 0 0 0 0 0 
148 26 1 0 0 0 2 64 0 0 0 2 0 0 0 
149 26 1 0 0 0 2 63 0 0 0 0 0 0 0 
150 26 1 0 0 0 2 62 0 0 0 0 0 0 0 
151 26 1 0 0 0 2 61 0 0 0 2 0 0 0 
154 27 1 0 0 0 2 60 0 0 0 2 0 0 0 
155 27 1 0 0 0 2 59 0 0 0 2 0 0 0 
156 27 1 0 0 0 2 58 0 0 0 0 0 0 0 
157 27 1 0 0 0 2 57 0 0 0 0 0 0 0 
158 27 1 0 0 0 2 56 0 0 0 2 0 0 0 
161 28 1 0 0 0 1 55 0 0 0 0 0 0 0 
162 28 1 0 0 0 1 53 0 0 0 1 0 0 0 
163 28 1 0 0 0 1 52 0 0 0 0 0 0 0 
164 28 1 0 0 0 1 51 0 0 0 1 0 0 0 
167 29 1 0 0 0 2 48 0 0 0 2 0 0 0 
168 29 1 0 0 0 2 47 0 0 0 0 0 0 0 
169 29 1 0 0 0 2 46 0 0 0 2 0 0 0 
172 30 1 0 0 0 1 45 0 0 0 0 0 0 0 
173 30 1 0 0 0 1 43 0 0 0 1 0 0 0 
174 30 1 0 0 0 1 42 0 0 0 0 0 0 0 
175 30 1 0 0 0 1 41 0 0 0 1 0 0 0 
178 31 1 0 0 0 1 38 0 0 0 1 0 0 0 
179 31 1 0 0 0 1 37 0 0 0 0 0 0 0 
180 31 1 0 0 0 1 36 0 0 0 1 0 0 0 
183 32 1 0 0 0 1 35 0 0 0 0 0 0 0 
184 32 1 0 0 0 1 33 0 0 0 1 0 0 0 
185 32 1 0 0 0 1 32 0 0 0 0 0 0 0 
186 32 1 0 0 0 1 31 0 0 0 1 0 0 0 
189 33 1 0 0 0 1 34 0 0 0 0 0 0 0 
190 33 1 0 0 0 1 32 0 0 0 1 0 0 0 
191 33 1 0 0 0 1 31 0 0 0 0 0 0 0 
cfn=abs_val
calls=1 15 5
191 33 23 3 0 0 49 0 0 0 0 26 3 1 112646 
192 33 1 0 0 0 3 0 0 0 0 3 0 0 0 
193 33 1 0 0 0 3 0 0 0 0 3 0 0 0 
194 33 1 0 0 0 3 0 0 0 0 0 0 0 0 
197 34 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 65:
[64] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var x int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (or  (=  false (bvslt  (_ bv0 32) ?B1 ) ) (eq  false (bvslt  ?B1 (_ bv0 32) ) ) ) (and  (bvslt  (_ bv0 32) ?B1 ) (=  false (bvuge  ?B1 (_ bv0 32) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Slt 0
                  N0:(ReadLSB w32 0 x))
         (Eq false
             (Slt N0 0)
             (Slt 0 N0))
         (Slt 0 N0))]
        false)


Test case: test000002
[Parsed from .ktest]
var x int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (bvudiv  ?B1 (_ bv2 32) ) ) ) (and  (=  false (bvslt  (_ bv0 32) ?B1 ) ) (bvslt  (_ bv0 32) ?B1 ) (bvslt  (_ bv0 32) ?B2 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Slt 0
                  N0:(ReadLSB w32 0 x))
         (Slt 0 N0)
         (Slt 0 (UDiv w32 N0 2))]
        false)


Test case: test000003
[Parsed from .ktest]
var x int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (bvneg  ?B1 ) ) ) (and  (and  (bvslt  (_ bv0 32) ?B1 ) (=  false (bvslt  ?B2 (_ bv0 32) ) ) ) (eq  false (bvslt  ?B2 0) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 x))
         (Eq false
             (Slt (Neg w32 N0) 0)]
        false)


Test case: test000004
[.parsed from .ktest]
var x int -1097514008
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (bvslt  (_ bv0 32) ?B1 ) ) (bvslt  ???B1 (?B2 ?B1 ) ) (?B3 (bvneg  (?B1 ) ) ) (and  (equiv  false (bvslt  (?B3 (?B1 ) ) _ bv0 32) ) (eq  false (bvslt  ?B1 0) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 x))
         (Eq false
             (Slt (Neg w32 N0) 0)]
        false)


Test case: test000005
[.parsed from .ktest]
var x int 1097514007
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (bvslt  (_ bv0 32) ?B1 ) ) (and  (and  (bvslt  ?B1 (_ bv0 32) ) (=  false (bvslt  ?B2 (_ bv0 32) ) ) ) (eq  false (bvslt  ?B2 0) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 x))
         (Slt N0 0)
         (Eq false
             (Slt N0 0)]
        false)


Test case: test000006
[.ktest content]
var x int -2
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  (_ bv0 32) ?B1 ) (bvslt  (bvneg  ?B1 ) (_ bv0 32) ) (=  false (bvslt  (bvneg  ?B1 ) (_ bv0 32) ) ) ) (=  false (=  (bvsle  (bvsle  (_ bv1 32) (bvneg  ?B1 ) ) (bvadd  (bvneg  ?B1 ) (_ bv1 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 x))
         (Slt (Neg w32 N0) 0)
         (Eq false
             (Slt (Neg w32 N0) 0)
         (Eq false
             (SLe w32 (SLe w32 1 (Neg w32 N0) 0)
        false)


Test case: test000007
[.ktest content]
var x int 2
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (?B2 (bvashr  ?B1 (_ bv1 32) ) ) ) (and  (=  false (bvslt  (_ bv0 32) ?B1 ) ) (Eq false (Slt  (bvsub  (?B1 ?B2 ) (_ bv1 32) ) (_ bv0 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Slt 0
                  N0:(ReadLSB w32 0 x))
         (Eq false
             (Slt (Sub w32 N0 (AShr w32 1)) 0)]
        false)

--- Program 85 ---
[run.istats content]
version: 1
creator: klee
pid: 9062
cmd: 67.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=67.c
fn=main
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
19 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
24 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
25 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
26 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 9 1 0 0 0 1 0 0 0 0 2 0 0 0 
28 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
29 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
30 10 1 1 0 0 1 0 0 0 0 1 2 0 24094 
33 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
34 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
35 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
38 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
39 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
40 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
41 10 1 0 0 0 2 0 0 0 0 3 0 0 0 
42 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
43 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
44 11 1 1 0 0 1 0 0 0 0 1 1 0 14130 
47 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
48 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
49 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
52 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
53 11 1 0 0 0 2 0 0 0 0 0 0 0 0 
54 11 1 0 0 0 2 0 0 0 0 0 0 0 0 
55 11 1 0 0 0 2 0 0 0 0 3 0 0 0 
56 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
57 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
58 12 1 1 0 0 1 0 0 0 0 1 1 0 30042 
61 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
62 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
63 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
66 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
67 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
68 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
69 12 1 0 0 0 2 0 0 0 0 3 0 0 0 
70 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
71 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
72 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
73 14 1 1 0 0 1 0 0 0 0 1 1 0 15270 
76 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
77 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
78 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
79 15 1 1 0 0 1 0 0 0 0 1 1 0 39430 
82 16 1 0 0 0 2 0 0 0 0 2 0 0 0 
83 16 1 0 0 0 2 0 0 0 0 2 0 0 0 
84 16 1 0 0 0 2 0 0 0 0 0 0 0 0 
85 16 1 2 0 0 2 0 0 0 0 2 1 0 586248 
88 17 1 0 0 0 2 0 0 0 0 0 0 0 0 
89 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
90 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
91 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
92 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
93 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
94 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_div_zero_check.c
cfn=klee_div_zero_check
calls=2 101 20
94 18 7 0 0 0 14 0 0 0 0 6 0 0 0 
95 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
96 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
97 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
98 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
99 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
100 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
101 20 1 0 0 0 2 0 0 0 0 0 0 0 0 
102 20 1 0 0 0 2 0 0 0 0 2 0 0 0 
103 20 1 0 0 0 2 0 0 0 0 0 0 0 0 
106 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
107 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
108 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
109 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
110 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
fn=run_program
117 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
118 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
119 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
120 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
121 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
122 23 1 1 0 0 1 0 0 0 0 1 1 0 61546 
125 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
126 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
127 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
128 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
129 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
130 23 1 1 0 0 1 0 0 0 0 1 1 0 30376 
133 24 1 0 0 0 1 0 0 0 0 1 0 0 0 
134 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
135 24 1 0 0 0 1 0 0 0 0 1 0 0 0 
136 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
137 24 1 1 0 0 1 0 0 0 0 1 1 0 30471 
140 24 1 0 0 0 1 0 0 0 0 1 0 0 0 
141 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
142 24 1 0 0 0 1 0 0 0 0 1 0 0 0 
143 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
144 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
147 26 1 0 0 0 2 0 0 0 0 2 0 0 0 


This is the critical path for program 67:
[66] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var a int -1
var b int 0
var c int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 a)))]
        false)


Test case: test000002
[Parsed from .ktest]
var a int 0
var b int -1
var c int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 a))]
        false)


Test case: test000003
[Parsed from .ktest]
var a int 0
var b int 0
var c int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun c () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
array c[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 a))]
        false)


Test case: test000004
[Parsed from .ktest]
var a int 0
var b int 0
var c int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun b () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun c () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv50 32) ) ) (=  false (bvsle  (_ bv0 32) (concat  (select  b (_ bv3 32) ) (concat  (select  b (_ bv2 32) ) (concat  (select  b (_ bv1 32) ) (select  b (_ bv0 32) ) ) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
array b[4] : w32 -> w8 = symbolic
array c[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 a))
         (Sle N0 50)
         (Eq false
             (Sle 0
                  (ReadLSB w32 0 b))]
        false)


--- Program 86 ---
[run.istats content]
version: 1
creator: klee
pid: 9050
cmd: 67.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=67.c
fn=main
14 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
21 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
23 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 9 1 0 0 0 1 0 0 0 0 2 0 0 0 
25 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
26 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 10 1 1 0 0 1 0 0 0 0 1 2 0 21132 
30 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
31 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
35 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
36 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
37 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
38 10 1 0 0 0 2 0 0 0 0 3 0 0 0 
39 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
40 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
41 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
42 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
43 11 1 1 0 0 1 0 0 0 0 1 1 0 23487 
46 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
47 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
48 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
49 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
50 12 1 1 0 0 1 0 0 0 0 1 1 0 17509 
53 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
54 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
55 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
56 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
57 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
60 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
63 5 1 0 0 0 2 0 0 0 0 0 0 0 0 
66 13 1 0 0 0 3 0 0 0 0 3 0 0 0 
67 13 1 0 0 0 3 0 0 0 0 3 0 0 0 
68 13 1 0 0 0 3 0 0 0 0 3 0 0 0 
69 13 1 0 0 0 3 0 0 0 0 0 0 0 0 
70 13 1 0 0 0 3 0 0 0 0 0 0 0 0 
71 13 1 0 0 0 3 0 0 0 0 0 0 0 0 
72 13 1 0 0 0 3 0 0 0 0 3 2 2 90058 
75 14 1 0 0 0 2 0 0 0 0 1 0 0 0 
76 14 0 0 0 0 0 0 0 0 0 0 0 0 0 
79 15 1 0 0 0 3 0 0 0 0 3 0 0 0 


This is the critical path for program 67:
[66] Most complex (longest) path file: test000003.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var x int -51
var y int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv4294967246 32) (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 4294967246
                  (ReadLSB w32 0 x)))]
        false)


Test case: test000002
[Parsed from .ktest]
var x int 0
var y int -51
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun y () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  y (_ bv3 32) ) (concat  (select  y (_ bv2 32) ) (concat  (select  y (_ bv1 32) ) (select  y (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv4294967246 32) (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (bvsle  ?B1 (_ bv50 32) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
array y[4] : w32 -> w8 = symbolic
(query [(Sle 4294967246
              (ReadLSB w32 0 x))
         (Sle N0:(ReadLSB w32 0 y)
             50)]
        false)


--- Program 87 ---
[run.istats content]
version: 1
creator: klee
pid: 7885
cmd: 48.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=48.c
fn=main
13 5 1 0 0 0 1 41 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 40 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 39 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 38 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 37 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 36 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 35 0 0 0 1 0 0 0 
20 6 1 0 0 0 1 34 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 32 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 31 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 29 0 0 0 1 0 0 0 
24 8 1 0 0 0 1 28 0 0 0 0 0 0 0 
25 8 1 1 0 0 1 27 0 0 0 1 2 0 26685 
28 8 1 0 0 0 1 29 0 0 0 1 0 0 0 
29 8 1 0 0 0 1 28 0 0 0 0 0 0 0 
30 5 1 0 0 0 1 27 0 0 0 0 0 0 0 
33 0 1 0 0 0 2 26 0 0 0 0 0 0 0 
34 8 1 0 0 0 2 25 0 0 0 0 0 0 0 
35 8 1 0 0 0 2 24 0 0 0 0 0 0 0 
36 8 1 0 0 0 2 23 0 0 0 3 0 0 0 
37 9 1 0 0 0 1 21 0 0 0 0 0 0 0 
38 9 1 0 0 0 1 19 0 0 0 1 0 0 0 
39 9 1 0 0 0 1 18 0 0 0 0 0 0 0 
42 9 1 0 0 0 11 17 0 0 0 11 0 0 0 
43 9 1 0 0 0 11 16 0 0 0 0 0 0 0 
44 9 1 10 0 0 11 15 0 0 0 11 10 1 144682 
47 10 1 0 0 0 10 12 0 0 0 10 0 0 0 
48 10 1 0 0 0 10 11 0 0 0 10 0 0 0 
49 10 1 0 0 0 10 10 0 0 0 0 0 0 0 
52 9 1 0 0 0 10 9 0 0 0 10 0 0 0 
53 9 1 0 0 0 10 8 0 0 0 0 0 0 0 
54 9 1 0 0 0 10 7 0 0 0 10 0 0 0 
55 9 1 0 0 0 10 6 0 0 0 0 0 0 0 
58 11 1 0 0 0 11 5 0 0 0 11 0 0 0 
59 11 1 0 0 0 11 4 0 0 0 0 0 0 0 
60 11 1 0 0 0 11 3 0 0 0 0 0 0 0 
61 11 1 0 0 0 11 2 0 0 0 11 0 11 133552 
64 12 0 0 0 0 0 1 0 0 1 0 0 0 0 
65 12 0 0 0 0 0 0 0 0 0 0 0 0 0 
68 13 1 0 0 0 11 0 0 0 0 11 0 0 0 


This is the critical path for program 48:
[47] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var a int -101
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv4294967196 32) (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 4294967196
                  (ReadLSB w32 0 a)))]
        false)


Test case: test000002
[Parsed from .ktest]
var a int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv4294967200 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Sle 4294967200
              N0:(ReadLSB w32 0 a))
         (Sle N0 100)]
        false)


Test case: test000003
[Parsed from .ktest]
var a int 50
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv4294967150 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Sle 4294967150
              N0:(ReadLSB w32 0 a))
         (Sle N0 100)]
        false)


Test case: test000004
[Parsed from .ktest]
var a int 100
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvsle  (_ bv4294967196 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 a))
         (Sle N0 100)
         (Eq false
             (Sle 4294967196 N0))]
        false)


Test case: test000005
[Parsed from .ktest]
var a int -50
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) (?B2 (bvmul  (_ bv2 32) ?B1 ) ) (?B3 (=  false (bvsle  (_ bv4294967196 32) ?B1 ) ) ) ) (and  (and  (bvsle  (_ bv4294967150 32) ?B1 ) (bvsle  ?B2 (_ bv100 32) ) ) (bvsle  ?B2 (_ bv1 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Sle 4294967150
              N0:(ReadLSB w32 0 a))
         (Sle N0 N1:(Mul w32 2 N0))
         (Sle N1 100)
         (Sle N1 1)]
        false)


Test case: test000006
[Parsed from .ktest]
var a int -20
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) (?B2 (+  10 ?B1 ) ) (?B3 (bvmul  (_ bv2 32) ?B1 ) ) (and  (bvsle  (_ bv4294967196 32) ?B1 ) (=  false (bvsle  (_ bv4294967196 32) ?B2 ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Sle 4294967196
              N0:(ReadLSB w32 0 a))
         (Eq false
             (Sle 4294967196
                 N1:(Add w32 10 N0))]
        false)


Test case: test000007
[Parsed from .ktest]
var a int 110
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  a (_ bv3 32) ) (concat  (select  a (_ bv2 32) ) (concat  (select  a (_ bv1 32) ) (select  a (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv4294967196 32) ?B1 ) (=  false (bvsle  (_ bv4294967196 32) (_ bv100 32) ) ) ) (=  false (bvsle  (_ bv4294967196 32) (bvmul  (_ bv2 32) ?B1 ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array a[4] : w32 -> w8 = symbolic
(query [(Sle 4294967196
              N0:(ReadLSB w32 0 a))
         (Eq false
             (Sle 4294967196
                 (_ bv100 32))
         (Eq false
             (Sle 4294967196
                 (Mul w32 2 N0))]
        false)


--- Program 88 ---
[run.istats content]
version: 1
creator: klee
pid: 9116
cmd: 65.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=65.c
fn=main
10 5 1 0 0 0 1 43 0 0 0 0 0 0 0 
11 5 1 0 0 0 1 42 0 0 0 0 0 0 0 
12 5 1 0 0 0 1 41 0 0 0 0 0 0 0 
13 5 1 0 0 0 1 40 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 39 0 0 0 1 0 0 0 
15 6 1 0 0 0 1 38 0 0 0 0 0 0 0 
16 6 1 0 0 0 1 36 0 0 0 1 0 0 0 
17 6 1 0 0 0 1 35 0 0 0 0 0 0 0 
18 7 1 0 0 0 1 33 0 0 0 1 0 0 0 
19 7 1 0 0 0 1 32 0 0 0 0 0 0 0 
20 7 1 0 0 0 1 31 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 30 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 29 0 0 0 1 1 1 9069 
25 8 1 0 0 0 1 27 0 0 0 1 0 0 0 
26 8 1 0 0 0 1 26 0 0 0 0 0 0 0 
27 8 1 0 0 0 1 25 0 0 0 0 0 0 0 
28 8 1 0 0 0 1 24 0 0 0 0 0 0 0 
29 8 1 0 0 0 1 23 0 0 0 1 0 0 0 
30 9 1 0 0 0 1 21 0 0 0 0 0 0 0 
31 9 1 0 0 0 1 19 0 0 0 1 0 0 0 
32 9 1 0 0 0 1 18 0 0 0 0 0 0 0 
33 9 1 0 0 0 1 17 0 0 0 1 0 0 0 
34 10 1 0 0 0 1 15 0 0 0 0 0 0 0 
35 10 1 0 0 0 1 14 0 0 0 1 0 0 0 
36 10 1 0 0 0 1 13 0 0 0 0 0 0 0 
37 10 1 0 0 0 1 12 0 0 0 1 0 0 0 
38 11 1 0 0 0 1 10 0 0 0 0 0 0 0 
39 11 1 0 0 0 1 9 0 0 0 1 0 0 0 
40 11 1 0 0 0 1 8 0 0 0 0 0 0 0 
41 11 1 0 0 0 1 7 0 0 0 1 0 0 0 
42 12 1 0 0 0 1 5 0 0 0 0 0 0 0 
43 12 1 0 0 0 1 4 0 0 0 0 0 0 0 
44 12 1 0 0 0 1 3 0 0 0 1 0 0 0 
45 12 1 0 0 0 1 2 0 0 0 0 0 0 0 
46 12 1 1 0 0 1 1 0 0 0 1 1 0 18000 
49 13 1 0 0 0 1 4 0 0 0 1 0 0 0 
50 13 1 0 0 0 1 3 0 0 0 0 0 0 0 
51 13 1 0 0 0 1 2 0 0 0 1 0 0 0 
52 13 1 0 0 0 1 1 0 0 0 1 0 0 0 
55 14 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 65:
[64] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var x int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv1 32) (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 1
                  (ReadLSB w32 0 x)))]
        false)


Test case: test000002
[Parsed from .ktest]
var x int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun x () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  x (_ bv3 32) ) (concat  (select  x (_ bv2 32) ) (concat  (select  x (_ bv1 32) ) (select  x (_ bv0 32) ) ) ) ) ) (and  (and  (bvsle  (_ bv1 32) ?B1 ) (bvsle  ?B1 (_ bv50 32) ) ) (=  false (bvslt  (_ bv1 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array x[4] : w32 -> w8 = symbolic
(query [(Sle 1
              N0:(ReadLSB w32 0 x))
         (Sle N0 50)
         (Eq false (Slt 1 N0))]
        false)


--- Program 89 ---
[run.istats content]
version: 1
creator: klee
pid: 7609
cmd: 51.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=51.c
fn=main
13 5 1 0 0 0 1 32 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 31 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 30 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 29 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 28 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 27 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 25 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 23 0 0 0 0 0 0 0 
21 6 1 0 0 0 1 21 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 19 0 0 0 0 0 0 0 
23 7 1 0 0 0 1 18 0 0 0 2 0 0 0 
24 8 1 0 0 0 1 16 0 0 0 0 0 0 0 
25 8 1 0 0 0 1 15 0 0 0 2 0 0 0 
26 9 1 0 0 0 1 13 0 0 0 1 0 0 0 
27 9 1 0 0 0 1 12 0 0 0 1 0 0 0 
28 9 1 0 0 0 1 11 0 0 0 0 0 0 0 
29 9 1 0 0 0 1 10 0 0 0 1 0 0 0 
30 10 1 0 0 0 1 8 0 0 0 1 0 0 0 
31 10 1 0 0 0 1 7 0 0 0 1 0 0 0 
32 10 1 0 0 0 1 6 0 0 0 0 0 0 0 
33 10 1 0 0 0 1 5 0 0 0 1 0 0 0 
34 11 1 0 0 0 1 3 0 0 0 1 0 0 0 
35 11 1 0 0 0 1 2 0 0 0 1 0 0 0 
36 11 1 0 0 0 1 1 0 0 0 0 0 0 0 
39 12 0 0 0 0 0 0 0 0 0 0 0 0 0 
40 12 0 0 0 0 0 0 0 0 0 0 0 0 0 
43 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
44 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
45 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
46 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
47 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
48 13 1 1 0 0 1 0 0 0 0 1 2 0 23917 
51 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
52 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
53 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
54 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
55 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
56 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
57 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
60 14 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 51:
[50] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 2
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)]
        false)


Test case: test000004
[Parsed from .ktest]
var n int 3
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)]
        false)


Test case: test000005
[Parsed from .ktest]
var n int 4
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvsle  (_ bv4 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Eq false (Sle 4 N0))]
        false)


--- Program 90 ---
[run.istats content]
version: 1
creator: klee
pid: 59873
cmd: 3.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=3.c
fn=main
17 5 1 0 0 0 1 41 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 40 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 39 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 38 0 0 0 1 0 0 0 
21 6 1 0 0 0 1 37 0 0 0 0 0 0 0 
22 6 1 0 0 0 1 35 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 33 0 0 0 1 0 0 0 
24 7 1 0 0 0 1 32 0 0 0 0 0 0 0 
25 7 1 0 0 0 1 31 0 0 0 2 0 0 0 
26 8 1 0 0 0 1 29 0 0 0 0 0 0 0 
27 8 1 0 0 0 1 28 0 0 0 2 0 0 0 
28 9 1 0 0 0 1 26 0 0 0 1 0 0 0 
29 9 1 0 0 0 1 25 0 0 0 0 0 0 0 
30 9 1 1 0 0 1 24 0 0 0 1 2 0 22640 
33 9 1 0 0 0 1 26 0 0 0 1 0 0 0 
34 9 1 0 0 0 1 25 0 0 0 0 0 0 0 
35 5 1 0 0 0 1 24 0 0 0 0 0 0 0 
38 0 1 0 0 0 2 23 0 0 0 0 0 0 0 
39 9 1 0 0 0 2 22 0 0 0 0 0 0 0 
40 9 1 0 0 0 2 21 0 0 0 0 0 0 0 
41 9 1 0 0 0 2 20 0 0 0 3 0 0 0 
42 10 1 0 0 0 1 18 0 0 0 1 0 0 0 
43 10 1 0 0 0 1 17 0 0 0 0 0 0 0 
44 10 1 1 0 0 1 16 0 0 0 1 1 0 11169 
47 10 1 0 0 0 1 18 0 0 0 1 0 0 0 
48 10 1 0 0 0 1 17 0 0 0 0 0 0 0 
49 5 1 0 0 0 1 16 0 0 0 0 0 0 0 
52 0 1 0 0 0 2 15 0 0 0 0 0 0 0 
53 10 1 0 0 0 2 14 0 0 0 0 0 0 0 
54 10 1 0 0 0 2 13 0 0 0 0 0 0 0 
55 10 1 0 0 0 2 12 0 0 0 3 0 0 0 
56 11 1 0 0 0 1 9 0 0 0 1 0 0 0 
57 11 1 0 0 0 1 8 0 0 0 0 0 0 0 
58 11 1 0 0 0 1 7 0 0 0 1 0 0 0 
59 12 1 0 0 0 1 6 0 0 0 1 0 0 0 
60 12 1 0 0 0 1 5 0 0 0 1 0 0 0 
61 12 1 0 0 0 1 4 0 0 0 0 0 0 0 
62 12 1 0 0 0 1 3 0 0 0 1 0 1 11620 
65 13 1 0 0 0 1 6 0 0 0 1 0 0 0 
66 13 1 0 0 0 1 5 0 0 0 1 0 0 0 
67 13 1 0 0 0 1 4 0 0 0 0 0 0 0 
68 13 1 0 0 0 1 3 0 0 0 1 0 1 17990 
71 14 1 0 0 0 1 6 0 0 0 1 0 0 0 
72 14 1 0 0 0 1 5 0 0 0 1 0 0 0 
73 14 1 0 0 0 1 4 0 0 0 0 0 0 0 
74 14 1 0 0 0 1 3 0 0 0 1 0 1 14930 
77 15 1 0 0 0 1 6 0 0 0 1 0 0 0 
78 15 1 0 0 0 1 5 0 0 0 1 0 0 0 
79 15 1 0 0 0 1 4 0 0 0 0 0 0 0 
80 15 1 0 0 0 1 3 0 0 0 1 0 1 23520 
83 17 1 0 0 0 1 5 0 0 0 1 0 0 0 
84 17 1 0 0 0 1 4 0 0 0 1 0 0 0 
85 17 1 0 0 0 1 3 0 0 0 0 0 0 0 
86 17 1 0 0 0 1 2 0 0 0 0 0 0 0 
87 17 1 1 0 0 1 1 0 0 0 1 1 2 24501 
90 18 1 0 0 0 1 3 0 0 0 1 0 0 0 
91 18 1 0 0 0 1 2 0 0 0 1 0 0 0 
92 18 1 0 0 0 1 1 0 0 0 1 0 0 0 
95 19 0 0 0 0 0 0 0 0 0 0 0 0 0 
96 19 0 0 0 0 0 0 0 0 0 0 0 0 0 
99 21 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 3:
[2] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq 0
             (ReadLSB w32 0 n))]
        false)


--- Program 91 ---
[run.istats content]
version: 1
creator: klee
pid: 9233
cmd: 68.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=68.c
fn=main
16 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
21 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
25 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
26 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
28 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
29 9 1 0 0 0 1 0 0 0 0 2 0 0 0 
30 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
31 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 10 1 1 0 0 1 0 0 0 0 1 2 0 27404 
35 10 1 0 0 0 1 0 0 0 0 1 0 0 0 
36 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
37 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
40 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
41 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
42 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
43 10 1 0 0 0 2 0 0 0 0 3 0 0 0 
44 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
45 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
46 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
47 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
48 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
49 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
50 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
51 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
52 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
53 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
54 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
55 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
56 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
57 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
58 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
59 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
60 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
63 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
64 5 1 0 0 0 2 0 0 0 0 0 0 0 0 
67 15 1 0 0 0 3 0 0 0 0 3 0 0 0 
68 15 1 0 0 0 3 0 0 0 0 3 0 0 0 
69 15 1 0 0 0 3 0 0 0 0 0 0 0 0 
70 15 1 0 0 0 3 0 0 0 0 3 0 2 28417 
73 16 1 0 0 0 3 0 0 0 0 3 0 0 0 
74 16 1 0 0 0 3 0 0 0 0 3 0 0 0 
75 16 1 0 0 0 3 0 0 0 0 0 0 0 0 
76 16 1 2 0 0 3 0 0 0 0 3 2 1 509552 
79 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
80 17 1 0 0 0 2 0 0 0 0 2 0 0 0 
81 17 1 0 0 0 2 0 0 0 0 0 0 0 0 
82 17 1 1 0 0 2 0 0 0 0 2 1 1 284131 
85 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
86 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
87 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
88 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
89 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
90 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
91 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
92 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
93 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
94 20 1 0 0 0 2 0 0 0 0 0 0 0 0 
97 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
98 21 1 0 0 0 2 0 0 0 0 0 0 0 0 
99 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
100 5 1 0 0 0 2 0 0 0 0 0 0 0 0 
103 22 1 0 0 0 3 0 0 0 0 3 0 0 0 
104 22 1 0 0 0 3 0 0 0 0 0 0 0 0 
105 22 1 1 0 0 3 0 0 0 0 3 1 2 265003 
108 23 1 0 0 0 3 0 0 0 0 3 0 0 0 
109 23 1 0 0 0 3 0 0 0 0 0 0 0 0 
110 23 1 0 0 0 3 0 0 0 0 3 0 0 0 
111 22 1 0 0 0 3 0 0 0 0 0 0 0 0 
114 25 1 0 0 0 3 0 0 0 0 3 0 0 0 
115 25 1 0 0 0 3 0 0 0 0 3 0 0 0 
116 25 1 0 0 0 3 0 0 0 0 0 0 0 0 
117 25 1 0 0 0 3 0 0 0 0 3 0 0 0 
118 26 1 0 0 0 3 0 0 0 0 3 0 0 0 
119 26 1 0 0 0 3 0 0 0 0 3 0 0 0 
120 26 1 0 0 0 3 0 0 0 0 0 0 0 0 
121 26 1 0 0 0 3 0 0 0 0 3 0 3 46906 
124 27 1 0 0 0 3 0 0 0 0 3 0 0 0 
125 27 1 0 0 0 3 0 0 0 0 0 0 0 0 
126 27 1 0 0 0 3 0 0 0 0 3 0 0 0 
127 25 1 0 0 0 3 0 0 0 0 0 0 0 0 
130 29 1 0 0 0 3 0 0 0 0 3 0 0 0 
131 29 1 0 0 0 3 0 0 0 0 0 0 0 0 
132 29 1 1 0 0 3 0 0 0 0 3 1 2 216961 
135 30 1 0 0 0 3 0 0 0 0 3 0 0 0 
136 30 1 0 0 0 3 0 0 0 0 3 0 0 0 
137 30 1 0 0 0 3 0 0 0 0 0 0 0 0 
138 30 1 0 0 0 3 0 0 0 0 3 0 0 0 
139 32 1 0 0 0 3 0 0 0 0 3 0 0 0 
140 32 1 0 0 0 3 0 0 0 0 0 0 0 0 
func=main
145 5 1 0 0 0 1 0 0 0 0 
146 5 1 0 0 0 1 0 0 0 0 
147 5 1 0 0 0 1 0 0 0 0 
148 5 1 0 0 0 1 0 0 0 0 
149 5 1 0 0 0 1 0 0 0 0 
150 5 1 0 0 0 1 0 0 0 0 
151 5 1 0 0 0 1 0 0 0 0 
152 5 1 0 0 0 1 0 0 0 0 
153 5 1 0 0 0 0 0 0 0 0 
154 5 1 0 0 0 1 0 0 0 0 
155 5 1 0 0 0 1 0 0 0 0 
156 5 1 0 0 0 1 0 0 0 0 
157 5 1 0 0 0 1 0 0 0 0 
158 5 1 0 0 0 0 0 0 0 0 
159 5 1 0 0 0 1 0 0 0 0 
160 5 1 0 0 0 1 0 0 0 0 
161 5 1 0 0 0 1 0 0 0 0 
162 5 1 0 0 0 1 0 0 0 0 
163 5 1 0 0 0 0 0 0 0 0 
164 5 1 0 0 0 1 0 0 0 0 
165 5 1 0 0 0 1 0 0 0 0 
166 5 1 0 0 0 1 0 0 0 0 
167 5 1 0 0 0 1 0 0 0 0 
168 5 1 0 0 0 1 0 0 0 0 
169 5 1 0 0 0 0 0 0 0 0 
170 5 1 0 0 0 0 0 0 0 0 
171 5 1 0 0 0 1 0 0 0 0 
172 5 1 0 0 0 1 0 0 0 0 
173 5 1 0 0 0 1 0 0 0 0 
174 5 1 0 0 0 1 0 0 0 0 
175 5 1 0 0 0 0 0 0 0 0 
176 5 1 1 0 0 1 0 0 0 0 
179 6 1 0 0 0 1 0 0 0 0 
180 6 1 0 0 0 1 0 0 0 0 
181 6 1 0 0 0 1 0 0 0 0 
182 6 1 0 0 0 1 0 0 0 0 
183 6 1 0 0 0 0 0 0 0 0 
184 6 1 0 0 0 1 0 0 0 0 
185 6 1 0 0 0 1 0 0 0 0 
186 6 1 0 0 0 1 0 0 0 0 
187 7 1 0 0 0 1 0 0 0 0 
188 7 1 0 0 0 1 0 0 0 0 
189 7 1 0 0 0 0 0 0 0 0 
192 7 1 0 0 0 1 0 0 0 0 
193 7 1 0 0 0 1 0 0 0 0 
194 7 1 0 0 0 0 0 0 0 0 
195 7 1 0 0 0 1 0 0 0 0 
196 7 1 0 0 0 1 0 0 0 0 
197 7 1 0 0 0 0 0 0 0 0 
198 7 1 0 0 0 0 0 0 0 0 
199 7 1 1 0 0 2 0 0 0 0 
202 8 1 0 0 0 2 0 0 0 0 
203 8 1 0 0 0 2 0 0 0 0 
204 8 1 0 0 0 2 0 0 0 0 
205 8 1 0 0 0 0 0 0 0 0 
206 8 1 0 0 0 0 0 0 0 0 
207 8 1 0 0 0 2 0 0 0 0 
208 9 1 0 0 0 2 0 0 0 0 
209 9 1 0 0 0 2 0 0 0 0 
210 9 1 0 0 0 0 0 0 0 0 
211 9 1 0 0 0 2 0 0 0 0 
212 9 1 0 0 0 2 0 0 0 0 
213 9 1 0 0 0 0 0 0 0 0 
214 9 1 1 0 0 4 0 0 0 0 
217 10 1 0 0 0 3 0 0 0 0 
218 10 1 0 0 0 3 0 0 0 0 
219 10 1 0 0 0 3 0 0 0 0 
220 10 1 0 0 0 0 0 0 0 0 
221 10 1 0 0 0 3 0 0 0 0 
222 10 1 0 0 0 0 0 0 0 0 
223 10 1 1 0 0 3 0 0 0 0 
226 11 1 0 0 0 3 0 0 0 0 
227 11 1 0 0 0 3 0 0 0 0 
228 11 1 0 0 0 3 0 0 0 0 
229 11 1 0 0 0 0 0 0 0 0 
230 11 1 1 0 0 3 0 0 0 0 
233 13 1 0 0 0 3 0 0 0 0 


This is the critical path for program 68:
[67] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvsle  (_ bv1 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Eq false (Sle 1 N0))]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 5
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvsle  (_ bv1 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Eq false (Sle 1 N0))]
        false)


Test case: test000004
[Parsed from .ktest]
var n int 100
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (not  (bvsle  (_ bv1 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 100)
         (Not (Sle 1 N0))]
        false)


--- Program 92 ---
[run.istats content]
version: 1
creator: klee
pid: 50082
cmd: 34.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=34.c
fn=main
10 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
11 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
12 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
13 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 2 1 0 0 0 1 0 0 0 0 1 0 0 0 
15 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 4 1 0 0 0 1 0 0 0 0 2 0 0 0 
20 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 5 1 0 0 0 1 0 0 0 0 2 0 0 0 
22 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
23 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 6 1 1 0 0 1 0 0 0 0 1 2 0 23982 
27 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
28 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
29 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
33 6 1 0 0 0 2 0 0 0 0 0 0 0 0 
34 6 1 0 0 0 2 0 0 0 0 0 0 0 0 
35 6 1 0 0 0 2 0 0 0 0 3 0 0 0 
36 7 1 0 0 0 1 0 0 0 0 1 0 0 0 
37 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
38 7 1 1 0 0 1 0 0 0 0 1 1 0 22662 
41 7 1 0 0 0 1 0 0 0 0 1 0 0 0 
42 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
43 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
46 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
47 7 1 0 0 0 2 0 0 0 0 0 0 0 0 
48 7 1 0 0 0 2 0 0 0 0 0 0 0 0 
49 7 1 0 0 0 2 0 0 0 0 3 0 0 0 
50 8 1 0 0 0 1 0 0 0 0 1 0 0 0 
51 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
52 8 1 1 0 0 1 0 0 0 0 1 1 0 29280 
55 8 1 0 0 0 1 0 0 0 0 1 0 0 0 
56 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
57 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
60 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
61 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
62 8 1 0 0 0 2 0 0 0 0 0 0 0 0 
63 8 1 0 0 0 2 0 0 0 0 3 0 0 0 
64 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
65 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
66 9 1 1 0 0 1 0 0 0 0 1 1 0 24320 
69 9 1 0 0 0 1 0 0 0 0 1 0 0 0 
70 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
71 2 1 0 0 0 1 0 0 0 0 0 0 0 0 
74 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
75 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
76 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
77 9 1 0 0 0 2 0 0 0 0 3 0 0 0 
78 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
79 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
80 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
81 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
82 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
83 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
84 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
85 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
86 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
87 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
88 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
89 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
90 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
91 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
92 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
93 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
94 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
95 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
96 14 1 0 0 0 1 0 0 0 0 0 0 0 0 
97 14 1 0 0 0 1 0 0 0 0 1 0 0 0 
98 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
99 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
100 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
101 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
102 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
103 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
104 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
105 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
106 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
107 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
108 17 1 1 0 0 1 0 0 0 0 1 1 0 41075 
111 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
112 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
113 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
114 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
115 20 1 0 0 0 1 0 0 0 0 1 0 0 0 
116 20 1 0 0 0 1 0 0 0 0 0 0 0 0 
117 20 1 1 0 0 1 0 0 0 0 1 1 0 12890 
120 20 1 0 0 0 1 0 0 0 0 1 0 0 0 
121 20 1 0 0 0 1 0 0 0 0 0 0 0 0 
122 20 1 1 0 0 1 0 0 0 0 1 1 0 10376 
125 21 1 0 0 0 2 0 0 0 0 1 0 0 0 
126 21 0 0 0 0 0 0 0 0 0 0 0 0 0 
129 22 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 34:
[33] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var start int 0
var cycles int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvslt  (_ bv0 32) (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Slt 0
                  (ReadLSB w32 0 start)))]
        false)


Test case: test000002
[Parsed from .ktest]
var start int -1
var cycles int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun start () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (and  (bvsle  (_ bv1 32) (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) (=  false (bvslt  (_ bv0 32) (concat  (select  start (_ bv3 32) ) (concat  (select  start (_ bv2 32) ) (concat  (select  start (_ bv1 32) ) (select  start (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array start[4] : w32 -> w8 = symbolic
(query [(Sle 1
              (ReadLSB w32 0 start))
         (Eq false
             (Slt 0
                  (ReadLSB w32 0 start))]
        false)


--- Program 93 ---
[run.istats content]
version: 1
creator: klee
pid: 9058
cmd: 58.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=58.c
fn=main
17 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 5 1 0 0 0 1 0 0 0 0 1 0 0 0 
22 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
25 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
26 6 1 0 0 0 1 0 0 0 0 1 0 0 0 
27 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
28 7 1 0 0 0 1 0 0 0 0 2 0 0 0 
29 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
30 8 1 0 0 0 1 0 0 0 0 2 0 0 0 
31 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 9 1 0 0 0 1 0 0 0 0 2 0 0 0 
33 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
34 10 1 0 0 0 1 0 0 0 0 2 0 0 0 
35 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
36 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
37 11 1 1 0 0 1 0 0 0 0 1 2 0 44217 
40 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
41 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
42 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
45 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
46 11 1 0 0 0 2 0 0 0 0 0 0 0 0 
47 11 1 0 0 0 2 0 0 0 0 0 0 0 0 
48 11 1 0 0 0 2 0 0 0 0 3 0 0 0 
49 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
50 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
51 12 1 1 0 0 1 0 0 0 0 1 1 0 15424 
54 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
55 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
56 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
59 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
60 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
61 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
62 12 1 0 0 0 2 0 0 0 0 3 0 0 0 
63 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
64 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
65 13 1 1 0 0 1 0 0 0 0 1 1 0 20526 
68 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
69 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
70 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
73 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
74 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
75 13 1 0 0 0 2 0 0 0 0 0 0 0 0 
76 13 1 0 0 0 2 0 0 0 0 3 0 0 0 
77 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
78 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
79 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
80 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
81 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
82 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
83 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
84 16 1 1 0 0 1 0 0 0 0 1 1 0 138998 
87 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
88 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
89 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
90 17 1 1 0 0 1 0 0 0 0 1 1 0 70306 
93 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
94 18 1 0 0 0 1 0 0 0 0 1 0 0 0 
95 18 1 0 0 0 1 0 0 0 0 0 0 0 0 
96 18 1 1 0 0 1 0 0 0 0 1 1 0 37254 
99 19 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 58:
[57] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var dividend int -1
var divisor int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun dividend () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  dividend (_ bv3 32) ) (concat  (select  dividend (_ bv2 32) ) (concat  (select  dividend (_ bv1 32) ) (select  dividend (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array dividend[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 dividend)))]
        false)


Test case: test000002
[Parsed from .ktest]
var dividend int 0
var divisor int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun dividend () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun divisor () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  divisor (_ bv3 32) ) (concat  (select  divisor (_ bv2 32) ) (concat  (select  divisor (_ bv1 32) ) (select  divisor (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv100 32) ) ) (=  false (bvsle  (_ bv0 32) (concat  (select  dividend (_ bv3 32) ) (concat  (select  dividend (_ bv2 32) ) (concat  (select  dividend (_ bv1 32) ) (select  dividend (_ bv0 32) ) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array dividend[4] : w32 -> w8 = symbolic
array divisor[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 divisor))
         (Sle N0 100)
         (Eq false
             (Sle 0
                  (ReadLSB w32 0 dividend))]
        false)


--- Program 94 ---
[run.istats content]
version: 1
creator: klee
pid: 9021
cmd: 64.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=64.c
fn=main
12 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
13 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
14 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
15 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
16 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
17 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
18 3 1 0 0 0 1 0 0 0 0 1 0 0 0 
19 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
20 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
21 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
22 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
23 4 1 0 0 0 1 0 0 0 0 0 0 0 0 
24 4 1 0 0 0 1 0 0 0 0 2 0 0 0 
25 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
26 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
27 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
28 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
29 5 1 0 0 0 1 0 0 0 0 0 0 0 0 
30 5 1 0 0 0 1 0 0 0 0 3 0 0 0 
31 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
32 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
33 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
34 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
35 6 1 0 0 0 1 0 0 0 0 0 0 0 0 
36 6 1 0 0 0 1 0 0 0 0 4 0 0 0 
37 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
38 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
39 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
40 7 1 0 0 0 1 0 0 0 0 0 0 0 0 
41 7 1 0 0 0 1 0 0 0 0 5 0 0 0 
42 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
43 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
44 8 1 0 0 0 1 0 0 0 0 0 0 0 0 
45 8 1 0 0 0 1 0 0 0 0 6 0 0 0 
46 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
47 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
48 9 1 0 0 0 1 0 0 0 0 0 0 0 0 
49 9 1 0 0 0 1 0 0 0 0 6 0 0 0 
50 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
53 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
54 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
55 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
56 9 1 0 0 0 2 0 0 0 0 0 0 0 0 
57 9 1 0 0 0 2 0 0 0 0 8 0 0 0 
58 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
59 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
60 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
61 10 1 0 0 0 1 0 0 0 0 7 0 0 0 
62 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
65 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
66 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
67 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
68 10 1 0 0 0 2 0 0 0 0 0 0 0 0 
69 10 1 0 0 0 2 0 0 0 0 8 0 0 0 
70 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
71 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
72 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
73 11 1 1 0 0 1 0 0 0 0 1 2 0 28536 
76 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
77 11 1 0 0 0 1 0 0 0 0 0 0 0 0 
78 11 1 1 0 0 1 0 0 0 0 1 1 0 10455 
81 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
82 12 1 0 0 0 1 0 0 0 0 1 0 0 0 
83 12 1 0 0 0 1 0 0 0 0 0 0 0 0 
84 12 1 1 0 0 1 0 0 0 0 1 1 0 13811 
87 13 1 0 0 0 1 0 0 0 0 0 0 0 0 
90 14 1 0 0 0 2 0 0 0 0 2 0 0 0 
91 14 1 0 0 0 2 0 0 0 0 0 0 0 0 
92 14 1 0 0 0 2 0 0 0 0 2 0 0 0 
93 14 1 0 0 0 2 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_overshift_check.c
cfn=klee_overshift_check
calls=2 99 15
92 14 7 0 0 0 14 0 0 0 0 7 0 0 0 
93 14 1 0 0 0 2 0 0 0 0 0 0 0 0 
94 14 1 0 0 0 2 0 0 0 0 2 0 0 0 
95 14 1 0 0 0 2 0 0 0 0 0 0 0 0 
98 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
99 15 1 0 0 0 1 0 0 0 0 0 0 0 0 
100 15 1 0 0 0 1 0 0 0 0 1 0 0 0 
101 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
104 0 1 0 0 0 3 0 0 0 0 0 0 0 0 
105 15 1 0 0 0 3 0 0 0 0 0 0 0 0 
106 15 1 0 0 0 3 0 0 0 0 0 0 0 0 
107 15 1 0 0 0 3 0 0 0 0 0 0 0 0 
108 15 1 0 0 0 3 0 0 0 0 9 0 0 0 
109 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
110 16 1 0 0 0 1 0 0 0 0 0 0 0 0 
111 16 1 0 0 0 1 0 0 0 0 1 0 0 0 
112 3 1 0 0 0 1 0 0 0 0 0 0 0 0 
115 0 1 0 0 0 2 0 0 0 0 0 0 0 0 
116 16 1 0 0 0 2 0 0 0 0 0 0 0 0 
117 16 1 0 0 0 2 0 0 0 0 0 0 0 0 
118 16 1 0 0 0 2 0 0 0 0 0 0 0 0 
119 16 1 0 0 0 2 0 0 0 0 8 0 0 0 
120 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
121 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
122 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
123 17 1 1 0 0 1 0 0 0 0 1 1 0 57258 
126 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
127 17 1 0 0 0 1 0 0 0 0 1 0 0 0 
128 17 1 0 0 0 1 0 0 0 0 0 0 0 0 
129 17 1 1 0 0 1 0 0 0 0 1 1 0 152907 
132 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
133 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
134 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
135 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
136 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
137 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
138 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
139 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
140 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
141 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
142 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
143 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
144 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
145 19 1 0 0 0 2 0 0 0 0 0 0 0 0 
146 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
147 20 1 0 0 0 2 0 0 0 0 0 0 0 0 
150 21 1 0 0 0 3 0 0 0 0 0 0 0 0 
153 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
154 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
155 21 1 0 0 0 2 0 0 0 0 0 0 0 0 
156 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
157 21 1 0 0 0 2 0 0 0 0 0 0 0 0 
158 21 1 0 0 0 2 0 0 0 0 0 0 0 0 
159 21 1 0 0 0 2 0 0 0 0 2 0 0 0 
160 22 1 0 0 0 2 0 0 0 0 0 0 0 0 
163 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
164 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
165 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
166 22 1 0 0 0 1 0 0 0 0 1 0 0 0 
167 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
168 22 1 0 0 0 1 0 0 0 0 0 0 0 0 
169 22 1 1 0 0 1 0 0 0 0 1 1 0 90235 
172 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
173 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
174 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
175 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
176 23 1 0 0 0 1 0 0 0 0 0 0 0 0 
177 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
178 24 1 0 0 0 1 0 0 0 0 1 0 0 0 
179 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
180 24 1 0 0 0 1 0 0 0 0 1 0 0 0 
181 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
182 24 1 0 0 0 1 0 0 0 0 0 0 0 0 
183 24 1 1 0 0 1 0 0 0 0 1 1 0 485729 
186 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
187 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
188 25 1 0 0 0 2 0 0 0 0 0 0 0 0 
189 25 1 0 0 0 2 0 0 0 0 2 0 0 0 
190 26 1 0 0 0 2 0 0 0 0 0 0 0 0 
193 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
194 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
195 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
196 26 1 0 0 0 1 0 0 0 0 0 0 0 0 
197 26 1 0 0 0 1 0 0 0 0 1 0 0 0 
198 26 1 0 0 0 1 0 0 0 0 0 0 0 0 
199 26 1 0 0 0 1 0 0 0 0 0 0 0 0 
200 26 1 1 0 0 1 0 0 0 0 1 1 0 34213 
203 27 1 0 0 0 1 0 0 0 0 1 0 0 0 
204 27 1 0 0 0 1 0 0 0 0 0 0 0 0 
205 27 1 0 0 0 1 0 0 0 0 1 0 0 0 
206 27 1 0 0 0 1 0 0 0 0 0 0 0 0 
207 27 1 0 0 0 1 0 0 0 0 1 0 0 0 
208 27 1 0 0 0 1 0 0 0 0 0 0 0 0 
209 27 1 1 0 0 1 0 0 0 0 1 1 0 581784 
212 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
213 28 1 0 0 0 1 0 0 0 0 0 0 0 0 
214 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
215 28 1 0 0 0 1 0 0 0 0 0 0 0 0 
216 28 1 0 0 0 1 0 0 0 0 1 0 0 0 
217 28 1 0 0 0 1 0 0 0 0 0 0 0 0 
218 28 1 1 0 0 1 0 0 0 0 1 1 0 345624 
221 29 1 0 0 0 2 0 0 0 0 1 0 0 0 
222 29 0 0 0 0 0 0 0 0 0 0 0 0 0 
225 30 1 0 0 0 1 0 0 0 0 0 0 0 0 
226 30 1 0 0 0 1 0 0 0 0 1 0 0 0 
227 30 1 0 0 0 1 0 0 0 0 0 0 0 0 
230 30 1 0 0 0 3 0 0 0 0 3 0 0 0 
231 30 1 0 0 0 3 0 0 0 0 0 0 0 0 
232 30 1 0 0 0 3 0 0 0 0 3 0 0 0 
233 31 1 0 0 0 3 0 0 0 0 0 0 0 0 
236 31 1 0 0 0 3 0 0 0 0 3 0 0 0 
237 31 1 0 0 0 3 0 0 0 0 0 0 0 0 
238 31 1 0 0 0 3 0 0 0 0 3 0 0 0 


This is the critical path for program 64:
[63] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv20 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 20)
         (Eq false (Slt 0 N0))]
        false)


--- Program 95 ---
[run.istats content]
version: 1
creator: klee
pid: 9023
cmd: 65.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=65.c
fn=main
13 5 1 0 0 0 1 33 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 32 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 31 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 30 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 29 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 28 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 26 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 24 0 0 0 1 0 0 0 
21 7 1 0 0 0 1 23 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 22 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 20 0 0 0 1 0 0 0 
24 8 1 0 0 0 1 19 0 0 0 0 0 0 0 
25 8 1 1 0 0 1 18 0 0 0 1 2 0 21500 
28 8 1 0 0 0 1 20 0 0 0 1 0 0 0 
29 8 1 0 0 0 1 19 0 0 0 0 0 0 0 
30 5 1 0 0 0 1 18 0 0 0 0 0 0 0 
33 0 1 0 0 0 2 17 0 0 0 0 0 0 0 
34 8 1 0 0 0 2 16 0 0 0 0 0 0 0 
35 8 1 0 0 0 2 15 0 0 0 0 0 0 0 
36 8 1 0 0 0 2 14 0 0 0 3 0 0 0 
37 9 1 0 0 0 1 12 0 0 0 1 0 0 0 
38 9 1 0 0 0 1 11 0 0 0 0 0 0 0 
39 9 1 0 0 0 1 10 0 0 0 1 0 0 0 
40 10 1 0 0 0 1 9 0 0 0 1 0 0 0 
41 10 1 0 0 0 1 8 0 0 0 0 0 0 0 
42 10 1 0 0 0 1 7 0 0 0 1 0 0 0 
43 10 1 0 0 0 1 6 0 0 0 0 0 0 0 
44 10 1 0 0 0 1 5 0 0 0 1 0 0 0 
45 11 1 0 0 0 1 4 0 0 0 1 0 0 0 
46 11 1 0 0 0 1 3 0 0 0 0 0 0 0 
47 11 1 0 0 0 1 2 0 0 0 1 0 1 13349 
50 11 1 0 0 0 1 4 0 0 0 1 0 0 0 
51 11 1 0 0 0 1 3 0 0 0 0 0 0 0 
52 11 1 0 0 0 1 2 0 0 0 1 1 1 11685 
55 12 0 0 0 0 0 1 0 0 1 0 0 0 0 
56 12 0 0 0 0 0 0 0 0 0 0 0 0 0 
59 13 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 65:
[64] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
(query [] false)


--- Program 96 ---
[run.istats content]
version: 1
creator: klee
pid: 10011
cmd: 77.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=77.c
fn=main
12 3 1 0 0 0 1 39 0 0 0 0 0 0 0 
13 3 1 0 0 0 1 38 0 0 0 0 0 0 0 
14 3 1 0 0 0 1 37 0 0 0 0 0 0 0 
15 3 1 0 0 0 1 36 0 0 0 0 0 0 0 
16 3 1 0 0 0 1 35 0 0 0 1 0 0 0 
17 4 1 0 0 0 1 34 0 0 0 0 0 0 0 
18 4 1 0 0 0 1 32 0 0 0 0 0 0 0 
19 4 1 0 0 0 1 30 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 28 0 0 0 0 0 0 0 
21 5 1 0 0 0 1 27 0 0 0 2 0 0 0 
22 6 1 0 0 0 1 25 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 24 0 0 0 2 0 0 0 
24 7 1 0 0 0 1 22 0 0 0 1 0 0 0 
25 7 1 0 0 0 1 21 0 0 0 0 0 0 0 
26 7 1 1 0 0 1 20 0 0 0 1 2 0 23783 
29 7 1 0 0 0 1 22 0 0 0 1 0 0 0 
30 7 1 0 0 0 1 21 0 0 0 0 0 0 0 
31 3 1 0 0 0 1 20 0 0 0 0 0 0 0 
34 0 1 0 0 0 2 19 0 0 0 0 0 0 0 
35 7 1 0 0 0 2 18 0 0 0 0 0 0 0 
36 7 1 0 0 0 2 17 0 0 0 0 0 0 0 
37 7 1 0 0 0 2 16 0 0 0 3 0 0 0 
38 8 1 0 0 0 1 14 0 0 0 1 0 0 0 
39 8 1 0 0 0 1 13 0 0 0 0 0 0 0 
40 8 1 0 0 0 1 12 0 0 0 1 0 0 0 
41 9 1 0 0 0 1 11 0 0 0 0 0 0 0 
42 9 1 0 0 0 1 9 0 0 0 1 0 0 0 
43 9 1 0 0 0 1 8 0 0 0 0 0 0 0 
46 9 1 0 0 0 31 7 0 0 0 31 0 0 0 
47 9 1 0 0 0 31 6 0 0 0 0 0 0 0 
48 9 1 0 0 0 31 5 0 0 0 31 0 0 0 
49 9 1 0 0 0 31 4 0 0 0 0 0 0 0 
50 9 1 0 0 0 31 3 0 0 0 31 0 0 0 
51 9 1 0 0 0 31 2 0 0 0 0 0 0 0 
52 9 1 30 0 0 31 1 0 0 0 31 30 1 307826 
55 10 1 0 0 0 30 23 0 0 0 30 0 0 0 
56 10 1 0 0 0 30 22 0 0 0 30 0 0 0 
57 10 1 0 0 0 30 21 0 0 0 0 0 0 0 
58 10 1 0 0 0 30 20 0 0 0 30 0 0 0 
59 10 1 0 0 0 30 19 0 0 0 0 0 0 0 
60 10 1 0 0 0 30 18 0 0 0 30 0 0 0 
61 10 1 0 0 0 30 17 0 0 0 0 0 0 0 
64 10 1 0 0 0 31 16 0 0 0 31 0 0 0 
65 10 1 0 0 0 31 15 0 0 0 0 0 0 0 
66 10 1 0 0 0 31 14 0 0 0 31 0 0 0 
67 10 1 0 0 0 31 13 0 0 0 0 0 0 0 
68 10 1 0 0 0 31 12 0 0 0 0 0 0 0 
69 10 1 0 0 0 31 11 0 0 0 0 0 0 0 
72 11 1 0 0 0 31 10 0 0 0 31 0 0 0 
73 11 1 0 0 0 31 9 0 0 0 0 0 0 0 
74 11 1 0 0 0 31 8 0 0 0 0 0 0 0 
75 11 1 0 0 0 31 7 0 0 0 31 0 0 0 
76 11 1 0 0 0 31 6 0 0 0 0 0 0 0 
77 11 1 0 0 0 31 5 0 0 0 0 0 0 0 
78 11 1 0 0 0 31 4 0 0 0 31 0 0 0 
79 11 1 0 0 0 31 3 0 0 0 0 0 0 0 
80 11 1 0 0 0 31 2 0 0 0 31 0 31 302095 
83 12 1 0 0 0 2 8 0 0 0 0 0 0 0 
84 12 1 0 0 0 2 7 0 0 0 2 0 0 0 
85 12 1 0 0 0 2 6 0 0 0 0 0 0 0 
88 13 1 0 0 0 31 5 0 0 0 31 0 0 0 
89 13 1 0 0 0 31 4 0 0 0 0 0 0 0 
90 13 1 0 0 0 31 3 0 0 0 31 0 0 0 
91 13 1 0 0 0 31 2 0 0 0 0 0 0 0 
92 13 1 0 0 0 31 1 0 0 0 0 0 0 0 
95 15 1 0 0 0 31 0 0 0 0 31 0 0 0 


This is the critical path for program 77:
[76] Most complex (longest) path file: test000024.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (=  false (bvsle  (_ bv1 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Eq false (Sle 1 N0))]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (=  false (bvsle  (_ bv1 32) ?B1 ) ) ) (=  false (bvsle  (_ bv2 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Eq false (Sle 1 N0))
         (Eq false (Sle 2 N0))]
        false)


Test case: test000004
[Parsed from .ktest]
var n int 2
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (=  false (bvsle  (_ bv1 32) ?B1 ) ) ) (=  false (bvsle  (_ bv2 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Eq false (Sle 1 N0))
         (Eq false (Sle 2 N0))
         (Eq false (Sle 3 N0))]
        false)


Test case: test000005
[Parsed from .ktest]
var n int 3
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (and  (=  false (bvsle  (_ bv1 32) ?B1 ) ) (=  false (bvsle  (_ bv2 32) ?B1 ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Eq false (Sle 1 N0))
         (Eq false (Sle 2 N0))
         (Sle 3 N0)]
        false)


Test case: test000006
[Parsed from .ktest]
var n int 4
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (and  (=  false (bvsle  (_ bv1 32) ?B1 ) ) (bvsle  (_ bv2 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Eq false (Sle 1 N0))
         (Sle 2 N0]
        false)


Test case: test000007
[Parsed from .ktest]
var n int 7
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (and  (bvsle  (_ bv1 32) ?B1 ) (bvsle  (_ bv2 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Sle 1 N0)
         (Sle 2 N0)]
        false)


Test case: test000008
[Parsed from .ktest]
var n int 8
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv31 32) ) ) (and  (bvsle  (_ bv1 32) ?B1 ) (bvsle  (_ bv2 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 31)
         (Sle 1 N0)
         (Sle 2 N0)]
        false)

--- Program 97 ---
[run.istats content]
version: 1
creator: klee
pid: 9987
cmd: 72.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=72.c
fn=main
16 5 1 0 0 0 1 29 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 28 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 27 0 0 0 0 0 0 0 
19 5 1 0 0 0 1 26 0 0 0 0 0 0 0 
20 5 1 0 0 0 1 25 0 0 0 1 0 0 0 
21 6 1 0 0 0 1 24 0 0 0 0 0 0 0 
22 6 1 0 0 0 1 22 0 0 0 0 0 0 0 
23 6 1 0 0 0 1 20 0 0 0 0 0 0 0 
24 7 1 0 0 0 1 18 0 0 0 0 0 0 0 
25 7 1 0 0 0 1 17 0 0 0 2 1 0 19147 
26 8 1 0 0 0 1 15 0 0 0 0 0 0 0 
27 8 1 0 0 0 1 14 0 0 0 2 0 0 16393 
28 9 1 0 0 0 1 12 0 0 0 1 0 0 0 
29 9 1 0 0 0 1 11 0 0 0 1 0 0 0 
30 9 1 0 0 0 1 10 0 0 0 1 0 0 0 
31 9 1 0 0 0 1 9 0 0 0 0 0 0 0 
32 9 1 0 0 0 1 8 0 0 0 1 0 0 0 
33 10 1 0 0 0 1 7 0 0 0 1 0 0 0 
34 10 1 0 0 0 1 6 0 0 0 1 0 0 0 
35 10 1 0 0 0 1 5 0 0 0 1 0 0 0 
36 10 1 0 0 0 1 4 0 0 0 0 0 0 0 
37 10 1 0 0 0 1 3 0 0 0 1 0 0 0 
38 10 1 0 0 0 1 2 0 0 0 0 0 0 0 
39 10 1 1 0 0 1 1 0 0 0 1 1 0 12074 
42 11 1 0 0 0 1 7 0 0 0 1 0 0 0 
43 11 1 0 0 0 1 6 0 0 0 1 0 0 0 
44 11 1 0 0 0 1 5 0 0 0 1 0 0 0 
45 11 1 0 0 0 1 4 0 0 0 0 0 0 0 
46 11 1 0 0 0 1 3 0 0 0 1 0 0 0 
47 11 1 0 0 0 1 2 0 0 0 0 0 0 0 
50 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
51 12 1 0 0 0 2 0 0 0 0 2 0 0 0 
52 12 1 0 0 0 2 0 0 0 0 0 0 0 0 
55 13 1 0 0 0 1 0 0 0 0 1 0 0 0 
fl=runtime/Intrinsic/klee_overshift_check.c
fn=klee_overshift_check
72 16 1 0 0 0 1 32 0 0 0 0 0 0 0 
73 16 1 0 0 0 1 31 0 0 0 0 0 0 0 
74 16 1 0 0 0 1 30 0 0 0 0 0 0 0 
75 16 1 0 0 0 1 29 0 0 0 1 0 0 0 
76 17 1 0 0 0 1 27 0 0 0 0 0 0 0 
77 17 1 0 0 0 1 25 0 0 0 1 0 0 0 
78 18 1 0 0 0 1 23 0 0 0 0 0 0 0 
79 18 1 0 0 0 1 21 0 0 0 1 0 0 0 
80 18 1 0 0 0 1 20 0 0 0 0 0 0 0 
83 18 1 0 0 0 11 19 0 0 0 11 0 0 0 
84 18 1 0 0 0 11 18 0 0 0 0 0 0 0 
85 18 1 0 0 0 11 17 0 0 0 11 0 0 0 
86 18 1 0 0 0 11 16 0 0 0 0 0 0 0 
87 18 1 0 0 0 11 15 0 0 0 11 0 0 0 
88 19 1 0 0 0 11 13 0 0 0 11 0 0 0 
89 19 1 0 0 0 11 12 0 0 0 0 0 0 0 
90 19 1 0 0 0 11 11 0 0 0 11 0 0 0 
91 19 1 0 0 0 11 10 0 0 0 0 0 0 0 
cfn=main
calls=11 10 5
91 19 35 1 0 0 12074 1 36 0 0 1 12 2 0 
92 19 1 0 0 0 2 0 0 0 0 2 0 0 0 
93 20 1 0 0 0 2 0 0 0 0 2 0 0 0 
94 20 1 0 0 0 2 0 0 0 0 0 0 0 0 
97 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
98 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
99 18 1 0 0 0 2 0 0 0 0 2 0 0 0 
100 18 1 0 0 0 2 0 0 0 0 0 0 0 0 
103 22 1 0 0 0 11 19 0 0 0 0 0 0 0 
104 22 1 0 0 0 11 18 0 0 0 11 0 0 0 
105 22 1 0 0 0 11 17 0 0 0 0 0 0 0 
106 22 1 0 0 0 11 16 0 0 0 11 0 0 0 
107 22 1 0 0 0 11 15 0 0 0 0 0 0 0 
108 22 1 0 0 0 11 14 0 0 0 11 0 0 0 
109 22 1 0 0 0 11 13 0 0 0 0 0 0 0 
112 23 1 0 0 0 11 9 0 0 0 11 0 0 0 
113 23 1 0 0 0 11 8 0 0 0 0 0 0 0 
114 23 1 0 0 0 11 7 0 0 0 11 0 0 0 
115 23 1 0 0 0 11 6 0 0 0 0 0 0 0 
116 23 1 0 0 0 11 5 0 0 0 0 0 0 0 
117 23 1 0 0 0 11 4 0 0 0 0 0 0 0 
118 23 1 0 0 0 11 3 0 0 0 11 0 0 0 
119 23 1 0 0 0 11 2 0 0 0 0 0 0 0 
122 24 1 0 0 0 11 1 0 0 0 11 0 0 0 
123 24 1 0 0 0 11 0 0 0 0 0 0 0 0 
126 18 1 0 0 0 11 19 0 0 0 11 0 0 0 
127 18 1 0 0 0 11 18 0 0 0 0 0 0 0 
128 18 1 0 0 0 11 17 0 0 0 0 0 0 0 
129 18 1 0 0 0 11 16 0 0 0 11 0 0 0 
130 18 1 0 0 0 11 15 0 0 0 0 0 0 0 
131 18 1 0 0 0 11 14 0 0 0 11 0 0 0 
132 18 1 0 0 0 11 13 0 0 0 0 0 0 0 
135 25 1 0 0 0 20 12 0 0 0 20 0 0 0 
136 25 1 0 0 0 20 11 0 0 0 0 0 0 0 
137 25 1 0 0 0 20 10 0 0 0 20 0 0 0 
138 25 1 0 0 0 20 9 0 0 0 0 0 0 0 
139 25 1 0 0 0 20 8 0 0 0 0 0 0 0 
140 25 1 0 0 0 20 7 0 0 0 0 0 0 0 
141 25 1 0 0 0 20 6 0 0 0 20 0 0 0 
142 25 1 0 0 0 20 5 0 0 0 0 0 0 0 
143 25 1 0 0 0 20 4 0 0 0 0 0 0 0 
144 25 1 0 0 0 20 3 0 0 0 0 0 0 0 
145 25 1 0 0 0 20 2 0 0 0 20 0 20 83131 
148 27 0 0 0 0 0 1 0 0 1 0 0 0 0 
149 27 0 0 0 0 0 0 0 0 0 0 0 0 0 
152 18 1 0 0 0 20 0 0 0 0 20 0 0 0 


This is the critical path for program 72:
[71] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var input int 0
var transitions int 1
[.smt2 content]
(set-logic QF_AUFBV )
(assert true)
(check-sat)
(exit)

[.kquery content]
(query [] false)


--- Program 98 ---
[run.istats content]
version: 1
creator: klee
pid: 6976
cmd: 40.bc


positions: instr line
39 5
40 5
41 5
42 5
43 5
44 5
45 5
46 5
47 5
48 5
49 6
50 6
51 6
52 6
53 6
54 6
55 7
56 7
57 7
58 7
59 7
60 7
61 8
62 8
63 8
64 8
65 8
66 8
67 9
68 9
69 9
70 9
71 9
72 9
73 10
74 10
75 10
76 10
77 10
78 10
79 11
80 11
81 11
82 11
83 11
84 11
85 12
86 12
87 12
88 12
89 12
90 12
91 13
92 13
93 13
94 13
95 13
96 13
97 14
98 14
99 14
100 14
101 14
102 14
103 15
104 15
105 15
106 15
107 15
108 15
109 16
110 16
111 16
112 16
113 16
114 16
115 17
116 17
117 17
118 17
119 17
120 17
121 18
122 18
123 18
124 18
125 18
126 18
127 19
128 19
129 19
130 19
131 19
132 19
133 20
134 20
135 20
136 20
137 20
138 20
139 21
140 21
141 21
142 21
143 21
144 21
145 22
146 22
147 22
148 22
149 22
150 22
151 23
152 23
153 23
154 23
155 23
156 23
157 24
158 24
159 24
160 24
161 24
162 24
163 25
164 25
165 25
166 25
167 25
168 25
169 26
170 26
171 26
172 26
173 26
174 26
175 27
176 27
177 27
178 27
179 27
180 27
181 28
182 28
183 28
184 28
185 28
186 28
187 29
188 29
189 29
190 29
191 29
192 29
193 30
194 30
195 30
196 30
197 30
198 30
199 31
200 31
201 31
202 31
203 31
204 31
205 32
206 32
207 32
208 32
209 32
210 32
211 33
212 33
213 33
214 33
215 33
216 33
217 34
218 34
219 34
220 34
221 34
222 34
223 35
224 35
225 35
226 35
227 35
228 35
229 36
230 36
231 36
232 36
233 36
234 36
235 37
236 37
237 37
238 37
239 37
240 37
241 38
242 38
243 38
244 38
245 38
246 38
247 248
248 38
249 38
250 38
251 38
252 38
253 37
254 37
255 37
256 37
257 37
258 37
259 36
260 36
261 36
262 36
263 36
264 36
265 35
266 35
267 35
268 35
269 35
270 35
271 34
272 34
273 34
274 34
275 34
276 34
277 33
278 33
279 33
280 33
281 33
282 33
283 32
284 32
285 32
286 32
287 32
288 32
289 31
290 31
291 31
292 31
293 31
294 31
295 30
296 30
297 30
298 30
299 30
300 30
301 29
302 29
303 29
304 29
305 29
306 29
307 28
308 28
309 28
310 28
311 28
312 28
313 27
314 27
315 27
316 27
317 27
318 27
319 25
320 25
321 25
322 25
323 25
324 22
327 22
328 22
329 22
330 22
331 22
332 19
335 19
336 19
337 19
338 19
339 19
340 18
343 18
344 18
345 18
346 18
347 18
348 17
351 17
352 17
353 17
354 17
355 17
356 16
359 16
360 16
361 16
362 16
363 16
364 15
367 15
368 15
369 15
370 15
371 15
372 5
375 5
376 5
377 5
378 5
379 5
380 5
381 5
382 5
383 5
384 5
385 5
386 5
387 5
388 5
389 5
390 5
391 5
392 5
393 5
394 5
395 5
396 5
397 5
398 5
399 5
400 5
401 5
402 5
403 5
404 5
405 5
406 5
407 5
408 5
409 5
410 5
411 5
412 5
413 5
414 5
415 5
416 5
417 5
418 5
419 5
420 5
421 5
422 5
423 5
424 5
425 5
426 5
427 5
428 5
429 5
430 5
431 5
432 5
433 5
434 5
435 5
436 5
437 5
438 5
439 5
440 5
441 5
442 5
443 5
444 5
445 5
446 5
447 5
448 5
449 5
450 5
451 5
452 5
453 5
454 5
455 5
456 5
457 5
458 5
459 5
460 5
461 5
462 5
463 5
464 5
465 5
466 5
467 5
468 5
469 5
470 5
471 6
472 6
473 6
474 6
475 6
476 6
477 6
478 6
479 6
480 6
481 6
482 6
483 6
484 6
485 6
486 6
487 6
488 6
489 6
490 6
491 6
492 7
493 7
494 7
495 7
496 7
497 7
498 7
499 7
500 7
501 7
502 7
503 7
504 7
505 7
506 7
507 7
508 7
509 7
510 7
511 7
512 7
513 7
514 8
515 8
516 8
517 8
518 8
519 8
520 8
521 8
522 8
523 8
524 8
525 8
526 8
527 8
528 8
529 8
530 8
531 8
532 8
533 8
534 8
535 8
536 8
537 8
538 8
539 8
540 8
541 8
542 8
543 9
544 9
545 9
546 9
547 9
548 9
549 10
550 10
551 10
552 10
553 10
554 10
555 10
556 10
557 10
558 10
559 10
560 10
561 10
562 10
563 10
564 10
565 10
566 10
567 10
568 10
569 10
570 10
571 10
572 10
573 10
574 10
575 10
576 11
577 11
578 11
579 11
580 11
581 11
582 11
583 11
584 11
585 11
586 11
587 11
588 11
589 11
590 11
591 11
592 11
593 11
594 11
595 11
596 11
597 11
598 11
599 11
600 11
601 12
602 12
603 12
604 12
605 12
606 12
607 12
608 12
609 12
610 12
611 12
612 12
613 12
614 12
615 12
616 12
617 12
618 12
619 12
620 12
621 12
622 12
623 12
624 12
625 12
626 12
627 12
628 12
629 12
630 12
631 12
632 12
633 12
634 12
635 12
636 12
637 12
638 12
639 12
640 12
641 12
642 12
643 14
646 14
647 14
648 14
649 14
650 14
651 14
652 14
653 14
654 14
655 14
656 14
657 14
658 14
659 14
660 14
661 14
662 14
663 14
664 14
665 14
666 22
669 22
670 22
671 22
672 22
673 22
674 22
675 22
676 22
677 22
678 22
679 22
680 22
681 22
682 22
683 22
684 22
685 22
686 22
687 22
688 22
689 22
690 22
691 22
692 22
693 22
694 22
695 22
696 22
697 22
698 22
699 22
700 22
701 22
702 22
703 22
704 22
705 22
706 22
707 22
708 22
709 22
710 22
711 22
712 22
713 22
714 22
715 22
716 22
717 22
718 22
719 22
720 22
721 22
722 22
723 22
724 22
725 22
726 22
727 22
728 22
729 22
730 22
731 22
732 22
733 22
734 22
735 22
736 22
737 22
738 22
739 22
740 22
741 22
742 22
743 22
744 22
745 22
746 22
747 22
748 22
749 22
750 22
751 22
752 22
753 22
754 22
755 22
756 22
757 22
758 22
759 22
760 22
761 22
762 22
763 22
764 22
765 22
766 22
767 22
768 22
769 22
770 22
771 22
772 22
773 22
774 22
775 22
776 22
777 22
778 22
779 22
780 22
781 22
782 22
783 22
784 22
785 22
786 22
787 22
788 22
789 22
790 22
791 22
792 22
793 22
794 22
795 22
796 22
797 22
798 22
799 22
800 22
801 22
802 22
803 22
804 22
805 22
806 22
807 22
808 22
809 22
810 22
811 22
812 22
813 22
814 22
815 22
816 22
817 22
818 22
819 22
820 22
821 22
822 22
823 22
824 22
825 22
826 22
827 22
828 22
829 22
830 22
831 22
832 22
833 22
834 22
835 22
836 22
837 22
838 22
839 22
840 22
841 22
842 22
843 22
844 22
845 22
846 22
847 22
848 22
849 22
850 22
851 22
852 22
853 22
854 22
855 22
856 22
857 22
858 22
859 22
860 22
861 22
862 22
863 22
864 22
865 22
866 22
867 22
868 22
869 22
870 22
871 22
872 22
873 22
874 22
875 22
876 22
877 22
878 22
879 22
880 22
881 22
882 22
883 22
884 22
885 22
886 22
887 22
888 22
889 22
890 22
891 22
892 22
893 22
894 22
895 22
896 22
897 22
898 22
899 22
900 22
901 22
902 22
903 22
904 18
907 18
908 18
909 18
910 18
911 18
912 18
913 18
914 18
915 18
916 18
917 18
918 18
919 18
920 18
921 18
922 18
923 18
924 18
925 18
926 18
927 18
928 18
929 18
930 18
931 18
932 18
933 18
934 18
935 18
936 18
937 18
938 18
939 18
940 18
941 18
942 18
943 18
944 18
945 18
946 18
947 18
948 18
949 18
950 24
953 24
954 24
955 24
956 24
957 24
958 24
959 24
960 24
961 24
962 24
963 24
964 24
965 24
966 24
967 24
968 24
969 24
970 24
971 24
972 24
973 24
974 24
975 24
976 24
977 24
978 24
979 24
980 24
981 24
982 24
983 24
984 24
985 24
986 24
987 24
988 24
989 24
990 24
991 24
992 24
993 24
994 24
995 24
996 24
997 24
998 24
999 24
1000 24
1001 24
1002 24
1003 24
1004 24
1005 24
1006 24
1007 24
1008 24
1009 24
1010 24
1011 24
1012 24
1013 24
1014 24
1015 24
1016 24
1017 24
1018 24
1019 24
1020 24
1021 24
1022 24
1023 24
1024 24
1025 24
1026 24
1027 24
1028 24
1029 24
1030 24
1031 24
1032 24
1033 24
1034 24
1035 24
1036 24
1037 24
1038 24
1039 24
1040 24
1041 24
1042 24
1043 24
1044 24
1045 24
1046 24
1047 24
1048 24
1049 24
1050 24
1051 24
1052 24
1053 24
1054 24
1055 24
1056 24
1057 24
1058 24
1059 24
1060 24
1061 24
1062 24
1063 24
1064 24
1065 24
1066 24
1067 24
1068 24
1069 24
1070 24
1071 24
1072 24
1073 24
1074 24
1075 24
1076 24
1077 24
1078 24
1079 24
1080 24
1081 24
1082 24
1083 24
1084 24
1085 24
1086 24
1087 24
1088 24
1089 24
1090 24
1091 24
1092 24
1093 24
1094 24
1095 24
1096 24
1097 24
1098 24
1099 24
1100 24
1101 24
1102 24
1103 24
1104 24
1105 24
1106 24
1107 24
1108 24
1109 24
1110 22
1113 22
1114 22
1115 22
1116 22
1117 22
1118 22
1119 22
1120 22
1121 22
1122 22
1123 22
1124 22
1125 22
1126 22
1127 22
1128 22
1129 22
1130 22
1131 22
1132 22
1133 22
1134 22
1135 22
1136 22
1137 22
1138 22
1139 22
1140 22
1141 22
1142 22
1143 22
1144 22
1145 22
1146 22
1147 22
1148 22
1149 22
1150 22
1151 22
1152 22
1153 22
1154 22
1155 22
1156 22
1157 22
1158 22
1159 22
1160 22
1161 22
1162 22
1163 22
1164 22
1165 22
1166 22
1167 22
1168 22
1169 22
1170 22
1171 22
1172 22
1173 22
1174 22
1175 22
1176 22
1177 22
1178 22
1179 22
1180 22
1181 22
1182 22
1183 22
1184 22
1185 22
1186 22
1187 22
1188 22
1189 22
1190 22
1191 22
1192 22
1193 22
1194 22
1195 22
1196 22
1197 22
1198 22
1199 22
1200 22
1201 22
1202 22
1203 22
1204 22
1205 22
1206 22
1207 22
1208 22
1209 22
1210 22
1211 22
1212 22
1213 22
1214 22
1215 22
1216 22
1217 22
1218 22
1219 22
1220 22
1221 22
1222 22
1223 22
1224 22
1225 22
1226 22
1227 22
1228 22
1229 22
1230 22
1231 22
1232 22
1233 22
1234 22
1235 22
1236 22
1237 22
1238 22
1239 22
1240 22
1241 22
1242 22
1243 22
1244 22
1245 22
1246 22
1247 22
1248 22
1249 22
1250 22
1251 22
1252 22
1253 22
1254 22
1255 22
1256 22
1257 22
1258 22
1259 22
1260 22
1261 22
1262 22
1263 22
1264 22
1265 22
1266 22
1267 22
1268 22
1269 22
1270 22
1271 22
1272 22
1273 22
1274 22
1275 22
1276 22
1277 22
1278 22
1279 22
1280 22
1281 22
1282 22
1283 22
1284 22
1285 22
1286 22
1287 22
1288 22
1289 22
1290 22
1291 22
1292 22
1293 22
1294 22
1295 22
1296 22
1297 22
1298 22
1299 22
1300 22
1301 22
1302 22
1303 22
1304 22
1305 22
1306 22
1307 22
1308 22
1309 22
1310 22
1311 22
1312 22
1313 22
1314 22
1315 22
1316 22
1317 22
1318 22
1319 22
1320 22
1321 22
1322 22
1323 22
1324 22
1325 22
1326 22
1327 22
1328 22
1329 22
1330 22
1331 22
1332 22
1333 22
1334 22
1335 22
1336 22
1337 22
1338 22
1339 22
1340 22
1341 22
1342 22
1343 22
1344 22
1345 22
1346 22
1347 22
1348 22
1349 22
1350 22
1351 22
1352 22
1353 22
1354 22
1355 22
1356 22
1357 22
1358 22
1359 22
1360 22
1361 22
1362 22
1363 22
1364 22
1365 22
1366 22
1367 22
1368 22
1369 22
1370 22
1371 22
1372 22
1373 22
1374 24
1375 24
1376 24
1377 24
1378 24
1379 24
1380 24
1381 24
1382 24
1383 24
1384 24
1385 24
1386 24
1387 24
1388 24
1389 24
1390 24
1391 24
1392 24
1393 24
1394 24
1395 24
1396 24
1397 24
1398 24
1399 24
1400 24
1401 24
1402 24
1403 24
1404 24
1405 24
1406 24
1407 24
1408 24
1409 24
1410 24
1411 24
1412 24
1413 24
1414 24
1415 9
1418 9
1419 9
1420 9
1421 9
1422 9
1423 9
1424 9
1425 9
1426 9
1427 9
1428 9
1429 9
1430 9
1431 9
1432 9
1433 9
1434 9
1435 10
1436 10
1437 10
1438 10
1439 10
1440 10
1441 10
1442 10
1443 10
1444 10
1445 10
1446 10
1447 10
1448 10
1449 10
1450 10
1451 10
1452 10
1453 10
1454 12
1455 12
1456 12
1457 12
1458 12
1459 12
1460 12
1461 12
1462 12
1463 12
1464 12
1465 12
1466 12
1467 12
1468 12
1469 12
1470 12
1471 12
1472 12
1473 12
1474 12
1475 12
1476 12
1477 12
1478 12
1479 12
1480 12
1481 12
1482 12
1483 12
1484 12
1485 12
1486 12
1487 12
1488 12
1489 12
1490 12
1491 12
1492 12
1493 12
1494 13
1495 13
1496 13
1497 13
1498 13
1499 13
1500 13
1501 13
1502 13
1503 13
1504 13
1505 13
1506 13
1507 13
1508 13
1509 13
1510 13
1511 13
1512 13
1513 13
1514 13
1515 14
1516 14
1517 14
1518 14
1519 14
1520 14
1521 14
1522 14
1523 14
1524 14
1525 14
1526 14
1527 14
1528 14
1529 14
1530 14
1531 14
1532 14
1533 14
1534 14
1535 14
1536 14
1537 14
1538 14
1539 14
1540 14
1541 14
1542 14
1543 10
1546 10
1547 10
1548 10
1549 10
1550 10
1551 10
1552 10
1553 10
1554 10
1555 10
1556 10
1557 10
1558 10
1559 10
1560 10
1561 10
1562 10
1563 10
1564 15
1565 15
1566 15
1567 15
1568 15
1569 15
1570 15
1571 15
1572 15
1573 15
1574 15
1575 15
1576 15
1577 15
1578 15
1579 15
1580 15
1581 15
1582 15
1583 15
1584 15
1585 15
1586 15
1587 15
1588 15
1589 15
1590 15
1591 15
1592 15
1593 15
1594 15
1595 15
1596 15
1597 15
1598 15
1599 15
1600 15
1601 15
1602 15
1603 15
1604 15
1605 15
1606 15
1607 15
1608 15
1609 6
1612 6
1613 6
1614 6
1615 6
1616 6
1617 6
1618 6
1619 6
1620 6
1621 6
1622 6
1623 6
1624 6
1625 6
1626 6
1629 6
1630 6
1631 6
1632 6
1633 6
1634 6
1635 6
1636 6
1637 6
1638 6
1639 6
1640 6
1641 6
1642 22
1643 22
1644 22
1645 22
1646 22
1647 22
1648 22
1649 22
1650 22
1651 22
1652 22
1653 22
1654 22
1655 22
1656 22
1657 22
1658 22
1659 22
1660 22
1661 22
1662 22
1663 22
1664 22
1665 22
1666 22
1667 22
1668 22
1669 22
1670 22
1671 22
1672 22
1673 22
1674 22
1675 22
1676 22
1677 22
1678 22
1679 22
1680 22
1681 22
1682 22
1683 22
1684 22
1685 22
1686 22
1687 22
1688 22
1689 22
1690 22
1691 22
1692 22
1693 22
1694 22
1695 22
1696 22
1697 22
1698 22
1699 22
1700 22
1701 22
1702 22
1703 22
1704 22
1705 22
1706 22
1707 22
1708 22
1709 22
1710 22
1711 22
1712 22
1713 10
1716 10
1717 10
1718 10
1719 10
1720 10
1721 10
1722 10
1723 10
1724 10
1725 10
1726 10
1727 10
1728 10
1729 10
1730 10
1731 10
1732 10
1733 10
1734 12
1735 12
1736 12
1737 12
1738 12
1739 12
1740 12
1741 12
1742 12
1743 12
1744 12
1745 12
1746 12
1747 12
1748 12
1749 12
1750 12
1751 12
1752 12
1753 12
1754 12
1755 12
1756 12
1757 12
1758 12
1759 12
1760 12
1761 12
1762 12
1763 12
1764 12
1765 12
1766 12
1767 12
1768 12
1769 12
1770 12
1771 12
1772 12
1773 12
1774 12
1775 12
1776 12
1777 12
1778 12
1779 12
1780 12
1781 12
1782 12
1783 12
1784 12
1785 12
1786 12
1787 12
1788 12
1789 12
1790 12
1791 12
1792 12
1793 12
1794 12
1795 12
1796 12
1797 12
1798 12
1799 12
1800 12
1801 12
1802 12
1803 22
1804 22
1805 22
1806 22
1807 22
1808 22
1809 22
1810 22
1811 22
1812 22
1813 22
1814 22
1815 22
1816 22
1817 22
1818 22
1819 22
1820 22
1821 22
1822 22
1823 22
1824 22
1825 22
1826 22
1827 22
1828 22
1829 22
1830 22
1831 22
1832 22
1833 22
1834 22
1835 22
1836 22
1837 22
1838 22
1839 22
1840 22
1841 22
1842 22
1843 22
1844 22
1845 22
1846 22
1847 22
1848 22
1849 22
1850 22
1851 22
1852 22
1853 22
1854 22
1855 22
1856 22
1857 22
1858 22
1859 22
1860 22
1861 22
1862 22
1863 22
1864 22
1865 22
1866 22
1867 22
1868 22
1869 22
1870 22
1871 22
1872 22
1873 22
1874 22
1875 22
1876 22
1877 22
1878 22
1879 22
1880 22
1881 22
1882 22
1883 22
1884 24
1885 24
1886 24
1887 24
1888 24
1889 24
1890 24
1891 24
1892 24
1893 24
1894 24
1895 24
1896 24
1897 24
1898 24
1899 24
1900 24
1901 24
1902 24
1903 24
1904 24
1905 24
1906 24
1907 24
1908 24
1909 24
1910 24
1911 24
1912 24
1913 24
1914 24
1915 24
1916 24
1917 24
1918 24
1919 24
1920 24
1921 24
1922 24
1923 24
1924 24
1925 24
1926 24
1927 24
1928 24
1929 24
1930 24
1931 24
1932 24
1933 24
1934 24
1935 24
1936 24
1937 24
1938 24
1939 24
1940 24
1941 24
1942 24
1943 24
1944 24
1945 24
1946 24
1947 24
1948 24
1949 24
1950 17
1953 17
1954 17
1955 17
1956 17
1957 17
1958 17
1959 17
1960 17
1961 17
1962 17
1963 17
1964 17
1965 17
1966 17
1967 17
1968 17
1969 17
1970 17
1971 17
1972 17
1973 17
1974 17
1975 18
1976 18
1977 18
1978 18
1979 18
1980 18
1981 18


This is the critical path for program 40:
[39] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var steps int 1
var step int 0
[.smt2 content]
(set-logic QF_AUFBV )
(assert true )
(check-sat)
(exit)

[.kquery content]
(query [] false)


--- Program 99 ---
[run.istats content]
version: 1
creator: klee
pid: 61504
cmd: 23.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=23.c
fn=main
14 5 1 0 0 0 1 32 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 31 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 30 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 29 0 0 0 1 0 0 0 
18 6 1 0 0 0 1 28 0 0 0 0 0 0 0 
19 6 1 0 0 0 1 26 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 24 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 22 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 21 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 19 0 0 0 0 0 0 0 
24 8 1 0 0 0 1 18 0 0 0 2 0 0 0 
25 9 1 0 0 0 1 16 0 0 0 1 0 0 0 
26 9 1 0 0 0 1 15 0 0 0 0 0 0 0 
27 9 1 1 0 0 1 14 0 0 0 1 2 0 25826 
30 9 1 0 0 0 1 16 0 0 0 1 0 0 0 
31 9 1 0 0 0 1 15 0 0 0 0 0 0 0 
32 5 1 0 0 0 1 14 0 0 0 0 0 0 0 
35 0 1 0 0 0 2 13 0 0 0 0 0 0 0 
36 9 1 0 0 0 2 12 0 0 0 0 0 0 0 
37 9 1 0 0 0 2 11 0 0 0 0 0 0 0 
38 9 1 0 0 0 2 10 0 0 0 3 0 0 0 
39 10 1 0 0 0 1 8 0 0 0 1 0 0 0 
40 10 1 0 0 0 1 7 0 0 0 0 0 0 0 
41 10 1 1 0 0 1 6 0 0 0 1 1 0 9834 
44 10 1 0 0 0 1 8 0 0 0 1 0 0 0 
45 10 1 0 0 0 1 7 0 0 0 0 0 0 0 
46 5 1 0 0 0 1 6 0 0 0 0 0 0 0 
49 0 1 0 0 0 2 5 0 0 0 0 0 0 0 
50 10 1 0 0 0 2 4 0 0 0 0 0 0 0 
51 10 1 0 0 0 2 3 0 0 0 0 0 0 0 
52 10 1 0 0 0 2 2 0 0 0 3 0 0 0 
53 11 1 0 0 0 1 0 0 0 0 1 0 0 0 
54 11 0 0 0 0 0 -1 0 0 1 0 0 0 0 
57 11 1 0 0 0 1 0 0 0 0 1 0 0 0 


This is the critical path for program 23:
[22] Most complex (longest) path file: test000001.smt2
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var flag int 0
var iterations int 20
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun flag () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  flag (_ bv3 32) ) (concat  (select  flag (_ bv2 32) ) (concat  (select  flag (_ bv1 32) ) (select  flag (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvslt  (_ bv1 32) ?B1 ) (bvsle  ?B1 (_ bv20 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array flag[4] : w32 -> w8 = symbolic
(query [(Slt 1
              N0:(ReadLSB w32 0 flag))
         (Sle N0
             20)
         (Eq false
             (Slt 0
                 N0))]
        false)


Test case: test000002
[Parsed from .ktest]
var flag int 1
var iterations int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun flag () (Array (_ BitVec 32) (_ BitVec 8) ) )
(declare-fun iterations () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (let ( (?B1 (concat  (select  flag (_ bv3 32) ) (concat  (select  flag (_ bv2 32) ) (concat  (select  flag (_ bv1 32) ) (select  flag (_ bv0 32) ) ) ) ) ) (?B2 (concat  (select  iterations (_ bv3 32) ) (concat  (select  iterations (_ bv2 32) ) (concat  (select  iterations (_ bv1 32) ) (select  iterations (_ bv0 32) ) ) ) ) ) ) (and  (bvslt  (_ bv1 32) ?B1 ) (and  (bvsle  ?B1 (_ bv20 32) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) (and  (bvsle  (_ bv1 32) ?B2 ) (bvsle  ?B2 (_ bv1 32) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array flag[4] : w32 -> w8 = symbolic
array iterations[4] : w32 -> w8 = symbolic
(query [(Slt 1
              N0:(ReadLSB w32 0 flag))
         (Sle N0
             20)
         (Eq false
             (Slt 0
                 N0))
         (Sle 1
             N1:(ReadLSB w32 0 iterations))
         (Sle N1
             1)]
        false)


--- Program 100 ---
[run.istats content]
version: 1
creator: klee
pid: 9069
cmd: 65.bc


positions: instr line
event: Icov : CoveredInstructions
event: Forks : Forks
event: Ireal : InstructionRealTimes
event: Itime : InstructionTimes
event: I : Instructions
event: UCdist : MinDistToUncovered
event: Rtime : ResolveTime
event: States : States
event: Iuncov : UncoveredInstructions
event: Q : Queries
event: Qiv : QueriesInvalid
event: Qv : QueriesValid
event: Qtime : QueryTime
events: Icov Forks Ireal Itime I UCdist Rtime States Iuncov Q Qiv Qv Qtime 
ob=assembly.ll
fl=65.c
fn=main
11 5 1 0 0 0 1 25 0 0 0 0 0 0 0 
12 5 1 0 0 0 1 24 0 0 0 0 0 0 0 
13 5 1 0 0 0 1 23 0 0 0 0 0 0 0 
14 5 1 0 0 0 1 22 0 0 0 1 0 0 0 
15 6 1 0 0 0 1 21 0 0 0 0 0 0 0 
16 6 1 0 0 0 1 19 0 0 0 0 0 0 0 
17 7 1 0 0 0 1 17 0 0 0 0 0 0 0 
18 7 1 0 0 0 1 16 0 0 0 2 0 0 0 
19 8 1 0 0 0 1 14 0 0 0 1 0 0 0 
20 8 1 0 0 0 1 13 0 0 0 0 0 0 0 
21 8 1 1 0 0 1 12 0 0 0 1 2 0 27368 
24 8 1 0 0 0 1 14 0 0 0 1 0 0 0 
25 8 1 0 0 0 1 13 0 0 0 0 0 0 0 
26 5 1 0 0 0 1 12 0 0 0 0 0 0 0 
29 0 1 0 0 0 2 11 0 0 0 0 0 0 0 
30 8 1 0 0 0 2 10 0 0 0 0 0 0 0 
31 8 1 0 0 0 2 9 0 0 0 0 0 0 0 
32 8 1 0 0 0 2 8 0 0 0 3 0 0 0 
33 9 1 0 0 0 1 6 0 0 0 0 0 0 0 
34 9 1 0 0 0 1 4 0 0 0 1 0 0 0 
35 10 1 0 0 0 1 3 0 0 0 0 0 0 0 
36 10 1 0 0 0 1 1 0 0 0 1 0 0 0 
37 10 1 0 0 0 1 0 0 0 0 0 0 0 0 
40 10 1 0 0 0 11 0 0 0 0 11 0 0 0 
41 10 1 0 0 0 11 0 0 0 0 11 0 0 0 
42 10 1 0 0 0 11 0 0 0 0 0 0 0 0 
43 10 1 10 0 0 11 0 0 0 0 11 10 1 1298538 
46 11 1 0 0 0 10 11 0 0 0 10 0 0 0 
47 11 1 0 0 0 10 10 0 0 0 10 0 0 0 
48 11 1 0 0 0 10 9 0 0 0 0 0 0 0 
49 11 1 0 0 0 10 8 0 0 0 10 0 0 0 
50 12 1 0 0 0 10 7 0 0 0 10 0 0 0 
51 12 1 0 0 0 10 6 0 0 0 0 0 0 0 
52 12 1 0 0 0 10 5 0 0 0 10 0 0 0 
53 13 1 0 0 0 10 4 0 0 0 10 0 0 0 
54 13 1 0 0 0 10 3 0 0 0 0 0 0 0 
55 13 1 0 0 0 10 2 0 0 0 10 0 0 0 
58 13 1 0 0 0 10 4 0 0 0 10 0 0 0 
59 13 1 0 0 0 10 3 0 0 0 0 0 0 0 
60 13 1 0 0 0 10 2 0 0 0 10 0 0 0 
63 13 1 0 0 0 10 4 0 0 0 10 0 0 0 
64 13 1 0 0 0 10 3 0 0 0 0 0 0 0 
65 13 1 0 0 0 10 2 0 0 0 10 0 0 0 
68 13 1 0 0 0 10 4 0 0 0 10 0 0 0 
69 13 1 0 0 0 10 3 0 0 0 0 0 0 0 
70 13 1 0 0 0 10 2 0 0 0 10 0 0 0 
73 13 1 0 0 0 10 4 0 0 0 10 0 0 0 
74 13 1 0 0 0 10 3 0 0 0 0 0 0 0 
75 13 1 0 0 0 10 2 0 0 0 10 0 0 0 
78 13 1 0 0 0 10 0 0 0 0 10 0 0 0 
79 13 1 0 0 0 10 0 0 0 0 0 0 0 0 
80 13 1 9 0 0 10 0 0 0 0 10 9 1 1688430 
83 15 1 0 0 0 10 2 0 0 0 10 0 0 0 
84 15 1 0 0 0 10 1 0 0 0 0 0 0 0 
85 15 1 0 0 0 10 0 0 0 0 10 0 0 0 
88 15 1 0 0 0 10 2 0 0 0 10 0 0 0 
89 15 1 0 0 0 10 1 0 0 0 0 0 0 0 
90 15 1 0 0 0 10 0 0 0 0 10 0 0 0 
93 5 1 0 0 0 10 0 0 0 0 0 0 0 0 
96 17 1 0 0 0 10 0 0 0 0 10 0 0 0 
97 17 1 0 0 0 10 0 0 0 0 0 0 0 0 
n=non-negative-int 0
97 17 10 0 0 0 100 0 0 0 0 55 0 0 0 
98 17 1 0 0 0 10 0 0 0 0 10 0 0 0 
99 17 1 0 0 0 10 0 0 0 0 0 0 0 0 
102 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
103 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
104 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
107 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
108 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
109 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
112 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
113 19 1 9 0 0 11 0 0 0 0 11 9 2 1510123 
116 20 1 0 0 0 10 6 0 0 0 10 0 0 0 
117 20 1 0 0 0 10 5 0 0 0 10 0 0 0 
118 20 1 0 0 0 10 4 0 0 0 0 0 0 0 
119 20 1 0 0 0 10 3 0 0 0 10 0 0 0 
120 20 1 0 0 0 10 2 0 0 0 0 0 0 0 
121 20 1 0 0 0 10 1 0 0 0 10 0 0 0 
122 20 1 0 0 0 10 0 0 0 0 0 0 0 0 
125 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
126 21 1 0 0 0 10 0 0 0 0 0 0 0 0 
129 23 1 0 0 0 1 0 0 0 0 1 0 0 0 
132 23 1 0 0 0 10 0 0 0 0 10 0 0 0 
133 23 1 0 0 0 10 0 0 0 0 0 0 0 0 
fn=main
14 5 1 0 0 0 1 25 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 24 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 23 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 22 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 21 0 0 0 1 0 0 0 
19 6 1 0 0 0 1 20 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 18 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 16 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 15 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 13 0 0 0 1 0 0 0 
24 8 1 0 0 0 1 12 0 0 0 0 0 0 0 
25 8 1 1 0 0 1 11 0 0 0 1 2 0 27368 
28 8 1 0 0 0 1 14 0 0 0 1 0 0 0 
29 8 1 0 0 0 1 13 0 0 0 0 0 0 0 
30 5 1 0 0 0 1 12 0 0 0 0 0 0 0 
33 0 1 0 0 0 11 11 0 0 0 0 0 0 0 
34 10 1 0 0 0 11 10 0 0 0 0 0 0 0 
35 10 1 0 0 0 11 9 0 0 0 11 0 0 0 
36 10 1 0 0 0 11 8 0 0 0 0 0 0 0 
37 10 1 0 0 0 11 7 0 0 0 11 0 0 0 
40 10 1 0 0 0 11 0 0 0 0 11 0 0 0 
41 10 1 0 0 0 11 0 0 0 0 0 0 0 0 
42 10 1 0 0 0 11 0 0 0 0 11 0 0 0 
43 10 1 0 0 0 11 0 0 0 0 0 0 0 0 
46 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
47 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
48 11 1 0 0 0 10 0 0 0 0 0 0 0 0 
49 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
52 13 1 0 0 0 10 0 0 0 0 10 0 0 0 
53 13 1 0 0 0 10 0 0 0 0 10 0 0 0 
54 13 1 0 0 0 10 0 0 0 0 0 0 0 0 
57 15 1 0 0 0 10 0 0 0 0 1 0 0 0 
58 15 1 0 0 0 10 0 0 0 0 1 0 0 0 
59 15 1 0 0 0 10 0 0 0 0 0 0 0 0 
60 15 1 0 0 0 10 0 0 0 0 1 0 0 0 
61 5 1 0 0 0 10 0 0 0 0 0 0 0 0 
64 17 1 0 0 0 11 0 0 0 0 11 0 0 0 
65 17 1 0 0 0 11 0 0 0 0 0 0 0 0 
66 17 1 0 0 0 11 0 0 0 0 11 0 0 0 
69 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
70 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
71 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
72 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
75 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
76 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
77 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
78 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
81 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
82 21 1 0 0 0 10 0 0 0 0 0 0 0 0 
85 23 1 0 0 0 10 0 0 0 0 10 0 0 0 
88 23 1 0 0 0 10 8 0 0 0 10 0 0 0 
89 23 1 0 0 0 10 7 0 0 0 0 0 0 0 
90 23 1 0 0 0 10 6 0 0 0 0 0 0 0 
91 23 1 0 0 0 10 5 0 0 0 10 0 0 0 
92 23 1 0 0 0 10 4 0 0 0 0 0 0 0 
93 23 1 0 0 0 10 3 0 0 0 10 0 0 0 
94 23 1 0 0 0 10 2 0 0 0 0 0 0 0 
95 23 1 0 0 0 10 1 0 0 0 10 0 0 0 
96 23 1 0 0 0 10 0 0 0 0 0 0 0 0 
99 25 1 0 0 0 11 0 0 0 0 0 0 0 0 
102 26 1 0 0 0 11 0 0 0 0 11 0 0 0 
103 26 1 0 0 0 11 0 0 0 0 0 0 0 0 
104 26 1 0 0 0 11 0 0 0 0 11 0 0 0 
107 26 1 0 0 0 11 0 0 0 0 11 0 0 0 
108 26 1 0 0 0 11 0 0 0 0 0 0 0 0 
109 26 1 0 0 0 11 0 0 0 0 11 0 0 0 
112 26 1 0 0 0 11 0 0 0 0 0 0 0 0 
115 27 1 0 0 0 10 0 0 0 0 10 0 0 0 
116 27 1 0 0 0 10 0 0 0 0 10 0 0 0 
117 27 1 0 0 0 10 0 0 0 0 0 0 0 0 
118 27 1 0 0 0 10 0 0 0 0 10 0 0 0 
119 27 1 0 0 0 10 0 0 0 0 0 0 0 0 
120 27 1 0 0 0 10 0 0 0 0 0 0 0 0 
123 28 1 0 0 0 10 0 0 0 0 10 0 0 0 
126 28 1 0 0 0 11 0 0 0 0 11 0 0 0 
127 28 1 0 0 0 11 0 0 0 0 0 0 0 0 
fn=main
14 5 1 0 0 0 1 25 0 0 0 0 0 0 0 
15 5 1 0 0 0 1 24 0 0 0 0 0 0 0 
16 5 1 0 0 0 1 23 0 0 0 0 0 0 0 
17 5 1 0 0 0 1 22 0 0 0 0 0 0 0 
18 5 1 0 0 0 1 21 0 0 0 1 0 0 0 
19 6 1 0 0 0 1 20 0 0 0 0 0 0 0 
20 6 1 0 0 0 1 18 0 0 0 0 0 0 0 
21 7 1 0 0 0 1 16 0 0 0 0 0 0 0 
22 7 1 0 0 0 1 15 0 0 0 2 0 0 0 
23 8 1 0 0 0 1 13 0 0 0 1 0 0 0 
24 8 1 0 0 0 1 12 0 0 0 0 0 0 0 
25 8 1 1 0 0 1 11 0 0 0 1 2 0 27368 
28 8 1 0 0 0 1 14 0 0 0 1 0 0 0 
29 8 1 0 0 0 1 13 0 0 0 0 0 0 0 
30 5 1 0 0 0 1 12 0 0 0 0 0 0 0 
33 0 1 0 0 0 11 11 0 0 0 0 0 0 0 
34 10 1 0 0 0 11 10 0 0 0 0 0 0 0 
35 10 1 0 0 0 11 9 0 0 0 11 0 0 0 
36 10 1 0 0 0 11 8 0 0 0 0 0 0 0 
37 10 1 0 0 0 11 7 0 0 0 11 0 0 0 
40 10 1 0 0 0 11 0 0 0 0 11 0 0 0 
41 10 1 0 0 0 11 0 0 0 0 0 0 0 0 
42 10 1 0 0 0 11 0 0 0 0 11 0 0 0 
43 10 1 0 0 0 11 0 0 0 0 0 0 0 0 
46 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
47 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
48 11 1 0 0 0 10 0 0 0 0 0 0 0 0 
49 11 1 0 0 0 10 0 0 0 0 10 0 0 0 
52 13 1 0 0 0 10 0 0 0 0 10 0 0 0 
53 13 1 0 0 0 10 0 0 0 0 0 0 0 0 
54 13 1 0 0 0 10 0 0 0 0 10 0 0 0 
57 15 1 0 0 0 10 0 0 0 0 1 0 0 0 
58 15 1 0 0 0 10 0 0 0 0 1 0 0 0 
59 15 1 0 0 0 10 0 0 0 0 0 0 0 0 
60 15 1 0 0 0 10 0 0 0 0 1 0 0 0 
61 5 1 0 0 0 10 0 0 0 0 0 0 0 0 
64 17 1 0 0 0 11 0 0 0 0 11 0 0 0 
65 17 1 0 0 0 11 0 0 0 0 0 0 0 0 
66 17 1 0 0 0 11 0 0 0 0 11 0 0 0 
69 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
70 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
71 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
72 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
75 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
76 19 1 0 0 0 11 0 0 0 0 11 0 0 0 
77 19 1 0 0 0 11 0 0 0 0 0 0 0 0 
78 19 1 0 0 0 11 0 0 0 0 11 0 1 1493246 
81 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
82 21 1 0 0 0 10 0 0 0 0 10 0 0 0 
83 21 1 0 0 0 10 0 0 0 0 0 0 0 0 
cfl=runtime/Intrinsic/klee_div_zero_check.c
cfn=klee_div_zero_check
calls=10 120 25
120 25 1 0 0 0 10 0 0 0 0 0 0 0 0 
121 25 1 0 0 0 10 0 0 0 0 10 0 10 1091843 
122 26 1 0 0 0 10 0 0 0 0 0 0 0 0 
123 26 1 0 0 0 10 0 0 0 0 10 0 0 0 
124 27 1 0 0 0 10 0 0 0 0 10 0 0 0 
127 28 1 0 0 0 11 0 0 0 0 0 0 0 0 
128 28 1 0 0 0 11 0 0 0 0 11 0 0 0 
129 28 1 0 0 0 11 0 0 0 0 0 0 0 0 
cfn=run.istats
calls=11 10 0
10 0 11 0 0 0 100 0 0 0 0 55 0 0 0 
11 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
12 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
13 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
14 5 1 0 0 0 11 0 0 0 0 0 0 0 0 
15 6 1 0 0 0 11 0 0 0 0 0 0 0 0 
16 6 1 0 0 0 11 0 0 0 0 0 0 0 0 
18 7 1 0 0 0 11 0 0 0 0 11 0 0 0 
19 7 1 0 0 0 11 0 0 0 0 0 0 0 0 
20 7 1 0 0 0 11 0 0 0 0 0 0 0 0 
21 7 1 0 0 0 11 0 0 0 0 0 0 0 0 
22 7 1 0 0 0 11 0 0 0 0 0 0 0 0 
23 7 1 0 0 0 11 0 0 0 0 0 0 0 0 
24 7 1 0 0 0 11 0 0 0 0 11 0 0 0 
27 9 1 0 0 0 11 0 0 0 0 0 0 0 0 
28 9 1 0 0 0 11 0 0 0 0 11 0 0 0 
29 9 1 0 0 0 11 0 0 0 0 0 0 0 0 
30 9 1 0 0 0 11 0 0 0 0 0 0 0 0 
31 9 1 0 0 0 11 0 0 0 0 0 0 0 0 
32 9 1 0 0 0 11 0 0 0 0 11 0 0 0 
35 10 1 0 0 0 11 0 0 0 0 11 0 0 0 
36 10 1 0 0 0 11 0 0 0 0 0 0 0 0 
fn=run
44 0 1 0 0 0 55 0 0 0 0 25 0 0 0 
45 0 1 0 0 0 55 0 0 0 0 0 0 0 0 
46 0 1 0 0 0 55 0 0 0 0 25 0 0 0 
47 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
48 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
49 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
50 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
51 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
52 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
53 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
54 1 1 0 0 0 55 0 0 0 0 0 0 0 0 
55 2 1 0 0 0 55 0 0 0 0 0 0 0 0 
56 2 1 0 0 0 55 0 0 0 0 0 0 0 0 
57 2 1 0 0 0 55 0 0 0 0 55 0 0 0 
58 3 1 0 0 0 55 0 0 0 0 0 0 0 0 
59 3 1 0 0 0 55 0 0 0 0 55 0 0 0 
60 4 1 0 0 0 55 0 0 0 0 55 0 0 0 
61 4 1 0 0 0 55 0 0 0 0 0 0 0 0 
62 4 1 0 0 0 55 0 0 0 0 0 0 0 0 
63 4 1 0 0 0 55 0 0 0 0 0 0 0 0 
64 4 1 0 0 0 55 0 0 0 0 0 0 0 0 
65 4 1 0 0 0 55 0 0 0 0 0 0 0 0 
66 4 1 1 0 0 55 0 0 0 0 55 1 2 721827 
69 5 1 0 0 0 55 0 0 0 0 0 0 0 0 
70 5 1 0 0 0 55 0 0 0 0 0 0 0 0 
71 5 1 0 0 0 55 0 0 0 0 0 0 0 0 
72 5 1 0 0 0 55 0 0 0 0 0 0 0 0 
73 5 1 0 0 0 55 0 0 0 0 0 0 0 0 
74 5 1 0 0 0 55 0 0 0 0 0 0 0 0 
75 5 1 1 0 0 55 0 0 0 0 0 1 1 245648 
78 6 1 0 0 0 55 0 0 0 0 0 0 0 0 
79 6 1 0 0 0 55 0 0 0 0 0 0 0 0 
80 6 1 0 0 0 55 0 0 0 0 0 0 0 0 
81 6 1 0 0 0 55 0 0 0 0 0 0 0 0 
82 6 1 0 0 0 55 0 0 0 0 0 0 0 0 
83 6 1 0 0 0 55 0 0 0 0 0 0 0 0 
84 6 1 1 0 0 55 0 0 0 0 0 1 1 232528 
87 7 1 0 0 0 65 0 0 0 0 0 0 0 0 
88 7 1 0 0 0 65 0 0 0 0 0 0 0 0 
89 7 1 0 0 0 65 0 0 0 0 0 0 0 0 
90 7 1 0 0 0 65 0 0 0 0 0 0 0 0 
91 7 1 0 0 0 65 0 0 0 0 0 0 0 0 
92 7 1 1 0 0 65 0 0 0 0 0 1 1 496330 
95 8 1 0 0 0 55 0 0 0 0 0 0 0 0 
96 8 1 0 0 0 55 0 0 0 0 0 0 0 0 
97 8 1 0 0 0 55 0 0 0 0 0 0 0 0 
98 8 1 0 0 0 55 0 0 0 0 0 0 0 0 
99 8 1 0 0 0 55 0 0 0 0 0 0 0 0 
100 8 1 1 0 0 55 0 0 0 0 0 1 1 127765 
103 9 1 0 0 0 65 0 0 0 0 0 0 0 0 
104 9 1 0 0 0 65 0 0 0 0 0 0 0 0 
105 9 1 0 0 0 65 0 0 0 0 65 0 0 0 
106 9 1 0 0 0 65 0 0 0 0 0 0 0 0 
109 11 1 0 0 0 65 0 0 0 0 65 0 0 0 
110 11 1 0 0 0 65 0 0 0 0 0 0 0 0 
111 11 1 0 0 0 65 0 0 0 0 0 0 0 0 
112 11 1 0 0 0 65 0 0 0 0 65 0 0 0 
115 12 1 0 0 0 55 0 0 0 0 0 0 0 0 
116 12 1 0 0 0 55 0 0 0 0 55 0 0 0 
117 12 1 0 0 0 55 0 0 0 0 0 0 0 0 
118 12 1 0 0 0 55 0 0 0 0 0 0 0 0 
119 12 1 1 0 0 55 0 0 0 0 55 1 1 234633 
122 13 1 0 0 0 65 0 0 0 0 65 0 0 0 
123 13 1 0 0 0 65 0 0 0 0 0 0 0 0 
124 13 1 0 0 0 65 0 0 0 0 0 0 0 0 
125 13 1 0 0 0 65 0 0 0 0 65 0 0 0 
128 15 1 0 0 0 55 0 0 0 0 0 0 0 0 
129 15 1 0 0 0 55 0 0 0 0 55 0 0 0 
130 15 1 0 0 0 55 0 0 0 0 0 0 0 0 
131 15 1 0 0 0 55 0 0 0 0 0 0 0 0 
132 15 1 1 0 0 55 0 0 0 0 55 1 1 252626 
135 18 1 0 0 0 65 0 0 0 0 0 0 0 0 
136 18 1 0 0 0 65 0 0 0 0 65 0 0 0 


This is the critical path for program 65:
[64] Most complex (longest) path file: test000007.kquery
    Number of constraints: 1

Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (=  false (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq false
             (Sle 0
                  (ReadLSB w32 0 n)))]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (=  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Eq 0
             (ReadLSB w32 0 n))]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (let  ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv1000 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)
         (Eq false (Slt 0 N0))]
        false)


Test case: test000004
[Parsed from .ktest]
var n int 2
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (let  ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv1000 32) ) ) (bvslt  (_ bv0 32) ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)
         (Slt 0 N0)]
        false)


Test case: test000005
[Parsed from .ktest]
var n int 1000
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (let  ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv1000 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)
         (Eq false (Slt 0 N0)]
        false)


Test case: test000006
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (let  ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv1000 32) ) ) (bvslt  (_ bv0 32) ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)
         (Slt 0 N0)]
        false)


Test case: test000001
[Parsed from .ktest]
var n int -1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (and  (bvsle  (_ bv0 32) (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) (bvsle  (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) (_ bv1000 32) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)]
        false)


Test case: test000002
[Parsed from .ktest]
var n int 0
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (let  ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv1000 32) ) ) (=  false (bvslt  (_ bv0 32) ?B1 ) ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)
         (Eq false (Slt 0 N0)]
        false)


Test case: test000003
[Parsed from .ktest]
var n int 1
[.smt2 content]
(set-logic QF_AUFBV )
(declare-fun n () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert  (let  ( (?B1 (concat  (select  n (_ bv3 32) ) (concat  (select  n (_ bv2 32) ) (concat  (select  n (_ bv1 32) ) (select  n (_ bv0 32) ) ) ) ) ) ) (and  (and  (bvsle  (_ bv0 32) ?B1 ) (bvsle  ?B1 (_ bv1000 32) ) ) (bvslt  (_ bv0 32) ?B1 ) ) ) )
(check-sat)
(exit)

[.kquery content]
array n[4] : w32 -> w8 = symbolic
(query [(Sle 0
              N0:(ReadLSB w32 0 n))
         (Sle N0 1000)
         (Slt 0 N0)
         (Slt 0 N0)]
        false)


