array dividend[4] : w32 -> w8 = symbolic
array divisor[4] : w32 -> w8 = symbolic
(query [(Slt 0
              N0:(ReadLSB w32 0 divisor))
         (Sle N0 100)
         (Sle 0
              N1:(ReadLSB w32 0 dividend))
         (Sle N1 1000)
         (Sle N0 N1)
         (Sle N0 N2:(Sub w32 N1 N0))
         (Sle N0 N3:(Sub w32 N2 N0))
         (Sle N0 N4:(Sub w32 N3 N0))
         (Sle N0 N5:(Sub w32 N4 N0))
         (Sle N0 N6:(Sub w32 N5 N0))
         (Sle N0 N7:(Sub w32 N6 N0))
         (Sle N0 N8:(Sub w32 N7 N0))
         (Sle N0 N9:(Sub w32 N8 N0))
         (Sle N0 N10:(Sub w32 N9 N0))
         (Sle N0 N11:(Sub w32 N10 N0))
         (Sle N0 N12:(Sub w32 N11 N0))
         (Sle N0 N13:(Sub w32 N12 N0))
         (Sle N0 N14:(Sub w32 N13 N0))
         (Sle N0 N15:(Sub w32 N14 N0))
         (Sle N0 N16:(Sub w32 N15 N0))
         (Sle N0 N17:(Sub w32 N16 N0))
         (Sle N0 N18:(Sub w32 N17 N0))
         (Sle N0 N19:(Sub w32 N18 N0))
         (Sle N0 N20:(Sub w32 N19 N0))
         (Sle N0 N21:(Sub w32 N20 N0))
         (Sle N0 N22:(Sub w32 N21 N0))
         (Sle N0 N23:(Sub w32 N22 N0))
         (Sle N0 N24:(Sub w32 N23 N0))
         (Sle N0 N25:(Sub w32 N24 N0))
         (Eq false
             (Sle N0 (Sub w32 N25 N0)))]
        false)
